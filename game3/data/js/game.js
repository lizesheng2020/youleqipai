/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 60:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// A library of seedable RNGs implemented in Javascript.
//
// Usage:
//
// var seedrandom = require('seedrandom');
// var random = seedrandom(1); // or any seed.
// var x = random();       // 0 <= x < 1.  Every bit is random.
// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.

// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.
// Period: ~2^116
// Reported to pass all BigCrush tests.
var alea = __webpack_require__(/*! ./lib/alea */ "./node_modules/seedrandom/lib/alea.js");

// xor128, a pure xor-shift generator by George Marsaglia.
// Period: 2^128-1.
// Reported to fail: MatrixRank and LinearComp.
var xor128 = __webpack_require__(/*! ./lib/xor128 */ "./node_modules/seedrandom/lib/xor128.js");

// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.
// Period: 2^192-2^32
// Reported to fail: CollisionOver, SimpPoker, and LinearComp.
var xorwow = __webpack_require__(/*! ./lib/xorwow */ "./node_modules/seedrandom/lib/xorwow.js");

// xorshift7, by François Panneton and Pierre L'ecuyer, takes
// a different approach: it adds robustness by allowing more shifts
// than Marsaglia's original three.  It is a 7-shift generator
// with 256 bits, that passes BigCrush with no systmatic failures.
// Period 2^256-1.
// No systematic BigCrush failures reported.
var xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ "./node_modules/seedrandom/lib/xorshift7.js");

// xor4096, by Richard Brent, is a 4096-bit xor-shift with a
// very long period that also adds a Weyl generator. It also passes
// BigCrush with no systematic failures.  Its long period may
// be useful if you have many generators and need to avoid
// collisions.
// Period: 2^4128-2^32.
// No systematic BigCrush failures reported.
var xor4096 = __webpack_require__(/*! ./lib/xor4096 */ "./node_modules/seedrandom/lib/xor4096.js");

// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random
// number generator derived from ChaCha, a modern stream cipher.
// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf
// Period: ~2^127
// No systematic BigCrush failures reported.
var tychei = __webpack_require__(/*! ./lib/tychei */ "./node_modules/seedrandom/lib/tychei.js");

// The original ARC4-based prng included in this library.
// Period: ~2^1600
var sr = __webpack_require__(/*! ./seedrandom */ "./node_modules/seedrandom/seedrandom.js");

sr.alea = alea;
sr.xor128 = xor128;
sr.xorwow = xorwow;
sr.xorshift7 = xorshift7;
sr.xor4096 = xor4096;
sr.tychei = tychei;

module.exports = sr;


/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 109:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010
// http://baagoe.com/en/RandomMusings/javascript/
// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror
// Original work is under MIT license -

// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.



(function(global, module, define) {

function Alea(seed) {
  var me = this, mash = Mash();

  me.next = function() {
    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32
    me.s0 = me.s1;
    me.s1 = me.s2;
    return me.s2 = t - (me.c = t | 0);
  };

  // Apply the seeding algorithm from Baagoe.
  me.c = 1;
  me.s0 = mash(' ');
  me.s1 = mash(' ');
  me.s2 = mash(' ');
  me.s0 -= mash(seed);
  if (me.s0 < 0) { me.s0 += 1; }
  me.s1 -= mash(seed);
  if (me.s1 < 0) { me.s1 += 1; }
  me.s2 -= mash(seed);
  if (me.s2 < 0) { me.s2 += 1; }
  mash = null;
}

function copy(f, t) {
  t.c = f.c;
  t.s0 = f.s0;
  t.s1 = f.s1;
  t.s2 = f.s2;
  return t;
}

function impl(seed, opts) {
  var xg = new Alea(seed),
      state = opts && opts.state,
      prng = xg.next;
  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }
  prng.double = function() {
    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53
  };
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

function Mash() {
  var n = 0xefc8249d;

  var mash = function(data) {
    data = String(data);
    for (var i = 0; i < data.length; i++) {
      n += data.charCodeAt(i);
      var h = 0.02519603282416938 * n;
      n = h >>> 0;
      h -= n;
      h *= n;
      n = h >>> 0;
      h -= n;
      n += h * 0x100000000; // 2^32
    }
    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32
  };

  return mash;
}


if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.alea = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);




/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 98:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "Tyche-i" prng algorithm by
// Samuel Neves and Filipe Araujo.
// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  // Set up generator function.
  me.next = function() {
    var b = me.b, c = me.c, d = me.d, a = me.a;
    b = (b << 25) ^ (b >>> 7) ^ c;
    c = (c - d) | 0;
    d = (d << 24) ^ (d >>> 8) ^ a;
    a = (a - b) | 0;
    me.b = b = (b << 20) ^ (b >>> 12) ^ c;
    me.c = c = (c - d) | 0;
    me.d = (d << 16) ^ (c >>> 16) ^ a;
    return me.a = (a - b) | 0;
  };

  /* The following is non-inverted tyche, which has better internal
   * bit diffusion, but which is about 25% slower than tyche-i in JS.
  me.next = function() {
    var a = me.a, b = me.b, c = me.c, d = me.d;
    a = (me.a + me.b | 0) >>> 0;
    d = me.d ^ a; d = d << 16 ^ d >>> 16;
    c = me.c + d | 0;
    b = me.b ^ c; b = b << 12 ^ d >>> 20;
    me.a = a = a + b | 0;
    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;
    me.c = c = c + d | 0;
    b = b ^ c;
    return me.b = (b << 7 ^ b >>> 25);
  }
  */

  me.a = 0;
  me.b = 0;
  me.c = 2654435769 | 0;
  me.d = 1367130551;

  if (seed === Math.floor(seed)) {
    // Integer seed.
    me.a = (seed / 0x100000000) | 0;
    me.b = seed | 0;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 20; k++) {
    me.b ^= strseed.charCodeAt(k) | 0;
    me.next();
  }
}

function copy(f, t) {
  t.a = f.a;
  t.b = f.b;
  t.c = f.c;
  t.d = f.d;
  return t;
};

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.tychei = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);




/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 76:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xor128" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  me.x = 0;
  me.y = 0;
  me.z = 0;
  me.w = 0;

  // Set up generator function.
  me.next = function() {
    var t = me.x ^ (me.x << 11);
    me.x = me.y;
    me.y = me.z;
    me.z = me.w;
    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);
  };

  if (seed === (seed | 0)) {
    // Integer seed.
    me.x = seed;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 64; k++) {
    me.x ^= strseed.charCodeAt(k) | 0;
    me.next();
  }
}

function copy(f, t) {
  t.x = f.x;
  t.y = f.y;
  t.z = f.z;
  t.w = f.w;
  return t;
}

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xor128 = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);




/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 143:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.
//
// This fast non-cryptographic random number generator is designed for
// use in Monte-Carlo algorithms. It combines a long-period xorshift
// generator with a Weyl generator, and it passes all common batteries
// of stasticial tests for randomness while consuming only a few nanoseconds
// for each prng generated.  For background on the generator, see Brent's
// paper: "Some long-period random number generators using shifts and xors."
// http://arxiv.org/pdf/1004.3115v1.pdf
//
// Usage:
//
// var xor4096 = require('xor4096');
// random = xor4096(1);                        // Seed with int32 or string.
// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.
// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.
//
// For nonzero numeric keys, this impelementation provides a sequence
// identical to that by Brent's xorgens 3 implementaion in C.  This
// implementation also provides for initalizing the generator with
// string seeds, or for saving and restoring the state of the generator.
//
// On Chrome, this prng benchmarks about 2.1 times slower than
// Javascript's built-in Math.random().

(function(global, module, define) {

function XorGen(seed) {
  var me = this;

  // Set up generator function.
  me.next = function() {
    var w = me.w,
        X = me.X, i = me.i, t, v;
    // Update Weyl generator.
    me.w = w = (w + 0x61c88647) | 0;
    // Update xor generator.
    v = X[(i + 34) & 127];
    t = X[i = ((i + 1) & 127)];
    v ^= v << 13;
    t ^= t << 17;
    v ^= v >>> 15;
    t ^= t >>> 12;
    // Update Xor generator array state.
    v = X[i] = v ^ t;
    me.i = i;
    // Result is the combination.
    return (v + (w ^ (w >>> 16))) | 0;
  };

  function init(me, seed) {
    var t, v, i, j, w, X = [], limit = 128;
    if (seed === (seed | 0)) {
      // Numeric seeds initialize v, which is used to generates X.
      v = seed;
      seed = null;
    } else {
      // String seeds are mixed into v and X one character at a time.
      seed = seed + '\0';
      v = 0;
      limit = Math.max(limit, seed.length);
    }
    // Initialize circular array and weyl value.
    for (i = 0, j = -32; j < limit; ++j) {
      // Put the unicode characters into the array, and shuffle them.
      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);
      // After 32 shuffles, take v as the starting w value.
      if (j === 0) w = v;
      v ^= v << 10;
      v ^= v >>> 15;
      v ^= v << 4;
      v ^= v >>> 13;
      if (j >= 0) {
        w = (w + 0x61c88647) | 0;     // Weyl.
        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.
        i = (0 == t) ? i + 1 : 0;     // Count zeroes.
      }
    }
    // We have detected all zeroes; make the key nonzero.
    if (i >= 128) {
      X[(seed && seed.length || 0) & 127] = -1;
    }
    // Run the generator 512 times to further mix the state before using it.
    // Factoring this as a function slows the main generator, so it is just
    // unrolled here.  The weyl generator is not advanced while warming up.
    i = 127;
    for (j = 4 * 128; j > 0; --j) {
      v = X[(i + 34) & 127];
      t = X[i = ((i + 1) & 127)];
      v ^= v << 13;
      t ^= t << 17;
      v ^= v >>> 15;
      t ^= t >>> 12;
      X[i] = v ^ t;
    }
    // Storing state as object members is faster than using closure variables.
    me.w = w;
    me.X = X;
    me.i = i;
  }

  init(me, seed);
}

function copy(f, t) {
  t.i = f.i;
  t.w = f.w;
  t.X = f.X.slice();
  return t;
};

function impl(seed, opts) {
  if (seed == null) seed = +(new Date);
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (state.X) copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xor4096 = impl;
}

})(
  this,                                     // window object or global
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);


/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 93:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorshift7" algorithm by
// François Panneton and Pierre L'ecuyer:
// "On the Xorgshift Random Number Generators"
// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf

(function(global, module, define) {

function XorGen(seed) {
  var me = this;

  // Set up generator function.
  me.next = function() {
    // Update xor generator.
    var X = me.x, i = me.i, t, v, w;
    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);
    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);
    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);
    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);
    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);
    X[i] = v;
    me.i = (i + 1) & 7;
    return v;
  };

  function init(me, seed) {
    var j, w, X = [];

    if (seed === (seed | 0)) {
      // Seed state array using a 32-bit integer.
      w = X[0] = seed;
    } else {
      // Seed state using a string.
      seed = '' + seed;
      for (j = 0; j < seed.length; ++j) {
        X[j & 7] = (X[j & 7] << 15) ^
            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);
      }
    }
    // Enforce an array length of 8, not all zeroes.
    while (X.length < 8) X.push(0);
    for (j = 0; j < 8 && X[j] === 0; ++j);
    if (j == 8) w = X[7] = -1; else w = X[j];

    me.x = X;
    me.i = 0;

    // Discard an initial 256 values.
    for (j = 256; j > 0; --j) {
      me.next();
    }
  }

  init(me, seed);
}

function copy(f, t) {
  t.x = f.x.slice();
  t.i = f.i;
  return t;
}

function impl(seed, opts) {
  if (seed == null) seed = +(new Date);
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (state.x) copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xorshift7 = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);



/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/*! CommonJS bailout: this is used directly at 81:2-6 */
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorwow" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function(global, module, define) {

function XorGen(seed) {
  var me = this, strseed = '';

  // Set up generator function.
  me.next = function() {
    var t = (me.x ^ (me.x >>> 2));
    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;
    return (me.d = (me.d + 362437 | 0)) +
       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;
  };

  me.x = 0;
  me.y = 0;
  me.z = 0;
  me.w = 0;
  me.v = 0;

  if (seed === (seed | 0)) {
    // Integer seed.
    me.x = seed;
  } else {
    // String seed.
    strseed += seed;
  }

  // Mix in string seed, then discard an initial batch of 64 values.
  for (var k = 0; k < strseed.length + 64; k++) {
    me.x ^= strseed.charCodeAt(k) | 0;
    if (k == strseed.length) {
      me.d = me.x << 10 ^ me.x >>> 4;
    }
    me.next();
  }
}

function copy(f, t) {
  t.x = f.x;
  t.y = f.y;
  t.z = f.z;
  t.w = f.w;
  t.v = f.v;
  t.d = f.d;
  return t;
}

function impl(seed, opts) {
  var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function() { return (xg.next() >>> 0) / 0x100000000; };
  prng.double = function() {
    do {
      var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
    } while (result === 0);
    return result;
  };
  prng.int32 = xg.next;
  prng.quick = prng;
  if (state) {
    if (typeof(state) == 'object') copy(state, xg);
    prng.state = function() { return copy(xg, {}); }
  }
  return prng;
}

if (module && module.exports) {
  module.exports = impl;
} else if (__webpack_require__.amdD && __webpack_require__.amdO) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {
  this.xorwow = impl;
}

})(
  this,
   true && module,    // present in node.js
  __webpack_require__.amdD   // present with an AMD loader
);




/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, top-level-this-exports, __webpack_require__, __webpack_exports__ */
/*! CommonJS bailout: this is used directly at 250:41-45 */
/*! CommonJS bailout: module.exports is used directly at 232:35-49 */
/*! CommonJS bailout: module.exports is used directly at 233:2-16 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
Copyright 2019 David Bau.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

(function (global, pool, math) {
//
// The following constants are related to IEEE 754 limits.
//

var width = 256,        // each RC4 output is 0 <= x < 256
    chunks = 6,         // at least six RC4 outputs for each double
    digits = 52,        // there are 52 significant digits in a double
    rngname = 'random', // rngname: name for Math.random and Math.seedrandom
    startdenom = math.pow(width, chunks),
    significance = math.pow(2, digits),
    overflow = significance * 2,
    mask = width - 1,
    nodecrypto;         // node.js crypto module, initialized at the bottom.

//
// seedrandom()
// This is the seedrandom function described above.
//
function seedrandom(seed, options, callback) {
  var key = [];
  options = (options == true) ? { entropy: true } : (options || {});

  // Flatten the seed string or build one from local entropy if needed.
  var shortseed = mixkey(flatten(
    options.entropy ? [seed, tostring(pool)] :
    (seed == null) ? autoseed() : seed, 3), key);

  // Use the seed to initialize an ARC4 generator.
  var arc4 = new ARC4(key);

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.
  var prng = function() {
    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
        d = startdenom,                 //   and denominator d = 2 ^ 48.
        x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };

  prng.int32 = function() { return arc4.g(4) | 0; }
  prng.quick = function() { return arc4.g(4) / 0x100000000; }
  prng.double = prng;

  // Mix the randomness into accumulated entropy.
  mixkey(tostring(arc4.S), pool);

  // Calling convention: what to return as a function of prng, seed, is_math.
  return (options.pass || callback ||
      function(prng, seed, is_math_call, state) {
        if (state) {
          // Load the arc4 state from the given state if it has an S array.
          if (state.S) { copy(state, arc4); }
          // Only provide the .state method if requested via options.state.
          prng.state = function() { return copy(arc4, {}); }
        }

        // If called as a method of Math (Math.seedrandom()), mutate
        // Math.random because that is how seedrandom.js has worked since v1.0.
        if (is_math_call) { math[rngname] = prng; return seed; }

        // Otherwise, it is a newer calling convention, so return the
        // prng directly.
        else return prng;
      })(
  prng,
  shortseed,
  'global' in options ? options.global : (this == math),
  options.state);
}

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function ARC4(key) {
  var t, keylen = key.length,
      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) {
    s[i] = i++;
  }
  for (i = 0; i < width; i++) {
    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
    s[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  (me.g = function(count) {
    // Using instance members instead of closure state nearly doubles speed.
    var t, r = 0,
        i = me.i, j = me.j, s = me.S;
    while (count--) {
      t = s[i = mask & (i + 1)];
      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
    }
    me.i = i; me.j = j;
    return r;
    // For robust unpredictability, the function call below automatically
    // discards an initial batch of values.  This is called RC4-drop[256].
    // See http://google.com/search?q=rsa+fluhrer+response&btnI
  })(width);
}

//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
function copy(f, t) {
  t.i = f.i;
  t.j = f.j;
  t.S = f.S.slice();
  return t;
};

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function flatten(obj, depth) {
  var result = [], typ = (typeof obj), prop;
  if (depth && typ == 'object') {
    for (prop in obj) {
      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
    }
  }
  return (result.length ? result : typ == 'string' ? obj : obj + '\0');
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function mixkey(seed, key) {
  var stringseed = seed + '', smear, j = 0;
  while (j < stringseed.length) {
    key[mask & j] =
      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
  }
  return tostring(key);
}

//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
function autoseed() {
  try {
    var out;
    if (nodecrypto && (out = nodecrypto.randomBytes)) {
      // The use of 'out' to remember randomBytes makes tight minified code.
      out = out(width);
    } else {
      out = new Uint8Array(width);
      (global.crypto || global.msCrypto).getRandomValues(out);
    }
    return tostring(out);
  } catch (e) {
    var browser = global.navigator,
        plugins = browser && browser.plugins;
    return [+new Date, global, plugins, global.screen, tostring(pool)];
  }
}

//
// tostring()
// Converts an array of charcodes to a string
//
function tostring(a) {
  return String.fromCharCode.apply(0, a);
}

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);

//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//
if ( true && module.exports) {
  module.exports = seedrandom;
  // When in node.js, try using crypto package for autoseeding.
  try {
    nodecrypto = __webpack_require__(/*! crypto */ "?8465");
  } catch (ex) {}
} else if (true) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}


// End anonymous scope, and pass initial values.
})(
  // global: `self` in browsers (including strict mode and web workers),
  // otherwise `this` in Node and other environments
  (typeof self !== 'undefined') ? self : this,
  [],     // pool: entropy pool starts empty
  Math    // math: package containing random, pow, and seedrandom
);


/***/ }),

/***/ "./src/AsmCrypto/aes/aes.ts":
/*!**********************************!*\
  !*** ./src/AsmCrypto/aes/aes.ts ***!
  \**********************************/
/*! namespace exports */
/*! export AES [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AES": () => /* binding */ AES
/* harmony export */ });
/* harmony import */ var _aes_asm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aes.asm */ "./src/AsmCrypto/aes/aes.asm.js");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/utils */ "./src/AsmCrypto/other/utils.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");



class AES {
    constructor(key, iv, padding = true, mode, heap, asm) {
        this.pos = 0;
        this.len = 0;
        this.mode = mode;
        // The AES "worker"
        this.heap = heap ? heap : (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_init)().subarray(_aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.HEAP_DATA);
        this.asm = asm ? asm : new _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm(null, this.heap.buffer);
        // The AES object state
        this.pos = 0;
        this.len = 0;
        // Key
        const keylen = key.length;
        if (keylen !== 16 && keylen !== 24 && keylen !== 32)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalArgumentError('illegal key size');
        const keyview = new DataView(key.buffer, key.byteOffset, key.byteLength);
        this.asm.set_key(keylen >> 2, keyview.getUint32(0), keyview.getUint32(4), keyview.getUint32(8), keyview.getUint32(12), keylen > 16 ? keyview.getUint32(16) : 0, keylen > 16 ? keyview.getUint32(20) : 0, keylen > 24 ? keyview.getUint32(24) : 0, keylen > 24 ? keyview.getUint32(28) : 0);
        // IV
        if (iv !== undefined) {
            if (iv.length !== 16)
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalArgumentError('illegal iv size');
            let ivview = new DataView(iv.buffer, iv.byteOffset, iv.byteLength);
            this.asm.set_iv(ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12));
        }
        else {
            this.asm.set_iv(0, 0, 0, 0);
        }
        this.padding = padding;
    }
    AES_Encrypt_process(data) {
        if (!(0,_other_utils__WEBPACK_IMPORTED_MODULE_1__.is_bytes)(data))
            throw new TypeError("data isn't of expected type");
        let asm = this.asm;
        let heap = this.heap;
        let amode = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.ENC[this.mode];
        let hpos = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.HEAP_DATA;
        let pos = this.pos;
        let len = this.len;
        let dpos = 0;
        let dlen = data.length || 0;
        let rpos = 0;
        let rlen = (len + dlen) & -16;
        let wlen = 0;
        let result = new Uint8Array(rlen);
        while (dlen > 0) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, pos + len, data, dpos, dlen);
            len += wlen;
            dpos += wlen;
            dlen -= wlen;
            wlen = asm.cipher(amode, hpos + pos, len);
            if (wlen)
                result.set(heap.subarray(pos, pos + wlen), rpos);
            rpos += wlen;
            if (wlen < len) {
                pos += wlen;
                len -= wlen;
            }
            else {
                pos = 0;
                len = 0;
            }
        }
        this.pos = pos;
        this.len = len;
        return result;
    }
    AES_Encrypt_finish() {
        let asm = this.asm;
        let heap = this.heap;
        let amode = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.ENC[this.mode];
        let hpos = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.HEAP_DATA;
        let pos = this.pos;
        let len = this.len;
        let plen = 16 - (len % 16);
        let rlen = len;
        if (this.hasOwnProperty('padding')) {
            if (this.padding) {
                for (let p = 0; p < plen; ++p) {
                    heap[pos + len + p] = plen;
                }
                len += plen;
                rlen = len;
            }
            else if (len % 16) {
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalArgumentError('data length must be a multiple of the block size');
            }
        }
        else {
            len += plen;
        }
        const result = new Uint8Array(rlen);
        if (len)
            asm.cipher(amode, hpos + pos, len);
        if (rlen)
            result.set(heap.subarray(pos, pos + rlen));
        this.pos = 0;
        this.len = 0;
        return result;
    }
    AES_Decrypt_process(data) {
        if (!(0,_other_utils__WEBPACK_IMPORTED_MODULE_1__.is_bytes)(data))
            throw new TypeError("data isn't of expected type");
        let asm = this.asm;
        let heap = this.heap;
        let amode = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.DEC[this.mode];
        let hpos = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.HEAP_DATA;
        let pos = this.pos;
        let len = this.len;
        let dpos = 0;
        let dlen = data.length || 0;
        let rpos = 0;
        let rlen = (len + dlen) & -16;
        let plen = 0;
        let wlen = 0;
        if (this.padding) {
            plen = len + dlen - rlen || 16;
            rlen -= plen;
        }
        const result = new Uint8Array(rlen);
        while (dlen > 0) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, pos + len, data, dpos, dlen);
            len += wlen;
            dpos += wlen;
            dlen -= wlen;
            wlen = asm.cipher(amode, hpos + pos, len - (!dlen ? plen : 0));
            if (wlen)
                result.set(heap.subarray(pos, pos + wlen), rpos);
            rpos += wlen;
            if (wlen < len) {
                pos += wlen;
                len -= wlen;
            }
            else {
                pos = 0;
                len = 0;
            }
        }
        this.pos = pos;
        this.len = len;
        return result;
    }
    AES_Decrypt_finish() {
        let asm = this.asm;
        let heap = this.heap;
        let amode = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.DEC[this.mode];
        let hpos = _aes_asm__WEBPACK_IMPORTED_MODULE_0__.AES_asm.HEAP_DATA;
        let pos = this.pos;
        let len = this.len;
        let rlen = len;
        if (len > 0) {
            if (len % 16) {
                if (this.hasOwnProperty('padding')) {
                    throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalArgumentError('data length must be a multiple of the block size');
                }
                else {
                    len += 16 - (len % 16);
                }
            }
            asm.cipher(amode, hpos + pos, len);
            if (this.hasOwnProperty('padding') && this.padding) {
                let pad = heap[pos + rlen - 1];
                if (pad < 1 || pad > 16 || pad > rlen)
                    throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.SecurityError('bad padding');
                let pcheck = 0;
                for (let i = pad; i > 1; i--)
                    pcheck |= pad ^ heap[pos + rlen - i];
                if (pcheck)
                    throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.SecurityError('bad padding');
                rlen -= pad;
            }
        }
        const result = new Uint8Array(rlen);
        if (rlen > 0) {
            result.set(heap.subarray(pos, pos + rlen));
        }
        this.pos = 0;
        this.len = 0;
        return result;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/aes/cbc.ts":
/*!**********************************!*\
  !*** ./src/AsmCrypto/aes/cbc.ts ***!
  \**********************************/
/*! namespace exports */
/*! export AES_CBC [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AES_CBC": () => /* binding */ AES_CBC
/* harmony export */ });
/* harmony import */ var _aes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aes */ "./src/AsmCrypto/aes/aes.ts");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/utils */ "./src/AsmCrypto/other/utils.ts");


class AES_CBC {
    constructor(key, iv, padding = true, aes) {
        this.aes = aes ? aes : new _aes__WEBPACK_IMPORTED_MODULE_0__.AES(key, iv, padding, 'CBC');
    }
    static encrypt(data, key, padding = true, iv) {
        return new AES_CBC(key, iv, padding).encrypt(data);
    }
    static decrypt(data, key, padding = true, iv) {
        return new AES_CBC(key, iv, padding).decrypt(data);
    }
    encrypt(data) {
        const r1 = this.aes.AES_Encrypt_process(data);
        const r2 = this.aes.AES_Encrypt_finish();
        return (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__.joinBytes)(r1, r2);
    }
    decrypt(data) {
        const r1 = this.aes.AES_Decrypt_process(data);
        const r2 = this.aes.AES_Decrypt_finish();
        return (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__.joinBytes)(r1, r2);
    }
}


/***/ }),

/***/ "./src/AsmCrypto/aes/gcm.ts":
/*!**********************************!*\
  !*** ./src/AsmCrypto/aes/gcm.ts ***!
  \**********************************/
/*! namespace exports */
/*! export AES_GCM [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AES_GCM": () => /* binding */ AES_GCM
/* harmony export */ });
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/utils */ "./src/AsmCrypto/other/utils.ts");
/* harmony import */ var _aes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aes */ "./src/AsmCrypto/aes/aes.ts");
/* harmony import */ var _aes_asm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aes.asm */ "./src/AsmCrypto/aes/aes.asm.js");




const _AES_GCM_data_maxLength = 68719476704; // 2^36 - 2^5
class AES_GCM {
    constructor(key, nonce, adata, tagSize = 16, aes) {
        this.tagSize = tagSize;
        this.gamma0 = 0;
        this.counter = 1;
        this.aes = aes ? aes : new _aes__WEBPACK_IMPORTED_MODULE_2__.AES(key, undefined, false, 'CTR');
        // Init GCM
        this.aes.asm.gcm_init();
        // Tag size
        if (this.tagSize < 4 || this.tagSize > 16)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentError('illegal tagSize value');
        // Nonce
        const noncelen = nonce.length || 0;
        const noncebuf = new Uint8Array(16);
        if (noncelen !== 12) {
            this._gcm_mac_process(nonce);
            this.aes.heap[0] = 0;
            this.aes.heap[1] = 0;
            this.aes.heap[2] = 0;
            this.aes.heap[3] = 0;
            this.aes.heap[4] = 0;
            this.aes.heap[5] = 0;
            this.aes.heap[6] = 0;
            this.aes.heap[7] = 0;
            this.aes.heap[8] = 0;
            this.aes.heap[9] = 0;
            this.aes.heap[10] = 0;
            this.aes.heap[11] = noncelen >>> 29;
            this.aes.heap[12] = (noncelen >>> 21) & 255;
            this.aes.heap[13] = (noncelen >>> 13) & 255;
            this.aes.heap[14] = (noncelen >>> 5) & 255;
            this.aes.heap[15] = (noncelen << 3) & 255;
            this.aes.asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, 16);
            this.aes.asm.get_iv(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA);
            this.aes.asm.set_iv(0, 0, 0, 0);
            noncebuf.set(this.aes.heap.subarray(0, 16));
        }
        else {
            noncebuf.set(nonce);
            noncebuf[15] = 1;
        }
        const nonceview = new DataView(noncebuf.buffer);
        this.gamma0 = nonceview.getUint32(12);
        this.aes.asm.set_nonce(nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0);
        this.aes.asm.set_mask(0, 0, 0, 0xffffffff);
        // Associated data
        if (adata !== undefined) {
            if (adata.length > _AES_GCM_data_maxLength)
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentError('illegal adata length');
            if (adata.length) {
                this.adata = adata;
                this._gcm_mac_process(adata);
            }
            else {
                this.adata = undefined;
            }
        }
        else {
            this.adata = undefined;
        }
        // Counter
        if (this.counter < 1 || this.counter > 0xffffffff)
            throw new RangeError('counter must be a positive 32-bit integer');
        this.aes.asm.set_counter(0, 0, 0, (this.gamma0 + this.counter) | 0);
    }
    static encrypt(cleartext, key, nonce, adata, tagsize) {
        return new AES_GCM(key, nonce, adata, tagsize).encrypt(cleartext);
    }
    static decrypt(ciphertext, key, nonce, adata, tagsize) {
        return new AES_GCM(key, nonce, adata, tagsize).decrypt(ciphertext);
    }
    encrypt(data) {
        return this.AES_GCM_encrypt(data);
    }
    decrypt(data) {
        return this.AES_GCM_decrypt(data);
    }
    AES_GCM_Encrypt_process(data) {
        let dpos = 0;
        let dlen = data.length || 0;
        let asm = this.aes.asm;
        let heap = this.aes.heap;
        let counter = this.counter;
        let pos = this.aes.pos;
        let len = this.aes.len;
        let rpos = 0;
        let rlen = (len + dlen) & -16;
        let wlen = 0;
        if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)
            throw new RangeError('counter overflow');
        const result = new Uint8Array(rlen);
        while (dlen > 0) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, pos + len, data, dpos, dlen);
            len += wlen;
            dpos += wlen;
            dlen -= wlen;
            wlen = asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.ENC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, len);
            wlen = asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, wlen);
            if (wlen)
                result.set(heap.subarray(pos, pos + wlen), rpos);
            counter += wlen >>> 4;
            rpos += wlen;
            if (wlen < len) {
                pos += wlen;
                len -= wlen;
            }
            else {
                pos = 0;
                len = 0;
            }
        }
        this.counter = counter;
        this.aes.pos = pos;
        this.aes.len = len;
        return result;
    }
    AES_GCM_Encrypt_finish() {
        let asm = this.aes.asm;
        let heap = this.aes.heap;
        let counter = this.counter;
        let tagSize = this.tagSize;
        let adata = this.adata;
        let pos = this.aes.pos;
        let len = this.aes.len;
        const result = new Uint8Array(len + tagSize);
        asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.ENC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, (len + 15) & -16);
        if (len)
            result.set(heap.subarray(pos, pos + len));
        let i = len;
        for (; i & 15; i++)
            heap[pos + i] = 0;
        asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, i);
        const alen = adata !== undefined ? adata.length : 0;
        const clen = ((counter - 1) << 4) + len;
        heap[0] = 0;
        heap[1] = 0;
        heap[2] = 0;
        heap[3] = alen >>> 29;
        heap[4] = alen >>> 21;
        heap[5] = (alen >>> 13) & 255;
        heap[6] = (alen >>> 5) & 255;
        heap[7] = (alen << 3) & 255;
        heap[8] = heap[9] = heap[10] = 0;
        heap[11] = clen >>> 29;
        heap[12] = (clen >>> 21) & 255;
        heap[13] = (clen >>> 13) & 255;
        heap[14] = (clen >>> 5) & 255;
        heap[15] = (clen << 3) & 255;
        asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, 16);
        asm.get_iv(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA);
        asm.set_counter(0, 0, 0, this.gamma0);
        asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.ENC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, 16);
        result.set(heap.subarray(0, tagSize), len);
        this.counter = 1;
        this.aes.pos = 0;
        this.aes.len = 0;
        return result;
    }
    AES_GCM_Decrypt_process(data) {
        let dpos = 0;
        let dlen = data.length || 0;
        let asm = this.aes.asm;
        let heap = this.aes.heap;
        let counter = this.counter;
        let tagSize = this.tagSize;
        let pos = this.aes.pos;
        let len = this.aes.len;
        let rpos = 0;
        let rlen = len + dlen > tagSize ? (len + dlen - tagSize) & -16 : 0;
        let tlen = len + dlen - rlen;
        let wlen = 0;
        if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)
            throw new RangeError('counter overflow');
        const result = new Uint8Array(rlen);
        while (dlen > tlen) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, pos + len, data, dpos, dlen - tlen);
            len += wlen;
            dpos += wlen;
            dlen -= wlen;
            wlen = asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, wlen);
            wlen = asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.DEC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, wlen);
            if (wlen)
                result.set(heap.subarray(pos, pos + wlen), rpos);
            counter += wlen >>> 4;
            rpos += wlen;
            pos = 0;
            len = 0;
        }
        if (dlen > 0) {
            len += (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, 0, data, dpos, dlen);
        }
        this.counter = counter;
        this.aes.pos = pos;
        this.aes.len = len;
        return result;
    }
    AES_GCM_Decrypt_finish() {
        let asm = this.aes.asm;
        let heap = this.aes.heap;
        let tagSize = this.tagSize;
        let adata = this.adata;
        let counter = this.counter;
        let pos = this.aes.pos;
        let len = this.aes.len;
        let rlen = len - tagSize;
        if (len < tagSize)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalStateError('authentication tag not found');
        const result = new Uint8Array(rlen);
        const atag = new Uint8Array(heap.subarray(pos + rlen, pos + len));
        let i = rlen;
        for (; i & 15; i++)
            heap[pos + i] = 0;
        asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, i);
        asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.DEC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA + pos, i);
        if (rlen)
            result.set(heap.subarray(pos, pos + rlen));
        const alen = adata !== undefined ? adata.length : 0;
        const clen = ((counter - 1) << 4) + len - tagSize;
        heap[0] = 0;
        heap[1] = 0;
        heap[2] = 0;
        heap[3] = alen >>> 29;
        heap[4] = alen >>> 21;
        heap[5] = (alen >>> 13) & 255;
        heap[6] = (alen >>> 5) & 255;
        heap[7] = (alen << 3) & 255;
        heap[8] = heap[9] = heap[10] = 0;
        heap[11] = clen >>> 29;
        heap[12] = (clen >>> 21) & 255;
        heap[13] = (clen >>> 13) & 255;
        heap[14] = (clen >>> 5) & 255;
        heap[15] = (clen << 3) & 255;
        asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, 16);
        asm.get_iv(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA);
        asm.set_counter(0, 0, 0, this.gamma0);
        asm.cipher(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.ENC.CTR, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, 16);
        let acheck = 0;
        for (let i = 0; i < tagSize; ++i)
            acheck |= atag[i] ^ heap[i];
        if (acheck)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.SecurityError('data integrity check failed');
        this.counter = 1;
        this.aes.pos = 0;
        this.aes.len = 0;
        return result;
    }
    AES_GCM_decrypt(data) {
        const result1 = this.AES_GCM_Decrypt_process(data);
        const result2 = this.AES_GCM_Decrypt_finish();
        const result = new Uint8Array(result1.length + result2.length);
        if (result1.length)
            result.set(result1);
        if (result2.length)
            result.set(result2, result1.length);
        return result;
    }
    AES_GCM_encrypt(data) {
        const result1 = this.AES_GCM_Encrypt_process(data);
        const result2 = this.AES_GCM_Encrypt_finish();
        const result = new Uint8Array(result1.length + result2.length);
        if (result1.length)
            result.set(result1);
        if (result2.length)
            result.set(result2, result1.length);
        return result;
    }
    _gcm_mac_process(data) {
        const heap = this.aes.heap;
        const asm = this.aes.asm;
        let dpos = 0;
        let dlen = data.length || 0;
        let wlen = 0;
        while (dlen > 0) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__._heap_write)(heap, 0, data, dpos, dlen);
            dpos += wlen;
            dlen -= wlen;
            while (wlen & 15)
                heap[wlen++] = 0;
            asm.mac(_aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.MAC.GCM, _aes_asm__WEBPACK_IMPORTED_MODULE_3__.AES_asm.HEAP_DATA, wlen);
        }
    }
}


/***/ }),

/***/ "./src/AsmCrypto/bignum/bignum.ts":
/*!****************************************!*\
  !*** ./src/AsmCrypto/bignum/bignum.ts ***!
  \****************************************/
/*! namespace exports */
/*! export BigNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Modulus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _bigint_asm [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _bigint_heap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _bigint_stdlib [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_bigint_stdlib": () => /* binding */ _bigint_stdlib,
/* harmony export */   "_bigint_heap": () => /* binding */ _bigint_heap,
/* harmony export */   "_bigint_asm": () => /* binding */ _bigint_asm,
/* harmony export */   "BigNumber": () => /* binding */ BigNumber,
/* harmony export */   "Modulus": () => /* binding */ Modulus
/* harmony export */ });
/* harmony import */ var _bigint_asm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bigint.asm */ "./src/AsmCrypto/bignum/bigint.asm.js");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/utils */ "./src/AsmCrypto/other/utils.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");
/* harmony import */ var _extgcd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extgcd */ "./src/AsmCrypto/bignum/extgcd.ts");
/* harmony import */ var _other_get_random_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../other/get-random-values */ "./src/AsmCrypto/other/get-random-values.ts");





///////////////////////////////////////////////////////////////////////////////
const _bigint_stdlib = { Uint32Array: Uint32Array, Math: Math };
const _bigint_heap = new Uint32Array(0x100000);
let _bigint_asm;
function _half_imul(a, b) {
    return (a * b) | 0;
}
if (_bigint_stdlib.Math.imul === undefined) {
    _bigint_stdlib.Math.imul = _half_imul;
    _bigint_asm = (0,_bigint_asm__WEBPACK_IMPORTED_MODULE_0__.bigint_asm)(_bigint_stdlib, null, _bigint_heap.buffer);
    delete _bigint_stdlib.Math.imul;
}
else {
    _bigint_asm = (0,_bigint_asm__WEBPACK_IMPORTED_MODULE_0__.bigint_asm)(_bigint_stdlib, null, _bigint_heap.buffer);
}
///////////////////////////////////////////////////////////////////////////////
const _BigNumber_ZERO_limbs = new Uint32Array(0);
class BigNumber {
    constructor(num) {
        let limbs = _BigNumber_ZERO_limbs;
        let bitlen = 0;
        let sign = 0;
        if (num === undefined) {
            // do nothing
        }
        else {
            for (var i = 0; !num[i]; i++)
                ;
            bitlen = (num.length - i) * 8;
            if (!bitlen)
                return BigNumber.ZERO;
            limbs = new Uint32Array((bitlen + 31) >> 5);
            for (var j = num.length - 4; j >= i; j -= 4) {
                limbs[(num.length - 4 - j) >> 2] = (num[j] << 24) | (num[j + 1] << 16) | (num[j + 2] << 8) | num[j + 3];
            }
            if (i - j === 3) {
                limbs[limbs.length - 1] = num[i];
            }
            else if (i - j === 2) {
                limbs[limbs.length - 1] = (num[i] << 8) | num[i + 1];
            }
            else if (i - j === 1) {
                limbs[limbs.length - 1] = (num[i] << 16) | (num[i + 1] << 8) | num[i + 2];
            }
            sign = 1;
        }
        this.limbs = limbs;
        this.bitLength = bitlen;
        this.sign = sign;
    }
    static fromString(str) {
        const bytes = (0,_other_utils__WEBPACK_IMPORTED_MODULE_1__.string_to_bytes)(str);
        return new BigNumber(bytes);
    }
    static fromNumber(num) {
        let limbs = _BigNumber_ZERO_limbs;
        let bitlen = 0;
        let sign = 0;
        var absnum = Math.abs(num);
        if (absnum > 0xffffffff) {
            limbs = new Uint32Array(2);
            limbs[0] = absnum | 0;
            limbs[1] = (absnum / 0x100000000) | 0;
            bitlen = 52;
        }
        else if (absnum > 0) {
            limbs = new Uint32Array(1);
            limbs[0] = absnum;
            bitlen = 32;
        }
        else {
            limbs = _BigNumber_ZERO_limbs;
            bitlen = 0;
        }
        sign = num < 0 ? -1 : 1;
        return BigNumber.fromConfig({ limbs, bitLength: bitlen, sign });
    }
    static fromArrayBuffer(buffer) {
        return new BigNumber(new Uint8Array(buffer));
    }
    static fromConfig(obj) {
        const bn = new BigNumber();
        bn.limbs = new Uint32Array(obj.limbs);
        bn.bitLength = obj.bitLength;
        bn.sign = obj.sign;
        return bn;
    }
    toString(radix) {
        radix = radix || 16;
        const limbs = this.limbs;
        const bitlen = this.bitLength;
        let str = '';
        if (radix === 16) {
            // FIXME clamp last limb to (bitlen % 32)
            for (var i = ((bitlen + 31) >> 5) - 1; i >= 0; i--) {
                var h = limbs[i].toString(16);
                str += '00000000'.substr(h.length);
                str += h;
            }
            str = str.replace(/^0+/, '');
            if (!str.length)
                str = '0';
        }
        else {
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalArgumentError('bad radix');
        }
        if (this.sign < 0)
            str = '-' + str;
        return str;
    }
    toBytes() {
        const bitlen = this.bitLength;
        const limbs = this.limbs;
        if (bitlen === 0)
            return new Uint8Array(0);
        const bytelen = (bitlen + 7) >> 3;
        const bytes = new Uint8Array(bytelen);
        for (let i = 0; i < bytelen; i++) {
            let j = bytelen - i - 1;
            bytes[i] = limbs[j >> 2] >> ((j & 3) << 3);
        }
        return bytes;
    }
    /**
     * Downgrade to Number
     */
    valueOf() {
        const limbs = this.limbs;
        const bits = this.bitLength;
        const sign = this.sign;
        if (!sign)
            return 0;
        if (bits <= 32)
            return sign * (limbs[0] >>> 0);
        if (bits <= 52)
            return sign * (0x100000000 * (limbs[1] >>> 0) + (limbs[0] >>> 0));
        // normalization
        let i, l, e = 0;
        for (i = limbs.length - 1; i >= 0; i--) {
            if ((l = limbs[i]) === 0)
                continue;
            while (((l << e) & 0x80000000) === 0)
                e++;
            break;
        }
        if (i === 0)
            return sign * (limbs[0] >>> 0);
        return (sign *
            (0x100000 * (((limbs[i] << e) | (e ? limbs[i - 1] >>> (32 - e) : 0)) >>> 0) +
                (((limbs[i - 1] << e) | (e && i > 1 ? limbs[i - 2] >>> (32 - e) : 0)) >>> 12)) *
            Math.pow(2, 32 * i - e - 52));
    }
    clamp(b) {
        const limbs = this.limbs;
        const bitlen = this.bitLength;
        // FIXME check b is number and in a valid range
        if (b >= bitlen)
            return this;
        const clamped = new BigNumber();
        let n = (b + 31) >> 5;
        let k = b % 32;
        clamped.limbs = new Uint32Array(limbs.subarray(0, n));
        clamped.bitLength = b;
        clamped.sign = this.sign;
        if (k)
            clamped.limbs[n - 1] &= -1 >>> (32 - k);
        return clamped;
    }
    slice(f, b) {
        const limbs = this.limbs;
        const bitlen = this.bitLength;
        if (f < 0)
            throw new RangeError('TODO');
        if (f >= bitlen)
            return BigNumber.ZERO;
        if (b === undefined || b > bitlen - f)
            b = bitlen - f;
        const sliced = new BigNumber();
        let n = f >> 5;
        let m = (f + b + 31) >> 5;
        let l = (b + 31) >> 5;
        let t = f % 32;
        let k = b % 32;
        const slimbs = new Uint32Array(l);
        if (t) {
            for (var i = 0; i < m - n - 1; i++) {
                slimbs[i] = (limbs[n + i] >>> t) | (limbs[n + i + 1] << (32 - t));
            }
            slimbs[i] = limbs[n + i] >>> t;
        }
        else {
            slimbs.set(limbs.subarray(n, m));
        }
        if (k) {
            slimbs[l - 1] &= -1 >>> (32 - k);
        }
        sliced.limbs = slimbs;
        sliced.bitLength = b;
        sliced.sign = this.sign;
        return sliced;
    }
    negate() {
        const negative = new BigNumber();
        negative.limbs = this.limbs;
        negative.bitLength = this.bitLength;
        negative.sign = -1 * this.sign;
        return negative;
    }
    compare(that) {
        var alimbs = this.limbs, alimbcnt = alimbs.length, blimbs = that.limbs, blimbcnt = blimbs.length, z = 0;
        if (this.sign < that.sign)
            return -1;
        if (this.sign > that.sign)
            return 1;
        _bigint_heap.set(alimbs, 0);
        _bigint_heap.set(blimbs, alimbcnt);
        z = _bigint_asm.cmp(0, alimbcnt << 2, alimbcnt << 2, blimbcnt << 2);
        return z * this.sign;
    }
    add(that) {
        if (!this.sign)
            return that;
        if (!that.sign)
            return this;
        var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, asign = this.sign, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, bsign = that.sign, rbitlen, rlimbcnt, rsign, rof, result = new BigNumber();
        rbitlen = (abitlen > bbitlen ? abitlen : bbitlen) + (asign * bsign > 0 ? 1 : 0);
        rlimbcnt = (rbitlen + 31) >> 5;
        _bigint_asm.sreset();
        var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
        _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
        _bigint_heap.set(alimbs, pA >> 2);
        _bigint_heap.set(blimbs, pB >> 2);
        if (asign * bsign > 0) {
            _bigint_asm.add(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
            rsign = asign;
        }
        else if (asign > bsign) {
            rof = _bigint_asm.sub(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
            rsign = rof ? bsign : asign;
        }
        else {
            rof = _bigint_asm.sub(pB, blimbcnt << 2, pA, alimbcnt << 2, pR, rlimbcnt << 2);
            rsign = rof ? asign : bsign;
        }
        if (rof)
            _bigint_asm.neg(pR, rlimbcnt << 2, pR, rlimbcnt << 2);
        if (_bigint_asm.tst(pR, rlimbcnt << 2) === 0)
            return BigNumber.ZERO;
        result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
        result.bitLength = rbitlen;
        result.sign = rsign;
        return result;
    }
    subtract(that) {
        return this.add(that.negate());
    }
    square() {
        if (!this.sign)
            return BigNumber.ZERO;
        var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, rbitlen, rlimbcnt, result = new BigNumber();
        rbitlen = abitlen << 1;
        rlimbcnt = (rbitlen + 31) >> 5;
        _bigint_asm.sreset();
        var pA = _bigint_asm.salloc(alimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
        _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
        _bigint_heap.set(alimbs, pA >> 2);
        _bigint_asm.sqr(pA, alimbcnt << 2, pR);
        result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
        result.bitLength = rbitlen;
        result.sign = 1;
        return result;
    }
    divide(that) {
        var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, qlimbcnt, rlimbcnt, quotient = BigNumber.ZERO, remainder = BigNumber.ZERO;
        _bigint_asm.sreset();
        var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pQ = _bigint_asm.salloc(alimbcnt << 2);
        _bigint_asm.z(pQ - pA + (alimbcnt << 2), 0, pA);
        _bigint_heap.set(alimbs, pA >> 2);
        _bigint_heap.set(blimbs, pB >> 2);
        _bigint_asm.div(pA, alimbcnt << 2, pB, blimbcnt << 2, pQ);
        qlimbcnt = _bigint_asm.tst(pQ, alimbcnt << 2) >> 2;
        if (qlimbcnt) {
            quotient = new BigNumber();
            quotient.limbs = new Uint32Array(_bigint_heap.subarray(pQ >> 2, (pQ >> 2) + qlimbcnt));
            quotient.bitLength = abitlen < qlimbcnt << 5 ? abitlen : qlimbcnt << 5;
            quotient.sign = this.sign * that.sign;
        }
        rlimbcnt = _bigint_asm.tst(pA, blimbcnt << 2) >> 2;
        if (rlimbcnt) {
            remainder = new BigNumber();
            remainder.limbs = new Uint32Array(_bigint_heap.subarray(pA >> 2, (pA >> 2) + rlimbcnt));
            remainder.bitLength = bbitlen < rlimbcnt << 5 ? bbitlen : rlimbcnt << 5;
            remainder.sign = this.sign;
        }
        return {
            quotient: quotient,
            remainder: remainder,
        };
    }
    multiply(that) {
        if (!this.sign || !that.sign)
            return BigNumber.ZERO;
        var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, rbitlen, rlimbcnt, result = new BigNumber();
        rbitlen = abitlen + bbitlen;
        rlimbcnt = (rbitlen + 31) >> 5;
        _bigint_asm.sreset();
        var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
        _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
        _bigint_heap.set(alimbs, pA >> 2);
        _bigint_heap.set(blimbs, pB >> 2);
        _bigint_asm.mul(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
        result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
        result.sign = this.sign * that.sign;
        result.bitLength = rbitlen;
        return result;
    }
    isMillerRabinProbablePrime(rounds) {
        var t = BigNumber.fromConfig(this), s = 0;
        t.limbs[0] -= 1;
        while (t.limbs[s >> 5] === 0)
            s += 32;
        while (((t.limbs[s >> 5] >> (s & 31)) & 1) === 0)
            s++;
        t = t.slice(s);
        var m = new Modulus(this), m1 = this.subtract(BigNumber.ONE), a = BigNumber.fromConfig(this), l = this.limbs.length - 1;
        while (a.limbs[l] === 0)
            l--;
        while (--rounds >= 0) {
            (0,_other_get_random_values__WEBPACK_IMPORTED_MODULE_4__.getRandomValues)(a.limbs);
            if (a.limbs[0] < 2)
                a.limbs[0] += 2;
            while (a.compare(m1) >= 0)
                a.limbs[l] >>>= 1;
            var x = m.power(a, t);
            if (x.compare(BigNumber.ONE) === 0)
                continue;
            if (x.compare(m1) === 0)
                continue;
            var c = s;
            while (--c > 0) {
                x = x.square().divide(m).remainder;
                if (x.compare(BigNumber.ONE) === 0)
                    return false;
                if (x.compare(m1) === 0)
                    break;
            }
            if (c === 0)
                return false;
        }
        return true;
    }
    isProbablePrime(paranoia = 80) {
        var limbs = this.limbs;
        var i = 0;
        // Oddity test
        // (50% false positive probability)
        if ((limbs[0] & 1) === 0)
            return false;
        if (paranoia <= 1)
            return true;
        // Magic divisors (3, 5, 17) test
        // (~25% false positive probability)
        var s3 = 0, s5 = 0, s17 = 0;
        for (i = 0; i < limbs.length; i++) {
            var l3 = limbs[i];
            while (l3) {
                s3 += l3 & 3;
                l3 >>>= 2;
            }
            var l5 = limbs[i];
            while (l5) {
                s5 += l5 & 3;
                l5 >>>= 2;
                s5 -= l5 & 3;
                l5 >>>= 2;
            }
            var l17 = limbs[i];
            while (l17) {
                s17 += l17 & 15;
                l17 >>>= 4;
                s17 -= l17 & 15;
                l17 >>>= 4;
            }
        }
        if (!(s3 % 3) || !(s5 % 5) || !(s17 % 17))
            return false;
        if (paranoia <= 2)
            return true;
        // Miller-Rabin test
        // (≤ 4^(-k) false positive probability)
        return this.isMillerRabinProbablePrime(paranoia >>> 1);
    }
}
BigNumber.extGCD = _extgcd__WEBPACK_IMPORTED_MODULE_3__.BigNumber_extGCD;
BigNumber.ZERO = BigNumber.fromNumber(0);
BigNumber.ONE = BigNumber.fromNumber(1);
class Modulus extends BigNumber {
    constructor(number) {
        super();
        this.limbs = number.limbs;
        this.bitLength = number.bitLength;
        this.sign = number.sign;
        if (this.valueOf() < 1)
            throw new RangeError();
        if (this.bitLength <= 32)
            return;
        let comodulus;
        if (this.limbs[0] & 1) {
            const bitlen = ((this.bitLength + 31) & -32) + 1;
            const limbs = new Uint32Array((bitlen + 31) >> 5);
            limbs[limbs.length - 1] = 1;
            comodulus = new BigNumber();
            comodulus.sign = 1;
            comodulus.bitLength = bitlen;
            comodulus.limbs = limbs;
            const k = (0,_extgcd__WEBPACK_IMPORTED_MODULE_3__.Number_extGCD)(0x100000000, this.limbs[0]).y;
            this.coefficient = k < 0 ? -k : 0x100000000 - k;
        }
        else {
            /**
             * TODO even modulus reduction
             * Modulus represented as `N = 2^U * V`, where `V` is odd and thus `GCD(2^U, V) = 1`.
             * Calculation `A = TR' mod V` is made as for odd modulo using Montgomery method.
             * Calculation `B = TR' mod 2^U` is easy as modulus is a power of 2.
             * Using Chinese Remainder Theorem and Garner's Algorithm restore `TR' mod N` from `A` and `B`.
             */
            return;
        }
        this.comodulus = comodulus;
        this.comodulusRemainder = comodulus.divide(this).remainder;
        this.comodulusRemainderSquare = comodulus.square().divide(this).remainder;
    }
    /**
     * Modular reduction
     */
    reduce(a) {
        if (a.bitLength <= 32 && this.bitLength <= 32)
            return BigNumber.fromNumber(a.valueOf() % this.valueOf());
        if (a.compare(this) < 0)
            return a;
        return a.divide(this).remainder;
    }
    /**
     * Modular inverse
     */
    inverse(a) {
        a = this.reduce(a);
        const r = (0,_extgcd__WEBPACK_IMPORTED_MODULE_3__.BigNumber_extGCD)(this, a);
        if (r.gcd.valueOf() !== 1)
            throw new Error('GCD is not 1');
        if (r.y.sign < 0)
            return r.y.add(this).clamp(this.bitLength);
        return r.y;
    }
    /**
     * Modular exponentiation
     */
    power(g, e) {
        // count exponent set bits
        let c = 0;
        for (let i = 0; i < e.limbs.length; i++) {
            let t = e.limbs[i];
            while (t) {
                if (t & 1)
                    c++;
                t >>>= 1;
            }
        }
        // window size parameter
        let k = 8;
        if (e.bitLength <= 4536)
            k = 7;
        if (e.bitLength <= 1736)
            k = 6;
        if (e.bitLength <= 630)
            k = 5;
        if (e.bitLength <= 210)
            k = 4;
        if (e.bitLength <= 60)
            k = 3;
        if (e.bitLength <= 12)
            k = 2;
        if (c <= 1 << (k - 1))
            k = 1;
        // montgomerize base
        g = Modulus._Montgomery_reduce(this.reduce(g).multiply(this.comodulusRemainderSquare), this);
        // precompute odd powers
        const g2 = Modulus._Montgomery_reduce(g.square(), this), gn = new Array(1 << (k - 1));
        gn[0] = g;
        gn[1] = Modulus._Montgomery_reduce(g.multiply(g2), this);
        for (let i = 2; i < 1 << (k - 1); i++) {
            gn[i] = Modulus._Montgomery_reduce(gn[i - 1].multiply(g2), this);
        }
        // perform exponentiation
        const u = this.comodulusRemainder;
        let r = u;
        for (let i = e.limbs.length - 1; i >= 0; i--) {
            let t = e.limbs[i];
            for (let j = 32; j > 0;) {
                if (t & 0x80000000) {
                    let n = t >>> (32 - k), l = k;
                    while ((n & 1) === 0) {
                        n >>>= 1;
                        l--;
                    }
                    var m = gn[n >>> 1];
                    while (n) {
                        n >>>= 1;
                        if (r !== u)
                            r = Modulus._Montgomery_reduce(r.square(), this);
                    }
                    r = r !== u ? Modulus._Montgomery_reduce(r.multiply(m), this) : m;
                    (t <<= l), (j -= l);
                }
                else {
                    if (r !== u)
                        r = Modulus._Montgomery_reduce(r.square(), this);
                    (t <<= 1), j--;
                }
            }
        }
        // de-montgomerize result
        return Modulus._Montgomery_reduce(r, this);
    }
    static _Montgomery_reduce(a, n) {
        const alimbs = a.limbs;
        const alimbcnt = alimbs.length;
        const nlimbs = n.limbs;
        const nlimbcnt = nlimbs.length;
        const y = n.coefficient;
        _bigint_asm.sreset();
        const pA = _bigint_asm.salloc(alimbcnt << 2), pN = _bigint_asm.salloc(nlimbcnt << 2), pR = _bigint_asm.salloc(nlimbcnt << 2);
        _bigint_asm.z(pR - pA + (nlimbcnt << 2), 0, pA);
        _bigint_heap.set(alimbs, pA >> 2);
        _bigint_heap.set(nlimbs, pN >> 2);
        _bigint_asm.mredc(pA, alimbcnt << 2, pN, nlimbcnt << 2, y, pR);
        const result = new BigNumber();
        result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + nlimbcnt));
        result.bitLength = n.bitLength;
        result.sign = 1;
        return result;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/bignum/extgcd.ts":
/*!****************************************!*\
  !*** ./src/AsmCrypto/bignum/extgcd.ts ***!
  \****************************************/
/*! namespace exports */
/*! export BigNumber_extGCD [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Number_extGCD [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Number_extGCD": () => /* binding */ Number_extGCD,
/* harmony export */   "BigNumber_extGCD": () => /* binding */ BigNumber_extGCD
/* harmony export */ });
/* harmony import */ var _bignum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bignum */ "./src/AsmCrypto/bignum/bignum.ts");

function Number_extGCD(a, b) {
    var sa = a < 0 ? -1 : 1, sb = b < 0 ? -1 : 1, xi = 1, xj = 0, yi = 0, yj = 1, r, q, t, a_cmp_b;
    a *= sa;
    b *= sb;
    a_cmp_b = a < b;
    if (a_cmp_b) {
        t = a;
        (a = b), (b = t);
        t = sa;
        sa = sb;
        sb = t;
    }
    (q = Math.floor(a / b)), (r = a - q * b);
    while (r) {
        (t = xi - q * xj), (xi = xj), (xj = t);
        (t = yi - q * yj), (yi = yj), (yj = t);
        (a = b), (b = r);
        (q = Math.floor(a / b)), (r = a - q * b);
    }
    xj *= sa;
    yj *= sb;
    if (a_cmp_b) {
        t = xj;
        (xj = yj), (yj = t);
    }
    return {
        gcd: b,
        x: xj,
        y: yj,
    };
}
function BigNumber_extGCD(a, b) {
    let sa = a.sign;
    let sb = b.sign;
    if (sa < 0)
        a = a.negate();
    if (sb < 0)
        b = b.negate();
    const a_cmp_b = a.compare(b);
    if (a_cmp_b < 0) {
        let t = a;
        (a = b), (b = t);
        let t2 = sa;
        sa = sb;
        sb = t2;
    }
    var xi = _bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber.ONE, xj = _bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber.ZERO, lx = b.bitLength, yi = _bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber.ZERO, yj = _bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber.ONE, ly = a.bitLength, z, r, q;
    z = a.divide(b);
    while ((r = z.remainder) !== _bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber.ZERO) {
        q = z.quotient;
        (z = xi.subtract(q.multiply(xj).clamp(lx)).clamp(lx)), (xi = xj), (xj = z);
        (z = yi.subtract(q.multiply(yj).clamp(ly)).clamp(ly)), (yi = yj), (yj = z);
        (a = b), (b = r);
        z = a.divide(b);
    }
    if (sa < 0)
        xj = xj.negate();
    if (sb < 0)
        yj = yj.negate();
    if (a_cmp_b < 0) {
        let t = xj;
        (xj = yj), (yj = t);
    }
    return {
        gcd: b,
        x: xj,
        y: yj,
    };
}


/***/ }),

/***/ "./src/AsmCrypto/entry-default.ts":
/*!****************************************!*\
  !*** ./src/AsmCrypto/entry-default.ts ***!
  \****************************************/
/*! namespace exports */
/*! export AES_CBC [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/aes/cbc.ts .AES_CBC */
/*! export AES_GCM [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/aes/gcm.ts .AES_GCM */
/*! export BigNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/bignum/bignum.ts .BigNumber */
/*! export HmacSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hmac/hmac-sha1.ts .HmacSha1 */
/*! export HmacSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hmac/hmac-sha256.ts .HmacSha256 */
/*! export IllegalArgumentError [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/errors.ts .IllegalArgumentError */
/*! export IllegalStateError [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/errors.ts .IllegalStateError */
/*! export Modulus [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/bignum/bignum.ts .Modulus */
/*! export Pbkdf2HmacSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha1.ts .Pbkdf2HmacSha1 */
/*! export Pbkdf2HmacSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha256.ts .Pbkdf2HmacSha256 */
/*! export RSA_OAEP [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/rsa/pkcs1.ts .RSA_OAEP */
/*! export RSA_PKCS1_v1_5 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/rsa/pkcs1.ts .RSA_PKCS1_v1_5 */
/*! export RSA_PSS [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/rsa/pkcs1.ts .RSA_PSS */
/*! export SecurityError [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/errors.ts .SecurityError */
/*! export Sha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha1/sha1.ts .Sha1 */
/*! export Sha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha256/sha256.ts .Sha256 */
/*! export _bigint_asm [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/bignum/bignum.ts ._bigint_asm */
/*! export _bigint_heap [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/bignum/bignum.ts ._bigint_heap */
/*! export _bigint_stdlib [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/bignum/bignum.ts ._bigint_stdlib */
/*! export _sha1_block_size [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha1/sha1.ts ._sha1_block_size */
/*! export _sha1_hash_size [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha1/sha1.ts ._sha1_hash_size */
/*! export _sha256_block_size [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha256/sha256.ts ._sha256_block_size */
/*! export _sha256_hash_size [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/hash/sha256/sha256.ts ._sha256_hash_size */
/*! export base64_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .base64_to_bytes */
/*! export bytes_to_base64 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_base64 */
/*! export bytes_to_hex [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_hex */
/*! export bytes_to_string [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_string */
/*! export hex_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .hex_to_bytes */
/*! export string_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .string_to_bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base64_to_bytes": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.base64_to_bytes,
/* harmony export */   "bytes_to_base64": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_base64,
/* harmony export */   "bytes_to_hex": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_hex,
/* harmony export */   "bytes_to_string": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_string,
/* harmony export */   "hex_to_bytes": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.hex_to_bytes,
/* harmony export */   "string_to_bytes": () => /* reexport safe */ _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__.string_to_bytes,
/* harmony export */   "IllegalArgumentError": () => /* reexport safe */ _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentError,
/* harmony export */   "IllegalStateError": () => /* reexport safe */ _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError,
/* harmony export */   "SecurityError": () => /* reexport safe */ _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError,
/* harmony export */   "AES_CBC": () => /* reexport safe */ _aes_cbc__WEBPACK_IMPORTED_MODULE_2__.AES_CBC,
/* harmony export */   "AES_GCM": () => /* reexport safe */ _aes_gcm__WEBPACK_IMPORTED_MODULE_3__.AES_GCM,
/* harmony export */   "Sha1": () => /* reexport safe */ _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_4__.Sha1,
/* harmony export */   "_sha1_block_size": () => /* reexport safe */ _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_4__._sha1_block_size,
/* harmony export */   "_sha1_hash_size": () => /* reexport safe */ _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_4__._sha1_hash_size,
/* harmony export */   "Sha256": () => /* reexport safe */ _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_5__.Sha256,
/* harmony export */   "_sha256_block_size": () => /* reexport safe */ _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_5__._sha256_block_size,
/* harmony export */   "_sha256_hash_size": () => /* reexport safe */ _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_5__._sha256_hash_size,
/* harmony export */   "HmacSha1": () => /* reexport safe */ _hmac_hmac_sha1__WEBPACK_IMPORTED_MODULE_6__.HmacSha1,
/* harmony export */   "HmacSha256": () => /* reexport safe */ _hmac_hmac_sha256__WEBPACK_IMPORTED_MODULE_7__.HmacSha256,
/* harmony export */   "Pbkdf2HmacSha1": () => /* reexport safe */ _pbkdf2_pbkdf2_hmac_sha1__WEBPACK_IMPORTED_MODULE_8__.Pbkdf2HmacSha1,
/* harmony export */   "Pbkdf2HmacSha256": () => /* reexport safe */ _pbkdf2_pbkdf2_hmac_sha256__WEBPACK_IMPORTED_MODULE_9__.Pbkdf2HmacSha256,
/* harmony export */   "BigNumber": () => /* reexport safe */ _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__.BigNumber,
/* harmony export */   "Modulus": () => /* reexport safe */ _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__.Modulus,
/* harmony export */   "_bigint_asm": () => /* reexport safe */ _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__._bigint_asm,
/* harmony export */   "_bigint_heap": () => /* reexport safe */ _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__._bigint_heap,
/* harmony export */   "_bigint_stdlib": () => /* reexport safe */ _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__._bigint_stdlib,
/* harmony export */   "RSA_OAEP": () => /* reexport safe */ _rsa_pkcs1__WEBPACK_IMPORTED_MODULE_11__.RSA_OAEP,
/* harmony export */   "RSA_PKCS1_v1_5": () => /* reexport safe */ _rsa_pkcs1__WEBPACK_IMPORTED_MODULE_11__.RSA_PKCS1_v1_5,
/* harmony export */   "RSA_PSS": () => /* reexport safe */ _rsa_pkcs1__WEBPACK_IMPORTED_MODULE_11__.RSA_PSS
/* harmony export */ });
/* harmony import */ var _other_exportedUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./other/exportedUtils */ "./src/AsmCrypto/other/exportedUtils.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./other/errors */ "./src/AsmCrypto/other/errors.ts");
/* harmony import */ var _aes_cbc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aes/cbc */ "./src/AsmCrypto/aes/cbc.ts");
/* harmony import */ var _aes_gcm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aes/gcm */ "./src/AsmCrypto/aes/gcm.ts");
/* harmony import */ var _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash/sha1/sha1 */ "./src/AsmCrypto/hash/sha1/sha1.ts");
/* harmony import */ var _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hash/sha256/sha256 */ "./src/AsmCrypto/hash/sha256/sha256.ts");
/* harmony import */ var _hmac_hmac_sha1__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hmac/hmac-sha1 */ "./src/AsmCrypto/hmac/hmac-sha1.ts");
/* harmony import */ var _hmac_hmac_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hmac/hmac-sha256 */ "./src/AsmCrypto/hmac/hmac-sha256.ts");
/* harmony import */ var _pbkdf2_pbkdf2_hmac_sha1__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pbkdf2/pbkdf2-hmac-sha1 */ "./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha1.ts");
/* harmony import */ var _pbkdf2_pbkdf2_hmac_sha256__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pbkdf2/pbkdf2-hmac-sha256 */ "./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha256.ts");
/* harmony import */ var _bignum_bignum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bignum/bignum */ "./src/AsmCrypto/bignum/bignum.ts");
/* harmony import */ var _rsa_pkcs1__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./rsa/pkcs1 */ "./src/AsmCrypto/rsa/pkcs1.ts");














/***/ }),

/***/ "./src/AsmCrypto/hash/hash.ts":
/*!************************************!*\
  !*** ./src/AsmCrypto/hash/hash.ts ***!
  \************************************/
/*! namespace exports */
/*! export Hash [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hash": () => /* binding */ Hash
/* harmony export */ });
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../other/utils */ "./src/AsmCrypto/other/utils.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");


class Hash {
    constructor() {
        this.pos = 0;
        this.len = 0;
    }
    reset() {
        this.result = null;
        this.pos = 0;
        this.len = 0;
        this.asm.reset();
        return this;
    }
    process(data) {
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('state must be reset before processing new data');
        let asm = this.asm;
        let heap = this.heap;
        let hpos = this.pos;
        let hlen = this.len;
        let dpos = 0;
        let dlen = data.length;
        let wlen = 0;
        while (dlen > 0) {
            wlen = (0,_other_utils__WEBPACK_IMPORTED_MODULE_0__._heap_write)(heap, hpos + hlen, data, dpos, dlen);
            hlen += wlen;
            dpos += wlen;
            dlen -= wlen;
            wlen = asm.process(hpos, hlen);
            hpos += wlen;
            hlen -= wlen;
            if (!hlen)
                hpos = 0;
        }
        this.pos = hpos;
        this.len = hlen;
        return this;
    }
    finish() {
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('state must be reset before processing new data');
        this.asm.finish(this.pos, this.len, 0);
        this.result = new Uint8Array(this.HASH_SIZE);
        this.result.set(this.heap.subarray(0, this.HASH_SIZE));
        this.pos = 0;
        this.len = 0;
        return this;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/hash/sha1/sha1.ts":
/*!*****************************************!*\
  !*** ./src/AsmCrypto/hash/sha1/sha1.ts ***!
  \*****************************************/
/*! namespace exports */
/*! export Sha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _sha1_block_size [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _sha1_hash_size [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_sha1_block_size": () => /* binding */ _sha1_block_size,
/* harmony export */   "_sha1_hash_size": () => /* binding */ _sha1_hash_size,
/* harmony export */   "Sha1": () => /* binding */ Sha1
/* harmony export */ });
/* harmony import */ var _sha1_asm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha1.asm */ "./src/AsmCrypto/hash/sha1/sha1.asm.js");
/* harmony import */ var _hash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash */ "./src/AsmCrypto/hash/hash.ts");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../other/utils */ "./src/AsmCrypto/other/utils.ts");



const _sha1_block_size = 64;
const _sha1_hash_size = 20;
class Sha1 extends _hash__WEBPACK_IMPORTED_MODULE_1__.Hash {
    constructor() {
        super();
        this.NAME = 'sha1';
        this.BLOCK_SIZE = _sha1_block_size;
        this.HASH_SIZE = _sha1_hash_size;
        this.heap = (0,_other_utils__WEBPACK_IMPORTED_MODULE_2__._heap_init)();
        this.asm = (0,_sha1_asm__WEBPACK_IMPORTED_MODULE_0__.sha1_asm)({ Uint8Array: Uint8Array }, null, this.heap.buffer);
        this.reset();
    }
}
Sha1.NAME = 'sha1';


/***/ }),

/***/ "./src/AsmCrypto/hash/sha256/sha256.ts":
/*!*********************************************!*\
  !*** ./src/AsmCrypto/hash/sha256/sha256.ts ***!
  \*********************************************/
/*! namespace exports */
/*! export Sha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _sha256_block_size [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _sha256_hash_size [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_sha256_block_size": () => /* binding */ _sha256_block_size,
/* harmony export */   "_sha256_hash_size": () => /* binding */ _sha256_hash_size,
/* harmony export */   "Sha256": () => /* binding */ Sha256
/* harmony export */ });
/* harmony import */ var _sha256_asm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha256.asm */ "./src/AsmCrypto/hash/sha256/sha256.asm.js");
/* harmony import */ var _hash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash */ "./src/AsmCrypto/hash/hash.ts");
/* harmony import */ var _other_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../other/utils */ "./src/AsmCrypto/other/utils.ts");



const _sha256_block_size = 64;
const _sha256_hash_size = 32;
class Sha256 extends _hash__WEBPACK_IMPORTED_MODULE_1__.Hash {
    constructor() {
        super();
        this.NAME = 'sha256';
        this.BLOCK_SIZE = _sha256_block_size;
        this.HASH_SIZE = _sha256_hash_size;
        this.heap = (0,_other_utils__WEBPACK_IMPORTED_MODULE_2__._heap_init)();
        this.asm = (0,_sha256_asm__WEBPACK_IMPORTED_MODULE_0__.sha256_asm)({ Uint8Array: Uint8Array }, null, this.heap.buffer);
        this.reset();
    }
}
Sha256.NAME = 'sha256';


/***/ }),

/***/ "./src/AsmCrypto/hmac/hmac-sha1.ts":
/*!*****************************************!*\
  !*** ./src/AsmCrypto/hmac/hmac-sha1.ts ***!
  \*****************************************/
/*! namespace exports */
/*! export HmacSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HmacSha1": () => /* binding */ HmacSha1
/* harmony export */ });
/* harmony import */ var _hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hmac */ "./src/AsmCrypto/hmac/hmac.ts");
/* harmony import */ var _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash/sha1/sha1 */ "./src/AsmCrypto/hash/sha1/sha1.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");



class HmacSha1 extends _hmac__WEBPACK_IMPORTED_MODULE_0__.Hmac {
    constructor(password, verify) {
        const hash = new _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_1__.Sha1();
        // Calculate ipad, init the underlying engine, calculate this.key
        super(hash, password, verify);
        this.reset();
        if (verify !== undefined) {
            this._hmac_init_verify(verify);
        }
        else {
            this.verify = null;
        }
        return this;
    }
    reset() {
        this.result = null;
        const key = this.key;
        this.hash
            .reset()
            .asm.hmac_init((key[0] << 24) | (key[1] << 16) | (key[2] << 8) | key[3], (key[4] << 24) | (key[5] << 16) | (key[6] << 8) | key[7], (key[8] << 24) | (key[9] << 16) | (key[10] << 8) | key[11], (key[12] << 24) | (key[13] << 16) | (key[14] << 8) | key[15], (key[16] << 24) | (key[17] << 16) | (key[18] << 8) | key[19], (key[20] << 24) | (key[21] << 16) | (key[22] << 8) | key[23], (key[24] << 24) | (key[25] << 16) | (key[26] << 8) | key[27], (key[28] << 24) | (key[29] << 16) | (key[30] << 8) | key[31], (key[32] << 24) | (key[33] << 16) | (key[34] << 8) | key[35], (key[36] << 24) | (key[37] << 16) | (key[38] << 8) | key[39], (key[40] << 24) | (key[41] << 16) | (key[42] << 8) | key[43], (key[44] << 24) | (key[45] << 16) | (key[46] << 8) | key[47], (key[48] << 24) | (key[49] << 16) | (key[50] << 8) | key[51], (key[52] << 24) | (key[53] << 16) | (key[54] << 8) | key[55], (key[56] << 24) | (key[57] << 16) | (key[58] << 8) | key[59], (key[60] << 24) | (key[61] << 16) | (key[62] << 8) | key[63]);
        return this;
    }
    finish() {
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_2__.IllegalStateError('state must be reset before processing new data');
        const hash = this.hash;
        const asm = this.hash.asm;
        const heap = this.hash.heap;
        asm.hmac_finish(hash.pos, hash.len, 0);
        const verify = this.verify;
        const result = new Uint8Array(_hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_1__._sha1_hash_size);
        result.set(heap.subarray(0, _hash_sha1_sha1__WEBPACK_IMPORTED_MODULE_1__._sha1_hash_size));
        if (verify) {
            if (verify.length === result.length) {
                let diff = 0;
                for (let i = 0; i < verify.length; i++) {
                    diff |= verify[i] ^ result[i];
                }
                if (diff !== 0)
                    throw new Error("HMAC verification failed, hash value doesn't match");
            }
            else {
                throw new Error("HMAC verification failed, lengths doesn't match");
            }
        }
        else {
            this.result = result;
        }
        return this;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/hmac/hmac-sha256.ts":
/*!*******************************************!*\
  !*** ./src/AsmCrypto/hmac/hmac-sha256.ts ***!
  \*******************************************/
/*! namespace exports */
/*! export HmacSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HmacSha256": () => /* binding */ HmacSha256
/* harmony export */ });
/* harmony import */ var _hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hmac */ "./src/AsmCrypto/hmac/hmac.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");
/* harmony import */ var _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hash/sha256/sha256 */ "./src/AsmCrypto/hash/sha256/sha256.ts");



class HmacSha256 extends _hmac__WEBPACK_IMPORTED_MODULE_0__.Hmac {
    constructor(password, verify) {
        const hash = new _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_2__.Sha256();
        // Calculate ipad, init the underlying engine, calculate this.key
        super(hash, password, verify);
        this.reset();
        if (verify !== undefined) {
            this._hmac_init_verify(verify);
        }
        else {
            this.verify = null;
        }
        return this;
    }
    reset() {
        const key = this.key;
        this.hash
            .reset()
            .asm.hmac_init((key[0] << 24) | (key[1] << 16) | (key[2] << 8) | key[3], (key[4] << 24) | (key[5] << 16) | (key[6] << 8) | key[7], (key[8] << 24) | (key[9] << 16) | (key[10] << 8) | key[11], (key[12] << 24) | (key[13] << 16) | (key[14] << 8) | key[15], (key[16] << 24) | (key[17] << 16) | (key[18] << 8) | key[19], (key[20] << 24) | (key[21] << 16) | (key[22] << 8) | key[23], (key[24] << 24) | (key[25] << 16) | (key[26] << 8) | key[27], (key[28] << 24) | (key[29] << 16) | (key[30] << 8) | key[31], (key[32] << 24) | (key[33] << 16) | (key[34] << 8) | key[35], (key[36] << 24) | (key[37] << 16) | (key[38] << 8) | key[39], (key[40] << 24) | (key[41] << 16) | (key[42] << 8) | key[43], (key[44] << 24) | (key[45] << 16) | (key[46] << 8) | key[47], (key[48] << 24) | (key[49] << 16) | (key[50] << 8) | key[51], (key[52] << 24) | (key[53] << 16) | (key[54] << 8) | key[55], (key[56] << 24) | (key[57] << 16) | (key[58] << 8) | key[59], (key[60] << 24) | (key[61] << 16) | (key[62] << 8) | key[63]);
        return this;
    }
    finish() {
        if (this.key === null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('no key is associated with the instance');
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('state must be reset before processing new data');
        const hash = this.hash;
        const asm = this.hash.asm;
        const heap = this.hash.heap;
        asm.hmac_finish(hash.pos, hash.len, 0);
        const verify = this.verify;
        const result = new Uint8Array(_hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_2__._sha256_hash_size);
        result.set(heap.subarray(0, _hash_sha256_sha256__WEBPACK_IMPORTED_MODULE_2__._sha256_hash_size));
        if (verify) {
            if (verify.length === result.length) {
                let diff = 0;
                for (let i = 0; i < verify.length; i++) {
                    diff |= verify[i] ^ result[i];
                }
                if (diff !== 0)
                    throw new Error("HMAC verification failed, hash value doesn't match");
            }
            else {
                throw new Error("HMAC verification failed, lengths doesn't match");
            }
        }
        else {
            this.result = result;
        }
        return this;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/hmac/hmac.ts":
/*!************************************!*\
  !*** ./src/AsmCrypto/hmac/hmac.ts ***!
  \************************************/
/*! namespace exports */
/*! export Hmac [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _hmac_key [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Hmac": () => /* binding */ Hmac,
/* harmony export */   "_hmac_key": () => /* binding */ _hmac_key
/* harmony export */ });
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");

class Hmac {
    constructor(hash, password, verify) {
        if (!hash.HASH_SIZE)
            throw new SyntaxError("option 'hash' supplied doesn't seem to be a valid hash function");
        this.hash = hash;
        this.BLOCK_SIZE = this.hash.BLOCK_SIZE;
        this.HMAC_SIZE = this.hash.HASH_SIZE;
        this.result = null;
        this.key = _hmac_key(this.hash, password);
        const ipad = new Uint8Array(this.key);
        for (let i = 0; i < ipad.length; ++i)
            ipad[i] ^= 0x36;
        this.hash.reset().process(ipad);
        if (verify !== undefined) {
            this._hmac_init_verify(verify);
        }
        else {
            this.verify = null;
        }
    }
    process(data) {
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalStateError('state must be reset before processing new data');
        this.hash.process(data);
        return this;
    }
    finish() {
        if (this.result !== null)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalStateError('state must be reset before processing new data');
        const inner_result = this.hash.finish().result;
        const opad = new Uint8Array(this.key);
        for (let i = 0; i < opad.length; ++i)
            opad[i] ^= 0x5c;
        const verify = this.verify;
        const result = this.hash
            .reset()
            .process(opad)
            .process(inner_result)
            .finish().result;
        if (verify) {
            if (verify.length === result.length) {
                let diff = 0;
                for (let i = 0; i < verify.length; i++) {
                    diff |= verify[i] ^ result[i];
                }
                if (diff !== 0)
                    throw new Error("HMAC verification failed, hash value doesn't match");
            }
            else {
                throw new Error("HMAC verification failed, lengths doesn't match");
            }
        }
        this.result = result;
        return this;
    }
    _hmac_init_verify(verify) {
        if (verify.length !== this.HMAC_SIZE)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentError('illegal verification tag size');
        this.verify = verify;
    }
}
function _hmac_key(hash, password) {
    const key = new Uint8Array(hash.BLOCK_SIZE);
    if (password.length > hash.BLOCK_SIZE) {
        key.set(hash
            .reset()
            .process(password)
            .finish().result);
    }
    else {
        key.set(password);
    }
    return key;
}


/***/ }),

/***/ "./src/AsmCrypto/other/errors.ts":
/*!***************************************!*\
  !*** ./src/AsmCrypto/other/errors.ts ***!
  \***************************************/
/*! namespace exports */
/*! export IllegalArgumentError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IllegalStateError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SecurityError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IllegalStateError": () => /* binding */ IllegalStateError,
/* harmony export */   "IllegalArgumentError": () => /* binding */ IllegalArgumentError,
/* harmony export */   "SecurityError": () => /* binding */ SecurityError
/* harmony export */ });
class IllegalStateError extends Error {
    constructor(...args) {
        super(...args);
        Object.create(Error.prototype, { name: { value: 'IllegalStateError' } });
    }
}
class IllegalArgumentError extends Error {
    constructor(...args) {
        super(...args);
        Object.create(Error.prototype, { name: { value: 'IllegalArgumentError' } });
    }
}
class SecurityError extends Error {
    constructor(...args) {
        super(...args);
        Object.create(Error.prototype, { name: { value: 'SecurityError' } });
    }
}


/***/ }),

/***/ "./src/AsmCrypto/other/exportedUtils.ts":
/*!**********************************************!*\
  !*** ./src/AsmCrypto/other/exportedUtils.ts ***!
  \**********************************************/
/*! namespace exports */
/*! export base64_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .base64_to_bytes */
/*! export bytes_to_base64 [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_base64 */
/*! export bytes_to_hex [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_hex */
/*! export bytes_to_string [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .bytes_to_string */
/*! export hex_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .hex_to_bytes */
/*! export string_to_bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./src/AsmCrypto/other/utils.ts .string_to_bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "string_to_bytes": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.string_to_bytes,
/* harmony export */   "hex_to_bytes": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.hex_to_bytes,
/* harmony export */   "base64_to_bytes": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.base64_to_bytes,
/* harmony export */   "bytes_to_string": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_string,
/* harmony export */   "bytes_to_hex": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_hex,
/* harmony export */   "bytes_to_base64": () => /* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_0__.bytes_to_base64
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./src/AsmCrypto/other/utils.ts");
/**
 * Util exports
 */



/***/ }),

/***/ "./src/AsmCrypto/other/get-random-values.ts":
/*!**************************************************!*\
  !*** ./src/AsmCrypto/other/get-random-values.ts ***!
  \**************************************************/
/*! namespace exports */
/*! export getRandomValues [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRandomValues": () => /* binding */ getRandomValues
/* harmony export */ });
function getRandomValues(buf) {
    /*if (typeof process !== 'undefined') {
      const nodeCrypto = require('crypto');
      const bytes = nodeCrypto.randomBytes(buf.length);
      buf.set(bytes);
      return;
    }
    if (window.crypto && window.crypto.getRandomValues) {
      window.crypto.getRandomValues(buf);
      return;
    }
    if (self.crypto && self.crypto.getRandomValues) {
      self.crypto.getRandomValues(buf);
      return;
    }
    // @ts-ignore
    if (window.msCrypto && window.msCrypto.getRandomValues) {
      // @ts-ignore
      window.msCrypto.getRandomValues(buf);
      return;
    }*/
    throw new Error('No secure random number generator available.');
}


/***/ }),

/***/ "./src/AsmCrypto/other/utils.ts":
/*!**************************************!*\
  !*** ./src/AsmCrypto/other/utils.ts ***!
  \**************************************/
/*! namespace exports */
/*! export _heap_init [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _heap_write [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base64_to_bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bytes_to_base64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bytes_to_hex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bytes_to_string [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hex_to_bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export is_buffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export is_bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export is_number [provided] [no usage info] [missing usage info prevents renaming] */
/*! export is_string [provided] [no usage info] [missing usage info prevents renaming] */
/*! export is_typed_array [provided] [no usage info] [missing usage info prevents renaming] */
/*! export joinBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pow2_ceil [provided] [no usage info] [missing usage info prevents renaming] */
/*! export string_to_bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "string_to_bytes": () => /* binding */ string_to_bytes,
/* harmony export */   "hex_to_bytes": () => /* binding */ hex_to_bytes,
/* harmony export */   "base64_to_bytes": () => /* binding */ base64_to_bytes,
/* harmony export */   "bytes_to_string": () => /* binding */ bytes_to_string,
/* harmony export */   "bytes_to_hex": () => /* binding */ bytes_to_hex,
/* harmony export */   "bytes_to_base64": () => /* binding */ bytes_to_base64,
/* harmony export */   "pow2_ceil": () => /* binding */ pow2_ceil,
/* harmony export */   "is_number": () => /* binding */ is_number,
/* harmony export */   "is_string": () => /* binding */ is_string,
/* harmony export */   "is_buffer": () => /* binding */ is_buffer,
/* harmony export */   "is_bytes": () => /* binding */ is_bytes,
/* harmony export */   "is_typed_array": () => /* binding */ is_typed_array,
/* harmony export */   "_heap_init": () => /* binding */ _heap_init,
/* harmony export */   "_heap_write": () => /* binding */ _heap_write,
/* harmony export */   "joinBytes": () => /* binding */ joinBytes
/* harmony export */ });
const local_atob = typeof atob === 'undefined' ? (str) => Buffer.from(str, 'base64').toString('binary') : atob;
const local_btoa = typeof btoa === 'undefined' ? (str) => Buffer.from(str, 'binary').toString('base64') : btoa;
function string_to_bytes(str, utf8 = false) {
    var len = str.length, bytes = new Uint8Array(utf8 ? 4 * len : len);
    for (var i = 0, j = 0; i < len; i++) {
        var c = str.charCodeAt(i);
        if (utf8 && 0xd800 <= c && c <= 0xdbff) {
            if (++i >= len)
                throw new Error('Malformed string, low surrogate expected at position ' + i);
            c = ((c ^ 0xd800) << 10) | 0x10000 | (str.charCodeAt(i) ^ 0xdc00);
        }
        else if (!utf8 && c >>> 8) {
            throw new Error('Wide characters are not allowed.');
        }
        if (!utf8 || c <= 0x7f) {
            bytes[j++] = c;
        }
        else if (c <= 0x7ff) {
            bytes[j++] = 0xc0 | (c >> 6);
            bytes[j++] = 0x80 | (c & 0x3f);
        }
        else if (c <= 0xffff) {
            bytes[j++] = 0xe0 | (c >> 12);
            bytes[j++] = 0x80 | ((c >> 6) & 0x3f);
            bytes[j++] = 0x80 | (c & 0x3f);
        }
        else {
            bytes[j++] = 0xf0 | (c >> 18);
            bytes[j++] = 0x80 | ((c >> 12) & 0x3f);
            bytes[j++] = 0x80 | ((c >> 6) & 0x3f);
            bytes[j++] = 0x80 | (c & 0x3f);
        }
    }
    return bytes.subarray(0, j);
}
function hex_to_bytes(str) {
    var len = str.length;
    if (len & 1) {
        str = '0' + str;
        len++;
    }
    var bytes = new Uint8Array(len >> 1);
    for (var i = 0; i < len; i += 2) {
        bytes[i >> 1] = parseInt(str.substr(i, 2), 16);
    }
    return bytes;
}
function base64_to_bytes(str) {
    return string_to_bytes(local_atob(str));
}
function bytes_to_string(bytes, utf8 = false) {
    var len = bytes.length, chars = new Array(len);
    for (var i = 0, j = 0; i < len; i++) {
        var b = bytes[i];
        if (!utf8 || b < 128) {
            chars[j++] = b;
        }
        else if (b >= 192 && b < 224 && i + 1 < len) {
            chars[j++] = ((b & 0x1f) << 6) | (bytes[++i] & 0x3f);
        }
        else if (b >= 224 && b < 240 && i + 2 < len) {
            chars[j++] = ((b & 0xf) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);
        }
        else if (b >= 240 && b < 248 && i + 3 < len) {
            var c = ((b & 7) << 18) | ((bytes[++i] & 0x3f) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);
            if (c <= 0xffff) {
                chars[j++] = c;
            }
            else {
                c ^= 0x10000;
                chars[j++] = 0xd800 | (c >> 10);
                chars[j++] = 0xdc00 | (c & 0x3ff);
            }
        }
        else {
            throw new Error('Malformed UTF8 character at byte offset ' + i);
        }
    }
    var str = '', bs = 16384;
    for (var i = 0; i < j; i += bs) {
        str += String.fromCharCode.apply(String, chars.slice(i, i + bs <= j ? i + bs : j));
    }
    return str;
}
function bytes_to_hex(arr) {
    var str = '';
    for (var i = 0; i < arr.length; i++) {
        var h = (arr[i] & 0xff).toString(16);
        if (h.length < 2)
            str += '0';
        str += h;
    }
    return str;
}
function bytes_to_base64(arr) {
    return local_btoa(bytes_to_string(arr));
}
function pow2_ceil(a) {
    a -= 1;
    a |= a >>> 1;
    a |= a >>> 2;
    a |= a >>> 4;
    a |= a >>> 8;
    a |= a >>> 16;
    a += 1;
    return a;
}
function is_number(a) {
    return typeof a === 'number';
}
function is_string(a) {
    return typeof a === 'string';
}
function is_buffer(a) {
    return a instanceof ArrayBuffer;
}
function is_bytes(a) {
    return a instanceof Uint8Array;
}
function is_typed_array(a) {
    return (a instanceof Int8Array ||
        a instanceof Uint8Array ||
        a instanceof Int16Array ||
        a instanceof Uint16Array ||
        a instanceof Int32Array ||
        a instanceof Uint32Array ||
        a instanceof Float32Array ||
        a instanceof Float64Array);
}
function _heap_init(heap, heapSize) {
    const size = heap ? heap.byteLength : heapSize || 65536;
    if (size & 0xfff || size <= 0)
        throw new Error('heap size must be a positive integer and a multiple of 4096');
    heap = heap || new Uint8Array(new ArrayBuffer(size));
    return heap;
}
function _heap_write(heap, hpos, data, dpos, dlen) {
    const hlen = heap.length - hpos;
    const wlen = hlen < dlen ? hlen : dlen;
    heap.set(data.subarray(dpos, dpos + wlen), hpos);
    return wlen;
}
function joinBytes(...arg) {
    const totalLenght = arg.reduce((sum, curr) => sum + curr.length, 0);
    const ret = new Uint8Array(totalLenght);
    let cursor = 0;
    for (let i = 0; i < arg.length; i++) {
        ret.set(arg[i], cursor);
        cursor += arg[i].length;
    }
    return ret;
}


/***/ }),

/***/ "./src/AsmCrypto/pbkdf2/pbkdf2-core.ts":
/*!*********************************************!*\
  !*** ./src/AsmCrypto/pbkdf2/pbkdf2-core.ts ***!
  \*********************************************/
/*! namespace exports */
/*! export pbkdf2core [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2core": () => /* binding */ pbkdf2core
/* harmony export */ });
function pbkdf2core(hmac, salt, length, count) {
    const result = new Uint8Array(length);
    const blocks = Math.ceil(length / hmac.HMAC_SIZE);
    for (let i = 1; i <= blocks; ++i) {
        const j = (i - 1) * hmac.HMAC_SIZE;
        const l = (i < blocks ? 0 : length % hmac.HMAC_SIZE) || hmac.HMAC_SIZE;
        hmac.reset().process(salt);
        hmac.hash.asm.pbkdf2_generate_block(hmac.hash.pos, hmac.hash.len, i, count, 0);
        result.set(hmac.hash.heap.subarray(0, l), j);
    }
    return result;
}


/***/ }),

/***/ "./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha1.ts":
/*!**************************************************!*\
  !*** ./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha1.ts ***!
  \**************************************************/
/*! namespace exports */
/*! export Pbkdf2HmacSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pbkdf2HmacSha1": () => /* binding */ Pbkdf2HmacSha1
/* harmony export */ });
/* harmony import */ var _hmac_hmac_sha1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hmac/hmac-sha1 */ "./src/AsmCrypto/hmac/hmac-sha1.ts");
/* harmony import */ var _pbkdf2_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pbkdf2-core */ "./src/AsmCrypto/pbkdf2/pbkdf2-core.ts");


function Pbkdf2HmacSha1(password, salt, count, length) {
    const hmac = new _hmac_hmac_sha1__WEBPACK_IMPORTED_MODULE_0__.HmacSha1(password);
    return (0,_pbkdf2_core__WEBPACK_IMPORTED_MODULE_1__.pbkdf2core)(hmac, salt, length, count);
}


/***/ }),

/***/ "./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha256.ts":
/*!****************************************************!*\
  !*** ./src/AsmCrypto/pbkdf2/pbkdf2-hmac-sha256.ts ***!
  \****************************************************/
/*! namespace exports */
/*! export Pbkdf2HmacSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pbkdf2HmacSha256": () => /* binding */ Pbkdf2HmacSha256
/* harmony export */ });
/* harmony import */ var _hmac_hmac_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hmac/hmac-sha256 */ "./src/AsmCrypto/hmac/hmac-sha256.ts");
/* harmony import */ var _pbkdf2_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pbkdf2-core */ "./src/AsmCrypto/pbkdf2/pbkdf2-core.ts");


function Pbkdf2HmacSha256(password, salt, count, length) {
    const hmac = new _hmac_hmac_sha256__WEBPACK_IMPORTED_MODULE_0__.HmacSha256(password);
    return (0,_pbkdf2_core__WEBPACK_IMPORTED_MODULE_1__.pbkdf2core)(hmac, salt, length, count);
}


/***/ }),

/***/ "./src/AsmCrypto/rsa/pkcs1.ts":
/*!************************************!*\
  !*** ./src/AsmCrypto/rsa/pkcs1.ts ***!
  \************************************/
/*! namespace exports */
/*! export RSA_OAEP [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RSA_PKCS1_v1_5 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RSA_PSS [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RSA_OAEP": () => /* binding */ RSA_OAEP,
/* harmony export */   "RSA_PSS": () => /* binding */ RSA_PSS,
/* harmony export */   "RSA_PKCS1_v1_5": () => /* binding */ RSA_PKCS1_v1_5
/* harmony export */ });
/* harmony import */ var _rsa__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rsa */ "./src/AsmCrypto/rsa/rsa.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");
/* harmony import */ var _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bignum/bignum */ "./src/AsmCrypto/bignum/bignum.ts");
/* harmony import */ var _other_get_random_values__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../other/get-random-values */ "./src/AsmCrypto/other/get-random-values.ts");




class RSA_OAEP {
    constructor(key, hash, label) {
        this.rsa = new _rsa__WEBPACK_IMPORTED_MODULE_0__.RSA(key);
        this.hash = hash;
        if (label !== undefined) {
            this.label = label.length > 0 ? label : null;
        }
        else {
            this.label = null;
        }
    }
    encrypt(data, random) {
        const key_size = Math.ceil(this.rsa.key[0].bitLength / 8);
        const hash_size = this.hash.HASH_SIZE;
        const data_length = data.byteLength || data.length || 0;
        const ps_length = key_size - data_length - 2 * hash_size - 2;
        if (data_length > key_size - 2 * this.hash.HASH_SIZE - 2)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentError('data too large');
        const message = new Uint8Array(key_size);
        const seed = message.subarray(1, hash_size + 1);
        const data_block = message.subarray(hash_size + 1);
        data_block.set(data, hash_size + ps_length + 1);
        data_block.set(this.hash.process(this.label || new Uint8Array(0)).finish().result, 0);
        data_block[hash_size + ps_length] = 1;
        if (random !== undefined) {
            if (seed.length !== random.length)
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentError('random size must equal the hash size');
            seed.set(random);
        }
        else {
            (0,_other_get_random_values__WEBPACK_IMPORTED_MODULE_3__.getRandomValues)(seed);
        }
        const data_block_mask = this.RSA_MGF1_generate(seed, data_block.length);
        for (let i = 0; i < data_block.length; i++)
            data_block[i] ^= data_block_mask[i];
        const seed_mask = this.RSA_MGF1_generate(data_block, seed.length);
        for (let i = 0; i < seed.length; i++)
            seed[i] ^= seed_mask[i];
        this.rsa.encrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(message));
        return new Uint8Array(this.rsa.result);
    }
    decrypt(data) {
        if (!this.rsa.key)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('no key is associated with the instance');
        const key_size = Math.ceil(this.rsa.key[0].bitLength / 8);
        const hash_size = this.hash.HASH_SIZE;
        const data_length = data.byteLength || data.length || 0;
        if (data_length !== key_size)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentError('bad data');
        this.rsa.decrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(data));
        const z = this.rsa.result[0];
        const seed = this.rsa.result.subarray(1, hash_size + 1);
        const data_block = this.rsa.result.subarray(hash_size + 1);
        if (z !== 0)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('decryption failed');
        const seed_mask = this.RSA_MGF1_generate(data_block, seed.length);
        for (let i = 0; i < seed.length; i++)
            seed[i] ^= seed_mask[i];
        const data_block_mask = this.RSA_MGF1_generate(seed, data_block.length);
        for (let i = 0; i < data_block.length; i++)
            data_block[i] ^= data_block_mask[i];
        const lhash = this.hash
            .reset()
            .process(this.label || new Uint8Array(0))
            .finish().result;
        for (let i = 0; i < hash_size; i++) {
            if (lhash[i] !== data_block[i])
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('decryption failed');
        }
        let ps_end = hash_size;
        for (; ps_end < data_block.length; ps_end++) {
            const psz = data_block[ps_end];
            if (psz === 1)
                break;
            if (psz !== 0)
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('decryption failed');
        }
        if (ps_end === data_block.length)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('decryption failed');
        this.rsa.result = data_block.subarray(ps_end + 1);
        return new Uint8Array(this.rsa.result);
    }
    RSA_MGF1_generate(seed, length = 0) {
        const hash_size = this.hash.HASH_SIZE;
        //    if ( length > (hash_size * 0x100000000) )
        //        throw new IllegalArgumentError("mask length too large");
        const mask = new Uint8Array(length);
        const counter = new Uint8Array(4);
        const chunks = Math.ceil(length / hash_size);
        for (let i = 0; i < chunks; i++) {
            (counter[0] = i >>> 24), (counter[1] = (i >>> 16) & 255), (counter[2] = (i >>> 8) & 255), (counter[3] = i & 255);
            const submask = mask.subarray(i * hash_size);
            let chunk = this.hash
                .reset()
                .process(seed)
                .process(counter)
                .finish().result;
            if (chunk.length > submask.length)
                chunk = chunk.subarray(0, submask.length);
            submask.set(chunk);
        }
        return mask;
    }
}
class RSA_PSS {
    constructor(key, hash, saltLength = 4) {
        this.rsa = new _rsa__WEBPACK_IMPORTED_MODULE_0__.RSA(key);
        this.hash = hash;
        this.saltLength = saltLength;
        if (this.saltLength < 0)
            throw new TypeError('saltLength should be a non-negative number');
        if (this.rsa.key !== null &&
            Math.ceil((this.rsa.key[0].bitLength - 1) / 8) < this.hash.HASH_SIZE + this.saltLength + 2)
            throw new SyntaxError('saltLength is too large');
    }
    sign(data, random) {
        const key_bits = this.rsa.key[0].bitLength;
        const hash_size = this.hash.HASH_SIZE;
        const message_length = Math.ceil((key_bits - 1) / 8);
        const salt_length = this.saltLength;
        const ps_length = message_length - salt_length - hash_size - 2;
        const message = new Uint8Array(message_length);
        const h_block = message.subarray(message_length - hash_size - 1, message_length - 1);
        const d_block = message.subarray(0, message_length - hash_size - 1);
        const d_salt = d_block.subarray(ps_length + 1);
        const m_block = new Uint8Array(8 + hash_size + salt_length);
        const m_hash = m_block.subarray(8, 8 + hash_size);
        const m_salt = m_block.subarray(8 + hash_size);
        m_hash.set(this.hash.process(data).finish().result);
        if (salt_length > 0) {
            if (random !== undefined) {
                if (m_salt.length !== random.length)
                    throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentError('random size must equal the salt size');
                m_salt.set(random);
            }
            else {
                (0,_other_get_random_values__WEBPACK_IMPORTED_MODULE_3__.getRandomValues)(m_salt);
            }
        }
        d_block[ps_length] = 1;
        d_salt.set(m_salt);
        h_block.set(this.hash
            .reset()
            .process(m_block)
            .finish().result);
        const d_block_mask = this.RSA_MGF1_generate(h_block, d_block.length);
        for (let i = 0; i < d_block.length; i++)
            d_block[i] ^= d_block_mask[i];
        message[message_length - 1] = 0xbc;
        const zbits = 8 * message_length - key_bits + 1;
        if (zbits % 8)
            message[0] &= 0xff >>> zbits;
        this.rsa.decrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(message));
        return this.rsa.result;
    }
    verify(signature, data) {
        const key_bits = this.rsa.key[0].bitLength;
        const hash_size = this.hash.HASH_SIZE;
        const message_length = Math.ceil((key_bits - 1) / 8);
        const salt_length = this.saltLength;
        const ps_length = message_length - salt_length - hash_size - 2;
        this.rsa.encrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(signature));
        const message = this.rsa.result;
        if (message[message_length - 1] !== 0xbc)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('bad signature');
        const h_block = message.subarray(message_length - hash_size - 1, message_length - 1);
        const d_block = message.subarray(0, message_length - hash_size - 1);
        const d_salt = d_block.subarray(ps_length + 1);
        const zbits = 8 * message_length - key_bits + 1;
        if (zbits % 8 && message[0] >>> (8 - zbits))
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('bad signature');
        const d_block_mask = this.RSA_MGF1_generate(h_block, d_block.length);
        for (let i = 0; i < d_block.length; i++)
            d_block[i] ^= d_block_mask[i];
        if (zbits % 8)
            message[0] &= 0xff >>> zbits;
        for (let i = 0; i < ps_length; i++) {
            if (d_block[i] !== 0)
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('bad signature');
        }
        if (d_block[ps_length] !== 1)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('bad signature');
        const m_block = new Uint8Array(8 + hash_size + salt_length);
        const m_hash = m_block.subarray(8, 8 + hash_size);
        const m_salt = m_block.subarray(8 + hash_size);
        m_hash.set(this.hash
            .reset()
            .process(data)
            .finish().result);
        m_salt.set(d_salt);
        const h_block_verify = this.hash
            .reset()
            .process(m_block)
            .finish().result;
        for (let i = 0; i < hash_size; i++) {
            if (h_block[i] !== h_block_verify[i])
                throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('bad signature');
        }
    }
    RSA_MGF1_generate(seed, length = 0) {
        const hash_size = this.hash.HASH_SIZE;
        //    if ( length > (hash_size * 0x100000000) )
        //        throw new IllegalArgumentError("mask length too large");
        const mask = new Uint8Array(length);
        const counter = new Uint8Array(4);
        const chunks = Math.ceil(length / hash_size);
        for (let i = 0; i < chunks; i++) {
            (counter[0] = i >>> 24), (counter[1] = (i >>> 16) & 255), (counter[2] = (i >>> 8) & 255), (counter[3] = i & 255);
            const submask = mask.subarray(i * hash_size);
            let chunk = this.hash
                .reset()
                .process(seed)
                .process(counter)
                .finish().result;
            if (chunk.length > submask.length)
                chunk = chunk.subarray(0, submask.length);
            submask.set(chunk);
        }
        return mask;
    }
}
class RSA_PKCS1_v1_5 {
    constructor(key, hash) {
        this.rsa = new _rsa__WEBPACK_IMPORTED_MODULE_0__.RSA(key);
        this.hash = hash;
    }
    sign(data) {
        if (!this.rsa.key) {
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('no key is associated with the instance');
        }
        const prefix = getHashPrefix(this.hash);
        const hash_size = this.hash.HASH_SIZE;
        const t_len = prefix.length + hash_size;
        const k = (this.rsa.key[0].bitLength + 7) >> 3;
        if (k < t_len + 11) {
            throw new Error('Message too long');
        }
        const m_hash = new Uint8Array(hash_size);
        m_hash.set(this.hash.process(data).finish().result);
        // EM = 0x00 || 0x01 || PS || 0x00 || T
        const em = new Uint8Array(k);
        let i = 0;
        em[i++] = 0; // 0x00
        em[i++] = 1; // 0x01
        // PS
        for (i; i < k - t_len - 1; i++) {
            em[i] = 0xff;
        }
        em[i++] = 0;
        em.set(prefix, i); // 0x00
        // T
        em.set(m_hash, em.length - hash_size);
        this.rsa.decrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(em));
        return this.rsa.result;
    }
    verify(signature, data) {
        const prefix = getHashPrefix(this.hash);
        const hash_size = this.hash.HASH_SIZE;
        const t_len = prefix.length + hash_size;
        const k = (this.rsa.key[0].bitLength + 7) >> 3;
        if (k < t_len + 11) {
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('Bad signature');
        }
        this.rsa.encrypt(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_2__.BigNumber(signature));
        const m_hash = new Uint8Array(hash_size);
        m_hash.set(this.hash.process(data).finish().result);
        let res = 1;
        // EM = 0x00 || 0x01 || PS || 0x00 || T
        const decryptedSignature = this.rsa.result;
        let i = 0;
        res &= decryptedSignature[i++] === 0 ? 1 : 0; // 0x00
        res &= decryptedSignature[i++] === 1 ? 1 : 0; // 0x01
        // PS
        for (i; i < k - t_len - 1; i++) {
            res &= decryptedSignature[i] === 0xff ? 1 : 0;
        }
        res &= decryptedSignature[i++] === 0 ? 1 : 0; // 0x00
        // T
        let j = 0;
        let n = i + prefix.length;
        // prefix
        for (i; i < n; i++) {
            res &= decryptedSignature[i] === prefix[j++] ? 1 : 0;
        }
        j = 0;
        n = i + m_hash.length;
        // hash
        for (i; i < n; i++) {
            res &= decryptedSignature[i] === m_hash[j++] ? 1 : 0;
        }
        if (!res) {
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.SecurityError('Bad signature');
        }
    }
}
const HASH_PREFIXES = {
    sha1: new Uint8Array([0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0e, 0x03, 0x02, 0x1a, 0x05, 0x00, 0x04, 0x14]),
    sha256: new Uint8Array([
        0x30,
        0x31,
        0x30,
        0x0d,
        0x06,
        0x09,
        0x60,
        0x86,
        0x48,
        0x01,
        0x65,
        0x03,
        0x04,
        0x02,
        0x01,
        0x05,
        0x00,
        0x04,
        0x20,
    ]),
    sha384: new Uint8Array([
        0x30,
        0x41,
        0x30,
        0x0d,
        0x06,
        0x09,
        0x60,
        0x86,
        0x48,
        0x01,
        0x65,
        0x03,
        0x04,
        0x02,
        0x02,
        0x05,
        0x00,
        0x04,
        0x30,
    ]),
    sha512: new Uint8Array([
        0x30,
        0x51,
        0x30,
        0x0d,
        0x06,
        0x09,
        0x60,
        0x86,
        0x48,
        0x01,
        0x65,
        0x03,
        0x04,
        0x02,
        0x03,
        0x05,
        0x00,
        0x04,
        0x40,
    ]),
};
function getHashPrefix(hash) {
    const prefix = HASH_PREFIXES[hash.NAME];
    if (!prefix) {
        throw new Error("Cannot get hash prefix for hash algorithm '" + hash.NAME + "'");
    }
    return prefix;
}


/***/ }),

/***/ "./src/AsmCrypto/rsa/rsa.ts":
/*!**********************************!*\
  !*** ./src/AsmCrypto/rsa/rsa.ts ***!
  \**********************************/
/*! namespace exports */
/*! export RSA [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RSA": () => /* binding */ RSA
/* harmony export */ });
/* harmony import */ var _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bignum/bignum */ "./src/AsmCrypto/bignum/bignum.ts");
/* harmony import */ var _other_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../other/errors */ "./src/AsmCrypto/other/errors.ts");


class RSA {
    constructor(key) {
        const l = key.length;
        if (l !== 2 && l !== 3 && l !== 8)
            throw new SyntaxError('unexpected key type');
        const k0 = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.Modulus(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[0]));
        const k1 = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[1]);
        this.key = {
            0: k0,
            1: k1,
        };
        if (l > 2) {
            this.key[2] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[2]);
        }
        if (l > 3) {
            this.key[3] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.Modulus(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[3]));
            this.key[4] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.Modulus(new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[4]));
            this.key[5] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[5]);
            this.key[6] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[6]);
            this.key[7] = new _bignum_bignum__WEBPACK_IMPORTED_MODULE_0__.BigNumber(key[7]);
        }
    }
    encrypt(msg) {
        if (!this.key)
            throw new _other_errors__WEBPACK_IMPORTED_MODULE_1__.IllegalStateError('no key is associated with the instance');
        if (this.key[0].compare(msg) <= 0)
            throw new RangeError('data too large');
        const m = this.key[0];
        const e = this.key[1];
        let result = m.power(msg, e).toBytes();
        const bytelen = (m.bitLength + 7) >> 3;
        if (result.length < bytelen) {
            const r = new Uint8Array(bytelen);
            r.set(result, bytelen - result.length);
            result = r;
        }
        this.result = result;
        return this;
    }
    decrypt(msg) {
        if (this.key[0].compare(msg) <= 0)
            throw new RangeError('data too large');
        let result;
        let m;
        if (this.key[3] !== undefined) {
            m = this.key[0];
            const p = this.key[3];
            const q = this.key[4];
            const dp = this.key[5];
            const dq = this.key[6];
            const u = this.key[7];
            const x = p.power(msg, dp);
            const y = q.power(msg, dq);
            let t = x.subtract(y);
            while (t.sign < 0)
                t = t.add(p);
            const h = p.reduce(u.multiply(t));
            result = h
                .multiply(q)
                .add(y)
                .clamp(m.bitLength)
                .toBytes();
        }
        else {
            m = this.key[0];
            const d = this.key[2];
            result = m.power(msg, d).toBytes();
        }
        const bytelen = (m.bitLength + 7) >> 3;
        if (result.length < bytelen) {
            let r = new Uint8Array(bytelen);
            r.set(result, bytelen - result.length);
            result = r;
        }
        this.result = result;
        return this;
    }
}


/***/ }),

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/*! namespace exports */
/*! export Game [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GameSettings [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SfxSprites [provided] [no usage info] [missing usage info prevents renaming] */
/*! export atlas [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eAtlasArc8 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eAtlasDef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eAudioAsset [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eFontAsset [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eModelAsset [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ePublisherAPI [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eSfxSprite [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rnd1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rnd2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eModelAsset": () => /* binding */ eModelAsset,
/* harmony export */   "eFontAsset": () => /* binding */ eFontAsset,
/* harmony export */   "eTexture": () => /* binding */ eTexture,
/* harmony export */   "eAtlasArc8": () => /* binding */ eAtlasArc8,
/* harmony export */   "eAtlasDef": () => /* binding */ eAtlasDef,
/* harmony export */   "SfxSprites": () => /* binding */ SfxSprites,
/* harmony export */   "eAudioAsset": () => /* binding */ eAudioAsset,
/* harmony export */   "eSfxSprite": () => /* binding */ eSfxSprite,
/* harmony export */   "atlas": () => /* binding */ atlas,
/* harmony export */   "rnd1": () => /* binding */ rnd1,
/* harmony export */   "rnd2": () => /* binding */ rnd2,
/* harmony export */   "ePublisherAPI": () => /* binding */ ePublisherAPI,
/* harmony export */   "GameSettings": () => /* binding */ GameSettings,
/* harmony export */   "Game": () => /* binding */ Game
/* harmony export */ });
/* harmony import */ var _Gameplay_Gameplay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Gameplay/Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Utils_AssetLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils/AssetLoader */ "./src/Utils/AssetLoader.ts");
/* harmony import */ var _Utils_RND__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils/RND */ "./src/Utils/RND.ts");
/* harmony import */ var _Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils/ScaleManager */ "./src/Utils/ScaleManager.ts");
/* harmony import */ var _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Publisher API/Gamee/GameeWrapper */ "./src/Publisher API/Gamee/GameeWrapper.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _Gameplay_Game_World_VisualSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Gameplay/Game World/VisualSettings */ "./src/Gameplay/Game World/VisualSettings.ts");
/* harmony import */ var _Sprites__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Sprites */ "./src/Sprites.ts");
/* harmony import */ var _Publisher_API_Gamee_MissionManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Publisher API/Gamee/MissionManager */ "./src/Publisher API/Gamee/MissionManager.ts");
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! seedrandom */ "./node_modules/seedrandom/index.js");
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _AsmCrypto_entry_default__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AsmCrypto/entry-default */ "./src/AsmCrypto/entry-default.ts");











//export const FPS_METER = new FPSMeter(undefined, { graph: 1 });
var eModelAsset;
(function (eModelAsset) {
    eModelAsset["player"] = "player";
    eModelAsset["bonus"] = "bns";
    eModelAsset["bonus_1"] = "bns1";
    eModelAsset["bonus_2"] = "bns2";
    eModelAsset["speedUp"] = "speedUp";
    eModelAsset["speedUpFx"] = "speedUpFx";
    eModelAsset["slowDown"] = "slowDown";
    eModelAsset["slowDownFx"] = "slowDownFx";
    eModelAsset["decorationObj"] = "decoObj";
})(eModelAsset || (eModelAsset = {}));
var eFontAsset;
(function (eFontAsset) {
    eFontAsset["default"] = "fntDefault";
    eFontAsset["arc8UI"] = "fntArc8UI";
})(eFontAsset || (eFontAsset = {}));
var eTexture;
(function (eTexture) {
    eTexture["ground"] = "ground";
    eTexture["ball"] = "ball";
})(eTexture || (eTexture = {}));
var eAtlasArc8;
(function (eAtlasArc8) {
    eAtlasArc8["statusBar"] = "statusBar";
    eAtlasArc8["iconLife_0"] = "life_0";
    eAtlasArc8["iconLife_1"] = "life_1";
    eAtlasArc8["multiBarBg"] = "multiBarBg";
    eAtlasArc8["multiBar"] = "multiBar";
    eAtlasArc8["resWnd"] = "results/wnd";
    eAtlasArc8["resBtnOK"] = "results/btnClose_";
})(eAtlasArc8 || (eAtlasArc8 = {}));
var eAtlasDef;
(function (eAtlasDef) {
    eAtlasDef["NAME"] = "atlas_0";
    eAtlasDef["tutorHand"] = "tutorial/hand";
    eAtlasDef["tutorLine"] = "tutorial/line";
    eAtlasDef["iconLife"] = "iconLife";
    eAtlasDef["multiBarBg"] = "multiplier/barBg";
    eAtlasDef["multiBar"] = "multiplier/barFill";
    eAtlasDef["multiX"] = "multiplier/x";
    eAtlasDef["resWnd"] = "results/wnd";
    eAtlasDef["resDot"] = "results/dot";
    eAtlasDef["resBtnOK"] = "results/btnOK_";
})(eAtlasDef || (eAtlasDef = {}));
const SfxSprites = {
    "bonus": {
        "start": 0,
        "end": 0.9129705215419501,
        "loop": false
    },
    "crash": {
        "start": 2,
        "end": 3.831972789115646,
        "loop": false
    },
    "gameStart": {
        "start": 5,
        "end": 8.18984126984127,
        "loop": false
    },
    "jump": {
        "start": 10,
        "end": 10.77124716553288,
        "loop": false
    },
    "multiplierUp": {
        "start": 12,
        "end": 13.0737641723356,
        "loop": false
    },
    "slowdown": {
        "start": 15,
        "end": 16.2346485260771,
        "loop": false
    },
    "speedup": {
        "start": 18,
        "end": 19.117891156462584,
        "loop": false
    },
    "timeOut": {
        "start": 21,
        "end": 23.774512471655328,
        "loop": false
    },
    "timeTick": {
        "start": 25,
        "end": 30.204126984126983,
        "loop": false
    }
};
var eAudioAsset;
(function (eAudioAsset) {
    eAudioAsset["sfx"] = "sfx";
    eAudioAsset["music"] = "music";
})(eAudioAsset || (eAudioAsset = {}));
var eSfxSprite;
(function (eSfxSprite) {
    eSfxSprite["bonus"] = "bonus";
    eSfxSprite["crash"] = "crash";
    eSfxSprite["gameStart"] = "gameStart";
    eSfxSprite["jump"] = "jump";
    eSfxSprite["multiplierUp"] = "multiplierUp";
    eSfxSprite["slowdown"] = "slowdown";
    eSfxSprite["speedup"] = "speedup";
    eSfxSprite["timeOut"] = "timeOut";
    eSfxSprite["timeTick"] = "timeTick";
})(eSfxSprite || (eSfxSprite = {}));
let atlas;
/**
 * Global random number generator
 */
const rnd1 = new _Utils_RND__WEBPACK_IMPORTED_MODULE_2__.RND(Date.now().toString());
const rnd2 = new _Utils_RND__WEBPACK_IMPORTED_MODULE_2__.RND(Date.now().toString());
var ePublisherAPI;
(function (ePublisherAPI) {
    ePublisherAPI[ePublisherAPI["GAMEE"] = 0] = "GAMEE";
    ePublisherAPI[ePublisherAPI["ARC8"] = 1] = "ARC8";
})(ePublisherAPI || (ePublisherAPI = {}));
class GameSettings {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(lifeCnt, timeLimit, freePauseCnt = -1, pausePenalization = 0) {
        this.lifeCnt = lifeCnt;
        this.timeLimit = timeLimit * 1000;
        this.freePauseCnt = freePauseCnt;
        this.pausePenalization = pausePenalization;
    }
}
class Game {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(canvasID) {
        Game._sha = new _AsmCrypto_entry_default__WEBPACK_IMPORTED_MODULE_10__.Sha1();
        Game._textEncoder = new TextEncoder();
        let canvas = Game._canvas = document.getElementById(canvasID);
        this._flags = 0;
        // Vytvorit pc.Application
        Game._app = new pc.Application(canvas, {
            keyboard: new pc.Keyboard(window), elementInput: new pc.ElementInput(canvas), graphicsDeviceOptions: { alpha: false }
        });
        if (pc.platform.touch) {
            Game._app.touch = new pc.TouchDevice(canvas);
        }
        else {
            Game._app.mouse = new pc.Mouse(canvas);
        }
        Game._app.setCanvasFillMode(pc.FILLMODE_NONE);
        Game._app.addTweenManager();
        Game._app.start();
        // Mise
        Game._missions = null;
        // Publisher API
        if (Game.API == 0 /* GAMEE */ || Game.API == 1 /* ARC8 */) {
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.EVENTS.on("start" /* start */, () => { Game._paused = false; });
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.EVENTS.on("pause" /* pause */, () => { _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__.SoundManager.pause(); Game._paused = true; });
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.EVENTS.on("resume" /* resume */, () => { _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__.SoundManager.resume(); Game._paused = false; });
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.EVENTS.on("mute" /* mute */, () => { _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__.SoundManager.stop(); _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__.SoundManager.mute = true; });
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.EVENTS.on("submit" /* submit */, () => { Game._paused = false; });
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.gameInit(["platformExtraLife" /* extraLife */], () => {
                if (_Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.INIT_DATA) {
                    let initData = _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.INIT_DATA;
                    // Povolit/zakazat zvuk
                    _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_5__.SoundManager.mute = !initData.sound;
                    if (Game.API == 0 /* GAMEE */) {
                        // Mise
                        Game._missions = new _Publisher_API_Gamee_MissionManager__WEBPACK_IMPORTED_MODULE_8__.MissionManager();
                        if (initData.missionData) {
                            let missionData = (typeof initData.missionData == "string" ? JSON.parse(initData.missionData) : initData.missionData);
                            let targetVal = 0;
                            if (missionData.value)
                                targetVal = (typeof missionData.value == "string" ? parseInt(missionData.value) : missionData.value);
                            Game._missions.setActiveMission(missionData.id, targetVal);
                        }
                    }
                    else {
                        if (initData.initData) {
                            let data;
                            if (typeof initData.initData == "string") {
                                data = JSON.parse(initData.initData);
                                initData.initData = data;
                            }
                            else {
                                data = initData.initData;
                            }
                            // Seed
                            if (data.seed == undefined)
                                throw new Error("GAMEE: missing seed for random generator");
                            rnd1.rnd = seedrandom__WEBPACK_IMPORTED_MODULE_9__((Game._seed = data.seed).toString());
                            // TimeLimit
                            if (data.playTime == undefined)
                                throw new Error("GAMEE: missing 'playTime'");
                            Game._settings[1 /* ARC8 */].timeLimit = data.playTime;
                            // Penalizace za pauzy
                            if (data.pauseScorePenalization == undefined)
                                throw new Error("GAMEE: missing 'pauseScorePenalization'");
                            Game._settings[1 /* ARC8 */].pausePenalization = data.pauseScorePenalization;
                            // Slozit secret frazi pro updateScore
                            Game.UPDATE_SCORE_PHRASE = ":" + data.seed + ":" + "V+iG*2DE,rVG8=G";
                            if (data.pauseScorePenalization < 0)
                                Game.UPDATE_SCORE_PHRASE.toUpperCase();
                        }
                    }
                }
                this.handleInitProgress(Game._FLAG_SDK_INITIALIZED);
            }, this);
        }
        else {
            this._flags = Game._FLAG_SDK_INITIALIZED;
        }
        // Scaling
        Game._scale = new _Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_3__.ScaleManager(Game._app, Game._canvas, new pc.Vec2(560, 736), new pc.Vec2(560, 1500));
        Game._scale.resize();
        // Vizual hry
        Game._visualSettings = _Gameplay_Game_World_VisualSettings__WEBPACK_IMPORTED_MODULE_6__.VISUAL_SETTINGS[rnd2.randomIntIn(0, _Gameplay_Game_World_VisualSettings__WEBPACK_IMPORTED_MODULE_6__.VISUAL_SETTINGS.length - 1)];
        // Loader
        Game._app.assets.on(_Utils_AssetLoader__WEBPACK_IMPORTED_MODULE_1__.AssetLoader.EVENT_LOADED, this.handleLoaderComplete, this);
        Game._loader = new _Utils_AssetLoader__WEBPACK_IMPORTED_MODULE_1__.AssetLoader(Game._app.assets, "assets/");
        // Modely
        Game._loader.addAsset("player" /* player */, "model" /* model */, "models/ball.glb");
        Game._loader.addAsset("bns1" /* bonus_1 */, "model" /* model */, "models/bonus_1.glb");
        Game._loader.addAsset("bns2" /* bonus_2 */, "model" /* model */, "models/bonus_2.glb");
        Game._loader.addAsset("speedUp" /* speedUp */, "model" /* model */, "models/speedUp.glb");
        Game._loader.addAsset("speedUpFx" /* speedUpFx */, "model" /* model */, "models/speedUpFx.glb");
        Game._loader.addAsset("slowDown" /* slowDown */, "model" /* model */, "models/slowDown.glb");
        Game._loader.addAsset("slowDownFx" /* slowDownFx */, "model" /* model */, "models/slowDownFx.glb");
        if (Game._visualSettings.ballColor == undefined)
            Game._loader.addAsset("ball" /* ball */, "texture" /* texture */, "textures/ball_" + Game._visualSettings.id + ".png");
        /*if (Game._visualSettings.decorObjs) {
            let assetId = Game._visualSettings.decorObjs.assetId;

            Game._loader.addAsset(eModelAsset.decorationObj + assetId, pc.eAssetType.model, "models/decoObj_" + assetId + ".glb");
        }*/
        // Fonty
        Game._loader.addAsset("fntDefault" /* default */, "font" /* font */, "fonts/default.json");
        Game._loader.addAsset("fntArc8UI" /* arc8UI */, "font" /* font */, "fonts/arc8UI.json");
        // Atlas
        Game._loader.addAsset("atlas_0" /* NAME */, "texture" /* texture */, "textures/atlas_0.png");
        Game._loader.addAsset("atlas_0" /* NAME */, "textureatlas" /* atlas */, "textures/atlas_0.json");
        // Textury
        Game._loader.addAsset("ground" /* ground */ + Game._visualSettings.id, "texture" /* texture */, "textures/texGround_" + Game._visualSettings.id + ".png");
        // Audio
        Game._loader.addAsset("sfx" /* sfx */, "audio" /* audio */, "audio/sfx.mp3");
        Game._loader.addAsset("music" /* music */, "audio" /* audio */, "audio/music.mp3");
        Game._loader.load();
		console.log(123)
    }
    /**
     * (RO) pc.Application
     */
    static get app() { return Game._app; }
    static get seed() { return Game._seed; }
    static get settings() { return Game._settings[Game.API]; }
    /**
     * (RO) Scale manager
     */
    static get scale() { return this._scale; }
    /**
     * (RO) True, pokud je hra pozastavena
     */
    static get paused() { return Game._paused; }
    /**
     * (RO) Index assetu audio spritu
     */
    static get sfxSpriteAssetId() { return Game._sfxSpriteAssetId; }
    static get canvas() { return Game._canvas; }
    static get visualSettings() { return Game._visualSettings; }
    /**
     * (RO) Mise
     */
    static get missions() { return Game._missions; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static calculateHash(input) {
        let data = Game._textEncoder.encode(input);
        Game._sha.reset();
        Game._sha.process(data);
        Game._sha.finish();
        // convert ArrayBuffer to Array
        const hashArray = Array.from(Game._sha.result);
        // convert bytes to hex string                  
        return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
    }
    //-------------------------------------------------------------------------
    /**
     * Vrati pc.Batch pro id batch skupiny nebo undefined, pokud pc.Batch pro danou skupinu neexistuje
     * @param groupId
     * @param from
     */
    //-------------------------------------------------------------------------
    static getBatch(groupId, from) {
        let batches = Game.app.batcher._batchList;
        let batchId = (from == undefined ? batches.length : from);
        while (batchId-- != 0) {
            if (batches[batchId].batchGroupId == groupId) {
                return batches[batchId];
            }
        }
        return undefined;
    }
    //-------------------------------------------------------------------------
    /**
     * Prevod pc.Color na number[]
     * @param color
     * @param array
     * @returns
     */
    //-------------------------------------------------------------------------
    static colorToArray(color, alpha, array) {
        if (!array)
            array = [];
        array[0] = color.r;
        array[1] = color.g;
        array[2] = color.b;
        if (alpha)
            array[3] = color.a;
        return array;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleLoaderComplete() {
        atlas = Game._app.assets.find("atlas_0" /* NAME */, "textureatlas" /* atlas */).resource;
        Game._sfxSpriteAssetId = Game.app.assets.find("sfx" /* sfx */, "audio" /* audio */).id;
        // Sprity
        _Sprites__WEBPACK_IMPORTED_MODULE_7__.SPRITES.forEach((data) => {
            let sprite = new pc.Sprite(Game.app.graphicsDevice, {
                atlas: atlas,
                frameKeys: data.frameKeys,
                pixelsPerUnit: 100,
                renderMode: pc.SPRITE_RENDERMODE_SIMPLE
            });
            let asset = new pc.Asset(data.name, "sprite" /* sprite */, { url: "" });
            asset.resource = sprite;
            asset.loaded = true;
            Game._app.assets.add(asset);
        });
        this.handleInitProgress(Game._FLAG_ASSETS_LOADED);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleInitProgress(progressFlag) {
        this._flags |= progressFlag;
        if ((this._flags & (Game._FLAG_ASSETS_LOADED | Game._FLAG_SDK_INITIALIZED)) == (Game._FLAG_ASSETS_LOADED | Game._FLAG_SDK_INITIALIZED)) {
            // Vytvorit gameplay
            this._gameplay = new _Gameplay_Gameplay__WEBPACK_IMPORTED_MODULE_0__.Gameplay();
            // Spustit herni smycku
            Game._app.on("update", this.handleAppUpdate, this);
            if (Game.API == 0 /* GAMEE */ || Game.API == 1 /* ARC8 */)
                _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.gameReady();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleAppUpdate(dt) {
        //FPS_METER.tick();
        if (!Game._paused)
            this._gameplay.update(dt);
    }
}
/**
 * Typ API, ktere hra pouziva
 */
Game.API = 0 /* GAMEE */;
/**
 * True, pokud se ma zobrazovat id bloku a skupiny, ve kterem se hrac aktualne nachazi
 */
Game.SHOW_PATH_BLOCK_ID = false;
Game._settings = [
    // GAMEE
    new GameSettings(3, 90),
    // Arc8
    new GameSettings(3, 60, 3),
    // NONE
    new GameSettings(3, 90),
];
Game._paused = false;
Game._FLAG_SDK_INITIALIZED = 0x0001;
Game._FLAG_ASSETS_LOADED = 0x0002;
Game.UPDATE_SCORE_PHRASE = "";
window.addEventListener("DOMContentLoaded", () => {
	console.log(123)
    new Game("renderCanvas");
});


/***/ }),

/***/ "./src/Gameplay/Accounting.ts":
/*!************************************!*\
  !*** ./src/Gameplay/Accounting.ts ***!
  \************************************/
/*! namespace exports */
/*! export Accounting [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eAccountingScoreEntryType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Accounting": () => /* binding */ Accounting,
/* harmony export */   "eAccountingScoreEntryType": () => /* binding */ eAccountingScoreEntryType
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils/ProtectedValue */ "./src/Utils/ProtectedValue.ts");
/* harmony import */ var _Utils_Score__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils/Score */ "./src/Utils/Score.ts");
/* harmony import */ var _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Game World/Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _GameplayTimer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GameplayTimer */ "./src/Gameplay/GameplayTimer.ts");






class Buffer {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(defSize) {
        this.view = new DataView(new ArrayBuffer(defSize));
        this.offset = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this.offset = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    toBase64() {
        let binary = '';
        let bytes = new Uint8Array(this.view.buffer, 0, this.offset);
        let len = bytes.byteLength;
        for (let i = 0; i < len; i++)
            binary += String.fromCharCode(bytes[i]);
        return window.btoa(binary);
    }
}
var eBufferPos;
(function (eBufferPos) {
    /**
     * Verze dat
     */
    eBufferPos[eBufferPos["dataVersion"] = 0] = "dataVersion";
    /**
     * Celkova velikost dat
     */
    eBufferPos[eBufferPos["dataSize"] = 1] = "dataSize";
    /**
     * UID hry
     */
    eBufferPos[eBufferPos["gameUID"] = 5] = "gameUID";
    /**
     * Cas hry ve vterinach
     */
    eBufferPos[eBufferPos["gameTime"] = 6] = "gameTime";
    /**
     * Pocet pauz, za ktere byla udelena penalizace
     */
    eBufferPos[eBufferPos["pauseCnt"] = 8] = "pauseCnt";
    /**
     * Celkove ziskane skore
     */
    eBufferPos[eBufferPos["score"] = 9] = "score";
    /**
     * Uprava skore za pauzy, ktere snizily skore pod 0
     */
    eBufferPos[eBufferPos["scoreAdjustment"] = 13] = "scoreAdjustment";
    /**
     * Duvod ukonceni hry (0 = pres "submit", ostatni podle hry)
     */
    eBufferPos[eBufferPos["gameEndReason"] = 15] = "gameEndReason";
    /**
     * Seed hry
     */
    eBufferPos[eBufferPos["gameSeed"] = 16] = "gameSeed";
    /**
     * Pocet zbyvajicich zivotu
     */
    eBufferPos[eBufferPos["lifeCnt"] = 20] = "lifeCnt";
    /**
     * Pocet zvednuti nasobice
     */
    eBufferPos[eBufferPos["multiplierIncCnt"] = 21] = "multiplierIncCnt";
    /**
     * Dosazena vzdalenost od startu
     */
    eBufferPos[eBufferPos["reachedDistance"] = 22] = "reachedDistance";
    /**
     * Celkovy pocet zaznamu
     */
    eBufferPos[eBufferPos["recordCnt"] = 24] = "recordCnt";
    /**
     * Zacatek dat pro jednotlive zaznamy
     */
    eBufferPos[eBufferPos["recordData"] = 26] = "recordData";
})(eBufferPos || (eBufferPos = {}));
class Accounting {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._ready = false;
        // Alokovat buffer
        this._buffer = new Buffer(1024 * 10);
        this._buffer.view.setUint8(0 /* dataVersion */, Accounting.VERSION);
        this._buffer.view.setUint8(5 /* gameUID */, Accounting.GAME_UID);
        this._buffer.view.setUint32(16 /* gameSeed */, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.seed);
        // Zaznam
        this._record = new AccountingRecord(this._buffer);
        // Zachytavat zmenu hodnoty nasobice skore
        _Gameplay__WEBPACK_IMPORTED_MODULE_4__.Gameplay.instance.events.on(_Utils_Score__WEBPACK_IMPORTED_MODULE_2__.Score.EVENT_MUTLI_CHANGE, this.handleMultiplierChange, this);
    }
    get replayData() { return this._replayData; }
    get ready() { return this._ready; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        let buf = this._buffer;
        buf.offset = 26 /* recordData */;
        // Vynulovat pocet zvyseni nasobice
        buf.view.setUint8(21 /* multiplierIncCnt */, 0);
        // Penalizace za pauzy
        buf.view.setUint8(8 /* pauseCnt */, 0);
        buf.view.setUint16(13 /* scoreAdjustment */, 0);
        this._ready = true;
        this._record.reset();
        this._record.init(1);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    close(gameTimeInSec, interruptedGame) {
        if (!this._ready)
            return;
        this._ready = false;
        // Zavrit aktualni zaznam
        this._record.close();
        // Vyplnit hlavicku replay dat
        let view = this._buffer.view;
        let pl = _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.instance;
        view.setUint32(1 /* dataSize */, this._buffer.offset); // Celkova velikost dat
        view.setUint16(6 /* gameTime */, gameTimeInSec); // Cas hry ve vterinach
        view.setUint32(9 /* score */, pl.results.score.value); // Celkove skore
        view.setUint8(15 /* gameEndReason */, interruptedGame ? 0 : 1); // 0, pokud hra byla ukoncena predcasne
        view.setUint8(20 /* lifeCnt */, pl.lifeCnt); // Pocet zbyvajicich zivotu
        view.setUint16(22 /* reachedDistance */, Math.round(Math.abs(pl.pos.z))); // Celkova ujeta vzdalenost
        view.setUint16(24 /* recordCnt */, this._record.id); // Celkovy pocet zaznamu
        this._replayData = this._buffer.toBase64();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addPausePenalty(compensation) {
        if (!this._ready)
            return;
        let view = this._buffer.view;
        view.setUint8(8 /* pauseCnt */, view.getUint8(8 /* pauseCnt */) + 1);
        view.setUint16(13 /* scoreAdjustment */, view.getUint16(13 /* scoreAdjustment */) + compensation);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addScoreEntry(entryType) {
        if (this._ready)
            this._record.addScoreEntry(entryType);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleMultiplierChange(score, value) {
        if (this._ready)
            this._record.init(value);
    }
}
Accounting.VERSION = 4;
Accounting.GAME_UID = 102;
var eAccountingScoreEntryType;
(function (eAccountingScoreEntryType) {
    eAccountingScoreEntryType[eAccountingScoreEntryType["bonusA"] = 0] = "bonusA";
    eAccountingScoreEntryType[eAccountingScoreEntryType["bonusB"] = 1] = "bonusB";
    eAccountingScoreEntryType[eAccountingScoreEntryType["distance"] = 2] = "distance";
    eAccountingScoreEntryType[eAccountingScoreEntryType["NUMBER"] = 3] = "NUMBER";
})(eAccountingScoreEntryType || (eAccountingScoreEntryType = {}));
class AccountingRecord {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(buffer) {
        this._buffer = buffer;
        this._id = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
        this._multiplier = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
        this._prevMultiplier = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
        this._totalEntryCnt = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
        // Pocet zaznamu od jednotlivych typu
        this._entryCntPerType = [];
        for (let i = 0; i < 3 /* NUMBER */; i++)
            this._entryCntPerType[i] = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
    }
    /**
     * (RO) Index zaznamu
     */
    get id() { return this._id.value; }
    /**
     * (RO) Hodnota nasobice skore
     */
    get multiplier() { return this._multiplier.value; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._multiplier.setToZero();
        this._prevMultiplier.value = 1;
        this._id.setToZero();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(multiplier) {
        if (multiplier == this._multiplier.value)
            return;
        // Zavrit predchozi zaznam
        this.close();
        this._multiplier.value = multiplier;
        this._totalEntryCnt.setToZero();
        // Cas
        this._buffer.view.setUint16(this._buffer.offset, Math.round(_GameplayTimer__WEBPACK_IMPORTED_MODULE_5__.GameplayTimer.instance.elapsedTime / 10));
        this._buffer.offset += 2;
        // Ujeta vzdalenost
        this._buffer.view.setUint16(this._buffer.offset, Math.round(Math.abs(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.instance.pos.z)));
        this._buffer.offset += 2;
        // Hodnota nasobice
        this._buffer.view.setUint8(this._buffer.offset++, multiplier);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    close() {
        if (!this._multiplier.isZero) {
            if (!this._totalEntryCnt.isZero) {
                // Ulozit pocet zaznamu od jednotlivych typu
                for (let i = 0; i < 3 /* NUMBER */; i++) {
                    this._buffer.view.setUint8(this._buffer.offset++, this._entryCntPerType[i].value);
                    this._entryCntPerType[i].setToZero();
                }
                if (this._multiplier.value > this._prevMultiplier.value)
                    this._buffer.view.setUint8(21 /* multiplierIncCnt */, this._buffer.view.getUint8(21 /* multiplierIncCnt */) + 1);
                this._prevMultiplier.value = this._multiplier.value;
                this._id.value++;
            }
            else {
                // Vyradit zaznam
                this._buffer.offset -= 5;
            }
            this._multiplier.setToZero();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addScoreEntry(type) {
        if (this._entryCntPerType[type].value == AccountingRecord.MAX_ENTRY_PER_TYPE) {
            // Zabranit preteceni -> vytvorit novy zaznam
            let multiplier = this._multiplier.value;
            this.close();
            this.init(multiplier);
        }
        this._entryCntPerType[type].value++;
        this._totalEntryCnt.value++;
    }
}
AccountingRecord.MAX_ENTRY_PER_TYPE = 32;


/***/ }),

/***/ "./src/Gameplay/Background.ts":
/*!************************************!*\
  !*** ./src/Gameplay/Background.ts ***!
  \************************************/
/*! namespace exports */
/*! export Background [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Background": () => /* binding */ Background
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Game */ "./src/Game.ts");
/* harmony import */ var _Game_World_View__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Game World/View */ "./src/Gameplay/Game World/View.ts");


class Background {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        Background._instance = this;
        // Buffery pro barvy
        this._topColor = new Array(4);
        this._botColor = new Array(4);
        // Material
        let mat = this._material = new pc.Material();
        mat.blendType = pc.BLEND_NORMAL;
        mat.cull = pc.CULLFACE_NONE;
        mat.shader = new pc.Shader(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.graphicsDevice, {
            attributes: {
                aPosition: pc.SEMANTIC_POSITION,
                aUv0: pc.SEMANTIC_TEXCOORD0
            },
            vshader: Background.MESH_V_SHADER,
            fshader: "precision " + _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.graphicsDevice.precision + " float;\n" + Background.MESH_F_SHADER
        });
        mat.setParameter("uTopColor", _Game__WEBPACK_IMPORTED_MODULE_0__.Game.colorToArray(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.bgTopColor, true, this._topColor));
        mat.setParameter("uBotColor", _Game__WEBPACK_IMPORTED_MODULE_0__.Game.colorToArray(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.bgBotColor, true, this._botColor));
        mat.update();
        // Plane
        this._plane = new pc.Entity();
        this._plane.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: mat,
            castShadows: false,
            receiveShadows: false,
        });
        this._plane.setEulerAngles(90, 0, 0);
        this._plane.setLocalScale(48, 1, 35);
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._plane);
    }
    /**
     * (RO) Staticky pristup
     */
    static get instance() { return Background._instance; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this.update();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._plane.setPosition(0, 16, _Game_World_View__WEBPACK_IMPORTED_MODULE_1__.View.instance.cameraPos.z - _Game_World_View__WEBPACK_IMPORTED_MODULE_1__.View.CAM_FAR_CLIP);
    }
}
Background.MESH_V_SHADER = `attribute vec3 aPosition;
        attribute vec2 aUv0;

        uniform mat4 matrix_model;
        uniform mat4 matrix_viewProjection;

        varying vec2 vUv0;

        void main(void) {
            vUv0 = aUv0;

            // Vypocitat pozici vrcholu v hernim svete
            vec4 posW = matrix_model * vec4(aPosition, 1.0);

            gl_Position = matrix_viewProjection * posW;
        }`;
Background.MESH_F_SHADER = `varying vec2 vUv0;

        uniform vec4 uTopColor;
        uniform vec4 uBotColor;

        void main(void) {
            if (vUv0.y < 0.2) {
                gl_FragColor = uBotColor;
            }
            else {
                gl_FragColor = mix(uBotColor, uTopColor, (vUv0.y - 0.2) / 0.8);
            }
        }`;


/***/ }),

/***/ "./src/Gameplay/Game World/Blocks.ts":
/*!*******************************************!*\
  !*** ./src/Gameplay/Game World/Blocks.ts ***!
  \*******************************************/
/*! namespace exports */
/*! export Block [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BlockManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eBlockAlignment [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eBlockAlignment": () => /* binding */ eBlockAlignment,
/* harmony export */   "Block": () => /* binding */ Block,
/* harmony export */   "BlockManager": () => /* binding */ BlockManager
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Utils/Models/CubeMesh */ "./src/Utils/Models/CubeMesh.ts");
/* harmony import */ var _Utils_Models_ModelUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Utils/Models/ModelUtils */ "./src/Utils/Models/ModelUtils.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");





var eBlockAlignment;
(function (eBlockAlignment) {
    eBlockAlignment[eBlockAlignment["left"] = 0] = "left";
    eBlockAlignment[eBlockAlignment["right"] = 1] = "right";
    eBlockAlignment[eBlockAlignment["bottom"] = 2] = "bottom";
    eBlockAlignment[eBlockAlignment["leftTransparent"] = 3] = "leftTransparent";
    eBlockAlignment[eBlockAlignment["rightTransparent"] = 4] = "rightTransparent";
    eBlockAlignment[eBlockAlignment["bottomTransparent"] = 5] = "bottomTransparent";
    eBlockAlignment[eBlockAlignment["wallLeft"] = 6] = "wallLeft";
    eBlockAlignment[eBlockAlignment["wallRight"] = 7] = "wallRight";
    eBlockAlignment[eBlockAlignment["NUMBER"] = 8] = "NUMBER";
})(eBlockAlignment || (eBlockAlignment = {}));
class Block {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(model, alignment, colorId, batchGroupId, parent) {
        this._entity = new pc.Entity();
        this._entity.addComponent("model" /* model */, {
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
        });
        this._entity.model.model = model.clone();
        this._entity.setLocalScale(0, 0, 0);
        this._entity.model.batchGroupId = batchGroupId;
        if (parent)
            parent.addChild(this._entity);
        this._alignment = alignment;
        this._colorId = colorId;
    }
    get entity() { return this._entity; }
    get alignment() { return this._alignment; }
    get colorId() { return this._colorId; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._entity.setLocalScale(0, 0, 0);
    }
}
class BlockManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        BlockManager._instance = this;
        // Material pro neprusvitne bloky
        let blockBlendCol = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.blockBlendColor;
        const diffuseChunk = "#define BLOCK_MAX_Y 3.5\n" +
            /*"vec3 rgb2hsv(vec3 c) {\n" +
            "   vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n" +
            "   vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n" +
            "   vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n" +

            "   float d = q.x - min(q.w, q.y);\n" +
            "   float e = 1.0e-10;\n" +
            "   return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n" +
            "}\n" +

            "vec3 hsv2rgb(vec3 c) {\n" +
            "   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n" +
            "   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n" +
            "   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n" +
            "}\n" +*/
            "void getAlbedo() {\n" +
            "   float blendRatio = 1.0 - smoothstep(-0.1, 0.3, vPositionW.y / BLOCK_MAX_Y);\n" +
            "   dAlbedo = (vec3(1.0) * gammaCorrectInput(saturate(vVertexColor.$VC))) + (vec3(" + blockBlendCol.r.toFixed(1) + "," + blockBlendCol.g.toFixed(1) + "," + blockBlendCol.b.toFixed(1) + ") * blendRatio);\n" +
            /*"   dAlbedo = (vec3(1.0) * gammaCorrectInput(saturate(vVertexColor.$VC)));\n" +
            "   vec3 dAlbedoHSV = rgb2hsv(dAlbedo);\n" +
            "   dAlbedoHSV.y *= clamp(pixPos, 0.0, 1.0);\n" +
            "   dAlbedo = hsv2rgb(dAlbedoHSV);\n" +*/
            "}";
        let matSolid = new pc.StandardMaterial();
        matSolid.diffuseVertexColor = true;
        matSolid.chunks.diffuseVertPS = diffuseChunk;
        matSolid.update();
        // Material pro prusvitne bloky
        let matTransparent = new pc.StandardMaterial();
        matTransparent.blendType = pc.BLEND_NORMAL;
        matTransparent.opacity = 0.2;
        matTransparent.diffuse.set(0, 0, 0);
        matTransparent.emissive.set(0.5, 0.5, 0.5);
        matTransparent.useFog = false;
        matTransparent.useLighting = false;
        matTransparent.cull = pc.CULLFACE_NONE;
        matTransparent.update();
        // Material pro vysokoe sloupy po stranach
        let matTallColumns = new pc.StandardMaterial();
        matTallColumns.diffuseVertexColor = true;
        matTallColumns.update();
        // Vytvorit modely pro jednotlive verze zarovnani cubes
        let bgVertexColor = _Gameplay__WEBPACK_IMPORTED_MODULE_4__.Gameplay.getBatchGroupId(3 /* obsBlocks */);
        let bgWalls = _Gameplay__WEBPACK_IMPORTED_MODULE_4__.Gameplay.getBatchGroupId(4 /* walls */);
        let blockSettings = [
            { meshOrigin: new pc.Vec3(0, 0, -0.5), defPoolSize: 10, materials: [matSolid], batchGroupId: bgVertexColor, colorCnt: BlockManager.COLOR_CNT },
            { meshOrigin: new pc.Vec3(1, 0, -0.5), defPoolSize: 10, materials: [matSolid], batchGroupId: bgVertexColor, colorCnt: BlockManager.COLOR_CNT },
            { meshOrigin: new pc.Vec3(0.5, 0, -0.5), defPoolSize: 10, materials: [matSolid], batchGroupId: bgVertexColor, colorCnt: BlockManager.COLOR_CNT },
            { meshOrigin: new pc.Vec3(0, 0, -0.5), defPoolSize: 1, materials: [matTransparent], batchGroupId: -1, colorCnt: 1 },
            { meshOrigin: new pc.Vec3(1, 0, -0.5), defPoolSize: 1, materials: [matTransparent], batchGroupId: -1, colorCnt: 1 },
            { meshOrigin: new pc.Vec3(0.5, 0, -0.5), defPoolSize: 1, materials: [matTransparent], batchGroupId: -1, colorCnt: 1 },
            { meshOrigin: new pc.Vec3(1, 0, 0), defPoolSize: 50, parent: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root, meshFaceMask: (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_TOP) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_FRONT) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_RIGHT), materials: [matSolid], batchGroupId: bgWalls, colorCnt: BlockManager.COLOR_CNT },
            { meshOrigin: new pc.Vec3(0, 0, 0), defPoolSize: 50, parent: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root, meshFaceMask: (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_TOP) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_FRONT) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.FACE_LEFT), materials: [matSolid], batchGroupId: bgWalls, colorCnt: BlockManager.COLOR_CNT },
        ];
        let blockDefSize = new pc.Vec3(1, 1, 1);
        let colors = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.blockColors;
        this._freeBlocks = [];
        for (let alignmentId = 0; alignmentId < 8 /* NUMBER */; alignmentId++) {
            // Vytvorit model
            let blSet = blockSettings[alignmentId];
            // Pool s bloky vyuzivajici jednotlive materialy
            this._freeBlocks[alignmentId] = [];
            for (let colorId = 0; colorId < blSet.colorCnt; colorId++) {
                let model = _Utils_Models_ModelUtils__WEBPACK_IMPORTED_MODULE_3__.ModelUtils.createModel([_Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_2__.CubeMesh.createMesh(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.graphicsDevice, blockDefSize, blSet.meshOrigin, colors[colorId], blSet.meshFaceMask)], blSet.materials);
                let pool = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(undefined, blSet.defPoolSize, true, () => {
                    return new Block(model, alignmentId, colorId, blSet.batchGroupId, blSet.parent);
                });
                this._freeBlocks[alignmentId].push(pool);
            }
        }
    }
    static get instance() { return this._instance; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getFreeBlock(colorId, alignment) {
        let block = this._freeBlocks[alignment][colorId].getItem();
        return block;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    releaseBlock(block) {
        block.reset();
        this._freeBlocks[block.alignment][block.colorId].returnItem(block);
    }
}
BlockManager.COLOR_CNT = 3;


/***/ }),

/***/ "./src/Gameplay/Game World/GameWorld.ts":
/*!**********************************************!*\
  !*** ./src/Gameplay/Game World/GameWorld.ts ***!
  \**********************************************/
/*! namespace exports */
/*! export GameWorld [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GameWorld": () => /* binding */ GameWorld
/* harmony export */ });
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View */ "./src/Gameplay/Game World/View.ts");
/* harmony import */ var _Blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Blocks */ "./src/Gameplay/Game World/Blocks.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Path/PathBlockManager */ "./src/Gameplay/Game World/Path/PathBlockManager.ts");
/* harmony import */ var _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Path/PathBlock */ "./src/Gameplay/Game World/Path/PathBlock.ts");
/* harmony import */ var _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Path/PathBlockEntry */ "./src/Gameplay/Game World/Path/PathBlockEntry.ts");
/* harmony import */ var _Road_RoadManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Road/RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");
/* harmony import */ var _Row_Elements_RowElementManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Row Elements/RowElementManager */ "./src/Gameplay/Game World/Row Elements/RowElementManager.ts");
/* harmony import */ var _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Row Elements/Elements/ObstacleBlock */ "./src/Gameplay/Game World/Row Elements/Elements/ObstacleBlock.ts");
/* harmony import */ var _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Row Elements/Value */ "./src/Gameplay/Game World/Row Elements/Value.ts");










class GameWorld {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._blocks = new _Blocks__WEBPACK_IMPORTED_MODULE_1__.BlockManager();
        this._view = new _View__WEBPACK_IMPORTED_MODULE_0__.View();
        this._pathBlocks = new _Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_3__.PathBlockManager([
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(0, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.4, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.4, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.7, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(43, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(51)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(30, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(31, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(40, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(48)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(14, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(15, 0.25, 2.3, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(24, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.75, 2.3, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(34, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.5, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.5, 2.3, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(42)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 0.5, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.1, 2, 0.2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.1, 2, 0.8),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(18, 0.825),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.175),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(35, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(36, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 0.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(43)
                ]),
            ], 1),
            // Skupina 1
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(1, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.5, 0.5, 0.35, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 1, 15, 10, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.1, 1, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.1, 1, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(5, 0.85, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.5, 0.5, 0.65, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 1, 15, 10, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.1, 1, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.1, 1, 0.9, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.2, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.5, 0.5, 0.35, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 1, 15, 10, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.1, 1, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.1, 1, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 15, 10, pc.SineOut)),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(25, 0.85, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 2, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(45, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(49, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(49, 0.85),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0.5, 15, 10, pc.SineOut)),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(50, 0.85, 2, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 2, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(66, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 2, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(77)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(0, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(3, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(6, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(9, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(15, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(18, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(24, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.65),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(29, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(33, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(39, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(43, 0.4, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.7, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(51, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(55, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(55),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 2.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -2.51, 14, 8, pc.CubicOut), 1, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 2, 0, 0)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 2.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -2.51, 14, 8, pc.CubicOut), 1, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(62, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(67)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.25, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 3)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(5, 1, 1 /* widthFromLeft */, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1, 0, 0, 0.3)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(13, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1, 0, 0, 0.3)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1, 0, 0, 0.3)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(26, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(30, 6, 1 /* widthFromLeft */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(34, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(38, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(39, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(45, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(45, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 3)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(50),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(50, 1, 3 /* widthFromRight */, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(50, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(51, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(2, 0, 15, 5, pc.CubicIn), undefined, undefined, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(53, 0.85),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(59, 0.85),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(2, 0, 15, 5, pc.CubicIn), undefined, undefined, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.13),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(68, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.15, 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(68, 0.13, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(72, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(76, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.15, 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(76, 0.88, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(78, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(80, 6, 3 /* widthFromRight */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(87)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(4, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.25, 2, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 2, 0.25, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 2, 0.75, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(17, 0.25, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(24, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.75, 2, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 2, 0.25, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 2, 0.75, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(37, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(44, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.34, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.01, 13, 5, pc.SineIn), 0.5, -1, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.33, 1.5, 0.25, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.34, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.01, 13, 5, pc.SineIn), 0.5, -1, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.15, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(54)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(4, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(0, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(3, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(4, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(8, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.19, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1, 1, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1, 0.4)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(19, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(26, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.8, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(31, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(38),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.81, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1, 1, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1, 0.6)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(48)
                ]),
            ]),
            // Skupina 2
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(2, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(4, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.25, 2, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.5, 1, 0.025, pc.SineInOut, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(9, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 16, 4, pc.CubicOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(17, 0.75, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.9),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 16, 4, pc.CubicOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(32, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.3, 0.6, 0.025, pc.SineInOut, 1), 1.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(36, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.7, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(45, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(45, 0.75, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.4, 1.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(57)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(0, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(8, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(11, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(28, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(35)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.5, 15, 10, pc.SineOut), 1, 0, 0, 0.5, 0)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(13, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.3, 1.5, 0.75, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(15, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(22, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.4, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(24, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.5, 15, 10, pc.SineOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(36, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.5, 15, 10, pc.SineOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(42, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.7, 15, 10, pc.SineOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.425),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.4, 15, 10, pc.SineOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 15, 10, pc.SineOut), 0.5, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(52, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(56, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(57, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(60, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(65, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(69, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(75, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(78, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(81, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(85, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.01, 12, 7, pc.SineIn)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(93)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.2, undefined, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0.4, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 15, 10, pc.SineIn), 1.5, 0.4, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 15, 10, pc.SineIn), 1.5, 0.6, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(34, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(37, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(38, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 2, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(38, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(38, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 2, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(40, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(48, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.2, 0.5, 0.05, pc.SineInOut, 1), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(53, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(56, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.2, 0.6, 0.05, pc.SineInOut, 1), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(59, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(62, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.2, 0.6, 0.05, pc.SineInOut, 1), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(66, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(68, 0.4, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.2, 0.5, 0.05, pc.SineInOut, 1), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(75, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.2, 0.6, 0.05, pc.SineInOut, 0), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(77),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(77, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(79, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(82, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(84, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(85, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 2, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(85, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(85, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 2, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(92)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(4, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(4, 0.25, undefined, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.1, 1.5),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(8, 0.75, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(8, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(13, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(24, 0.7, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 1.5, 1, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 1.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.55)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(28, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(28, 0.75, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(33, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(38, 0.5, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.25, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.75, undefined, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(42, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(48)
                ]),
            ]),
            // Skupina 3
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(3, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.15, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(11, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(14, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.325, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.325, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(19, 1, 2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.75)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1, 0.75)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(41, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(43, 0.5, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(44),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(46, 0.175),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.34, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.22, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 1), 0.34)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.22, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 1, 0.5), 0.56)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.22, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 1, 1))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(51, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(54, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(57, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.325, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3375, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 1))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3375, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 1, 1))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(65)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.5, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(15, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(40, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(52, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(57, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(62, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(67, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.7, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15, 10, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(70, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(71, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(76)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(6, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(6, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0.35),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.5, 0, 0.05, pc.SineInOut, 1), 0.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(13, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(16, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(16, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0.35),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.5, 0, 0.05, pc.SineInOut, 1), 0.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(26, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(26, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0.35),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.5, 0, 0.05, pc.SineInOut, 0), 0.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(36, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(36, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0.35),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.8, 0.05, pc.SineInOut, 0.5), 0.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.8, 0, 0.05, pc.SineInOut, 0.5), 0.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(39, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(39, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(46, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(46, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0.35),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.8, 0.05, pc.SineInOut, 0), 0.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.8, 0, 0.05, pc.SineInOut, 0), 0.5),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(48, 0.5, 1.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(55)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 18, 13, pc.SineOut), 1, 0),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15.5, 10.5, pc.SineOut), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 13, 8, pc.SineOut), 1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 13, 8, pc.SineOut), 1, 0),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 15.5, 10.5, pc.SineOut), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 18, 13, pc.SineOut), 1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(20, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(24, 0.25, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(26, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.25, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.75, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.2, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.8, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(38, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(41, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(42),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(43, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.25, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 18, 13, pc.SineOut), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.51, 15.5, 10.5, pc.SineIn), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 13, 8, pc.SineOut), 1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(52, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(54, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(56, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.25, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.51, 15.5, 10.5, pc.SineIn), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.25, 1.5, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 18, 13, pc.SineOut), 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.25, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.51, 0, 13, 8, pc.SineOut), 1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(67)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(4, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(3, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.4, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.6, 0.05, pc.SineInOut, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(11, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(11, 0.75, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(14, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.4, 2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.6, 0.05, pc.SineInOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(26, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(26, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.225, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.225, 2, 0.5),
                    ], 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.3, 0.025, pc.SineInOut, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.375),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.85, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.225, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.225, 2, 0.5),
                    ], 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.3, 0.025, pc.SineInOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.675),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(45)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(5, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(0, 1, 2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.1, 0.35, 14, 7, pc.BackOut), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.1, 0.35, 14, 7, pc.BackOut), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(9, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.1, 0.6, 14, 7, pc.BackOut), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.1, 0.6, 14, 7, pc.BackOut), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(29, 0.7, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.1, 0.6, 14, 7, pc.BackOut), 1, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(43, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.15, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 1),
                    ], 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.1, 0, 16, 8, pc.BounceOut), 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(49, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(51),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(52, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(53, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 0.25, 0.5, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 1.5, 0.5),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(53, 0.85, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(58, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(60, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(63, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(64, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1.5, 0.5),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.15, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(71)
                ]),
            ]),
            // Skupina 4
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(4, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(6, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 8, pc.SineOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 14, 8, pc.SineOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(8, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(8, 5, 2 /* widthFromCenter */, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.2), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.55), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.55),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.45, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.55), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.2), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.55),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.45, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.55), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.2), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.45),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.55, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.2), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1, 0.05, pc.Linear, 0.55), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(50, 0.45),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(52, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(53, 0.55, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(54),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(56, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(57, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 8, pc.SineOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(57, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.01, 0, 14, 8, pc.SineOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(64)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(1, 5, 2 /* widthFromCenter */, 0.9),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(2, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(4, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(8, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1.5, 0.1, pc.SineInOut, 1), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5)
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.65),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(13, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(13, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1.5, 0.1, pc.SineInOut, 1), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5)
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.65),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(22, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.65, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(26, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1.5, 0.1, pc.SineInOut, 1), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5)
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(31, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(32, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(34, 0.65, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1.5, 0.1, pc.SineInOut, 1), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5)
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(37, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(40, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 1, 0.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 1.5, 0.1, pc.SineInOut, 1), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1.5),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1.5)
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(45, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(50),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(52)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.2, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.8, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.25, 0.7, 0.05, pc.Linear, 0.25), 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.15, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(12, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.3, 1, 0.6, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(24, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.3, 1, 0.4, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(26, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(29, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(33),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0.25, 0.7, 0.05, pc.Linear, 0.25), 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.15, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(37, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(44, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.6, 1.25, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(45, 0.8, 2.25, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(50, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(54, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(55, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.6, 1.25, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(55, 0.2, 2.25, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(63),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(-0.5, 0, 0.04, pc.SineInOut, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(1, 1.5, 0.04, pc.SineInOut, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(70, 0.65),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(75, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(-0.5, 0, 0.04, pc.SineInOut, 0.5), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(75, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(1, 1.5, 0.04, pc.SineInOut, 0.5), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(75, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(79, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(84, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(-0.5, 0, 0.04, pc.SineInOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(84, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(1, 1.5, 0.04, pc.SineInOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(84, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(87, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(92)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 6, 3 /* widthFromRight */, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(6, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.35, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(19, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.35, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(21, 0.35, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(26, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(28, 1, 3 /* widthFromRight */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(28, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.9),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1, 0.7, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(36, 0.9),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(42),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(42, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.34, 1.5),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(43, 1, 1 /* widthFromLeft */, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(44, 0.85, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.5, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(51, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(53, 0.8, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(53, 0.2, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(55, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(57, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.5, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(57, 0.85, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(63, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(64, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(65, 6, 1 /* widthFromLeft */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(71)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(4, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0.3, 16, 5, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0.3, 16, 5, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(9, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(14, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 1, 0.5, 1),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(18, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.8, 0.6, 16, 5, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0, 16, 5, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(27, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(32, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(36, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.55, 16, 5, pc.BounceOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(39, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(41, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.55, 16, 5, pc.BounceOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(48, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(50, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(54, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.55, 16, 5, pc.BounceOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(58),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(60, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(61, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1, 0, 1),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.3, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(66, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0.3, 10, 4, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0.3, 10, 4, pc.CubicOut), 2, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(78)
                ]),
            ]),
            // Skupina 5
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(5, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(1, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(5, 0.25, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.6, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(11, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.3, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.6, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.8, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.4, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.3, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(26, 0.8, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.3, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.6, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(34, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(39, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.3, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 15, 5, pc.SineOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(46),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(47)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.15, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 20, 16, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.2, 1, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 17, 10, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.15, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 7, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.175, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 20, 16, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.175, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 17, 13, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.175, 1, 0.825, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 10, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.175, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 11, 7, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(22, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.25, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(31, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.25, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.25, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.25, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(45, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(46, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(46, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.8, 2, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(57, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(58, 0.2, 2, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(66),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(67, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.175, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 20, 16, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.175, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 17, 13, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.35, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 10, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(70, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.525, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 11, 7, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(75, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(77, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(82, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(82, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.175, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 20, 16, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(82, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.175, 1, 0.825, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 17, 13, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(82, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.475, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 14, 10, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(82, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.175, 1, 0.3, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.01, 0, 11, 7, pc.SineIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(89)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(3, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.6, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(15, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.6, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.35, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(29, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.6, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(37, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.6, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(45, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.6, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.3, 1, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(54, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 1, 0.35, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(62, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.35, 1, 0.3, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(70, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(74, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(74, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.35, 1, 0.3, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.05, 0, 16, 6, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(74, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, -1.05, 16, 6, pc.CubicIn), 0.5, -1, false, false)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(76),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(76, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(82),
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 0), 0),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(2, 2.5, 2, 0.25), 0.14),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 0.50), 0.28),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(2, 2.5, 2, 1.25), 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 1.50), 0.86),
                    ], 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.6, 0, 18, 12, pc.CubicOut), 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(8, 0.8, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(12, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(13, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.7, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(21, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(22, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1.5, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(37, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1.5, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(45, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 0), 0),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(2, 2.5, 2, 0.25), 0.14),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 0.50), 0.28),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(2, 2.5, 2, 1.25), 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.14, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue3(1.5, 2.5, 2, 1.50), 0.86),
                    ], 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.6, 0, 18, 12, pc.CubicOut), 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(54, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(54, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1.5, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(58, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(59, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(63, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1.5, 0.2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(64, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 1.5, 0.8, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 18, 12, pc.CubicIn), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(64, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(67, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(68, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(75),
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(4, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(3, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 2, 0, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.4, 2, 0, 1),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(5, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 16, 4, pc.ElasticOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.4, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(21),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(23, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.4, 2, 0, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 2, 0, 1),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(26, 0.5, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 16, 4, pc.ElasticOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(36, 0.6, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(39, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(42, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 16, 4, pc.ElasticOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(47, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.2, 0.6, 16, 4, pc.ElasticOut), 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(49),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(52, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(53, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 2, 0, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 2, 0, 1),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(56, 0.2, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(60)
                ]),
            ]),
            // Skupina 6
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(6, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(5, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(5, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.8, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1.5, 14, 9, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.14),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(12, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1, 0.35)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.7, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(18, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(19, 0.18, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.8, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1.5, 13, 8, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.2, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(35, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(36, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.8, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1.5, 0, 10, 5, pc.SineOut), 1, -1, true, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(40, 0.22),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1, 0.7)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(44, 0.85, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(48, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.1, 1, 0.22, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(51, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.32, 0.5, 0.65, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1.5, 14, 9, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.2, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(56, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(60, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(61, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.8, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1.5, 0, 10, 5, pc.SineOut), 1, -1, true, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(65),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(65, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(65, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(67, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.32, 0.5, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1.5, 14, 9, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.32, 0.5, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1.5, 0, 14, 9, pc.SineOut), 1, -1, true, true),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(75, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(77, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(81, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.32, 0.5, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1.5, 14, 9, pc.SineOut), 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.32, 0.5, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1.5, 0, 14, 9, pc.SineOut), 1, -1, true, true),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(88)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(5, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.5, 0.03, pc.BounceIn, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(12, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(13, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.5, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(13, 0.7, 2, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.3, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(20, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.1, 2.0, 0.8, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2.0, 0.4, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.7, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.15, 2.0, 0.5, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(37, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.2, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(38, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(39, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.5, 0.03, pc.BounceOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(44, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(48, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.5, 0.03, pc.BounceIn, 0), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(51, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(55, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.5, 0.03, pc.BounceOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(58, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(62, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.5, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 0.5, 0.03, pc.BounceOut, 1), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(67),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(67, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(70, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(71, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.2, 1.5, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(71, 0.55, 2, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(78),
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(1, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.1, 0, 17, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(8, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.5, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.1, 0, 17, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(18, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 2, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.1, 0, 17, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(25, 0.15, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(25, 0.85, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(28, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 2, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 2),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 2),
                    ], 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-2.1, 0, 17, 6, pc.CubicOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(43, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(53, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(54, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(59, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(63, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(64, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(66, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(73)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(9, 0.6, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 1.5)
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.85, undefined, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(23, 0.4, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.3, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(23, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(26, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(1 /* left */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 1.5)
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(30, 0.15),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(35, 0.75, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(40, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0, 10, 2, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(44, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(46, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 10, 2, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(57, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(62, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(67, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(67, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0.5, 0, 10, 2, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(71, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(76, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 0.5, -1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(76, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 10, 2, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(83, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(84, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(91)
                ]),
            ]),
            // Skupina 7
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(7, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.75, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1, 0.75)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(17, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.25, 0, 1.5, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.33),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 1.5, 0.66),
                    ], 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.13, undefined, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(22, 0.165, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(22, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(22, 0.835, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 15, 7, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(31, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.25),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.2, 1.5, 0.75),
                    ], 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 15, 7, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(35, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 1.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(-1.6, 0, 15, 7, pc.BounceOut), 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(42, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(42, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(43, 0.25, 2, 0, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(43, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(43, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.2, 2, 0, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(50)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(7, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.2, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(17, 0.3),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(19, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.6, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(21, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.9, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(25, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(29, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.7, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(32, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.3, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(34, 0.125, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(35, 0.7, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(40, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1, 0, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(41, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.3, 1, 0, 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(52, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.25, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(54, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(55, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(55, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.8, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(57, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(58, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.4, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(59, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(60, 0.25, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(61, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.75, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(64, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.3, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(66, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 0 /* none */, 0.1, 2, 0.7, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(15, 0, 18, 5, pc.BounceOut), 0.3, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(68, 0.875, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(75)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(2, 0.25, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(2, 0.75, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(3, 0.5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(5, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(9, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(10, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(11, 0.65, 2, 0, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(13, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(17, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.35, 2, 0, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(21, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(22, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(25, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(26, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(27, 0.5, 2, 0, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(29, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(33, 0.2),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(35, 0.4, 2, 0, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(37, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(38, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 0.5, 0, 0, 0.25)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(39, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(39),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(46),
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(3, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(4, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.35, 15, 8, pc.SineOut), 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.35, 15, 8, pc.SineOut), 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_WallProps(5, 1, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(7, 0.2, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(10, 0.55),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(14, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.15, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.55, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ResetWallProps(22),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(24, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.6, 15, 8, pc.SineOut), 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.1, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(29, 0.6, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(36, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.1, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.6, 15, 8, pc.SineOut), 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(41, 0.6, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(43, 0.4),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(50, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.35, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.3, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1, 10, 4, pc.SineIn)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.35, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(56, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(62, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockContainerData(0 /* none */, [
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 1, 1, 0, 1, 1, -1, false, true),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.15, 1),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.15, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0, 10, 4, pc.SineIn)),
                        new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.15, 1),
                    ], 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(69)
                ]),
            ]),
            // Skupina 8
            new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlockGroup(8, [
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(0, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.33, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0), 0.5, 0, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.33, 1, 0.33, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0.5), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.34, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 1), 0.5, 2, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(12, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(15, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(16, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.5, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(16, 0.25, 2.25, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(20, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(23, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.33, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0), 0.5, 0, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.33, 1, 0.33, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0.5), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(27, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.34, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 1), 0.5, 2, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(32, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(33, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(2 /* bottom */, 2 /* center */, 0.4, 1, 0, 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(33, 0.5, 2.25, 1, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.34, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 1), 0.5, 0, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.33, 1, 0.34, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0.5), 0.5, 1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.33, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0), 0.5, 2, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(48, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(50, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(52, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 0.33, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0.5), 0.5, 0, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.34, 1, 0.33, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 1), 0.5, 1, false, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(60, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 0.33, 1, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, -1.25, 0.08, pc.SineInOut, 0.5), 0.5, 2, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(67)
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(1, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(0, 5, 2 /* widthFromCenter */, 0.8),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(4, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(6, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.18, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.3, 18, 5, pc.CubicOut))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(9, 0.35, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(13, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.6, 18, 5, pc.CubicOut), 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.18, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.6, 18, 5, pc.CubicOut))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(22, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.18, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.3, 18, 5, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(25, 0.35, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(28, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.6, 18, 5, pc.CubicOut), 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(31, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(34, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.4, 18, 5, pc.CubicOut), 1)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(37, 0.35),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(39, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.18, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.7, 18, 5, pc.CubicOut))),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(42, 0.7),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(44, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 0 /* none */, 0.18, 1.5, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(1, 0.3, 18, 5, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(49, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 1, 18, 5, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(52, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.75, 18, 5, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(55, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 0 /* none */, 0.2, 1, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue1(0, 0.5, 18, 5, pc.CubicOut), 0, 0.5)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(55, 0.75, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_ChangeRoad(56, 5, 2 /* widthFromCenter */, 0.6),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(62),
                ]),
                new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_4__.PathBlock(2, [
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.25, true),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_SpeedChange(4, 0.75, false),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(8, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(9, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 0), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(14, 0.5, undefined, 1),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(17, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(18, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 1), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(19, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(21, 0.25),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(29, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(30, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 0), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(34, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(38, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(39, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(0 /* left */, 1 /* left */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 0), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(45, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(46, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 1), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(47, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Bonus(49, 0.75),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_Trampoline(54, 0.5),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_BlockObstacle(55, new _Row_Elements_Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_8__.ObstacleBlockData(1 /* right */, 3 /* right */, 1, 0.5, 0, new _Row_Elements_Value__WEBPACK_IMPORTED_MODULE_9__.AnimValue2(0, 2, 0.075, pc.Linear, 0), 0.5, -1, true, true)),
                    new _Path_PathBlockEntry__WEBPACK_IMPORTED_MODULE_5__.PBE_End(62)
                ]),
            ]),
        ]);
        this._road = new _Road_RoadManager__WEBPACK_IMPORTED_MODULE_6__.RoadManager();
        this._elements = new _Row_Elements_RowElementManager__WEBPACK_IMPORTED_MODULE_7__.RowElementManager();
        this._player = new _Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._player.reset();
        this._view.reset();
        this._pathBlocks.reset();
        this._road.reset();
        this._elements.reset();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._player.update();
        this._view.update();
        this._road.update();
        this._elements.update();
    }
}
GameWorld.CENTER_X = 0;
GameWorld.GROUND_Y = 0;
GameWorld.START_Z = 0;


/***/ }),

/***/ "./src/Gameplay/Game World/Path/PathBlock.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/Game World/Path/PathBlock.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export PathBlock [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PathBlockGroup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PathBlockNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PathBlockPointer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PathBlock": () => /* binding */ PathBlock,
/* harmony export */   "PathBlockGroup": () => /* binding */ PathBlockGroup,
/* harmony export */   "PathBlockNode": () => /* binding */ PathBlockNode,
/* harmony export */   "PathBlockPointer": () => /* binding */ PathBlockPointer
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");
/* harmony import */ var _PathBlockManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PathBlockManager */ "./src/Gameplay/Game World/Path/PathBlockManager.ts");



class PathBlock {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(uid, entries) {
        this._uid = uid;
        this._entries = entries;
    }
    /**
     * (RO) Jedinecna identifikace bloku v ramci skupiny
     */
    get uid() { return this._uid; }
    get entries() { return this._entries; }
    //-------------------------------------------------------------------------
    /**
     * Vraci pocet radek bloku
     */
    //-------------------------------------------------------------------------
    getLength() {
        return this._entries[this._entries.length - 1].rowId;
    }
}
class PathBlockGroup {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(uid, blocks, blocksPerPathCnt = 3) {
        this._uid = uid;
        this._blocks = blocks;
        this._blocksPerPathCnt = blocksPerPathCnt;
        this._unusedBlocks = new _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
        this.fillUnusedBlockList();
    }
    get uid() { return this._uid; }
    get blocks() { return this._blocks; }
    /**
     * (RO) Pocet bloku, ktere se vyberou ze skupiny nez spravce cesty prejde na dalsi skupinu
     */
    get blocksPerPathCnt() { return this._blocksPerPathCnt; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getRndBlock() {
        if (this._unusedBlocks.empty)
            this.fillUnusedBlockList();
        return this._unusedBlocks.removeById(0);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    fillUnusedBlockList() {
        this._unusedBlocks.clear();
        this._blocks.forEach((block) => {
            this._unusedBlocks.add(block, _Game__WEBPACK_IMPORTED_MODULE_0__.rnd1.randomIntIn(0, this._unusedBlocks.size));
        });
    }
}
class PathBlockNode {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(block, group, prevNode) {
        this._block = block;
        this._group = group;
        this._next = undefined;
        if (prevNode) {
            prevNode._next = this;
            this._worldRowId = prevNode._worldRowId + prevNode._block.getLength();
        }
        else {
            this._worldRowId = 0;
        }
    }
    /**
     * (RO) Index radky v hernim svete pocatku bloku
     */
    get worldRowId() { return this._worldRowId; }
    /**
     * (RO) Data bloku
     */
    get block() { return this._block; }
    /**
     * (RO) Skupina bloku
     */
    get group() { return this._group; }
    /**
     * (RO) Reference na nasledujici uzel
     */
    get next() { return this._next; }
}
class PathBlockPointer {
    get node() { return this._node; }
    /**
     * (RO) Prvni nezpracovany zaznam v aktualnim bloku cesty
     */
    get entry() { return this._entry; }
    /**
     * (RO) Index radky v ramci herniho sveta prvniho nezpracovaneho zaznamu
     */
    get entryWorldRowId() { return this._node.worldRowId + this._entry.rowId; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(firstNode) {
        this._node = firstNode;
        this._entryId = -1;
        this.next();
    }
    //-------------------------------------------------------------------------
    /**
     * Presun na dalsi zaznam
     */
    //-------------------------------------------------------------------------
    next() {
        this._entry = this._node.block.entries[++this._entryId];
        while (this._entry.type == 0 /* end */) {
            if (!this._node.next)
                _PathBlockManager__WEBPACK_IMPORTED_MODULE_2__.PathBlockManager.instance.prepareNextBlock();
            this._node = this._node.next;
            this._entryId = 0;
            this._entry = this._node.block.entries[this._entryId];
        }
        /*if (++this._entryId == this._node.data.entries.length) {
            if (!this._node.next)
                PathBlockManager.instance.prepareNextBlock();

            this._node = this._node.next;
            this._entryId = 0;
        }

        this._entry = this._node.data.entries[this._entryId];*/
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Path/PathBlockEntry.ts":
/*!********************************************************!*\
  !*** ./src/Gameplay/Game World/Path/PathBlockEntry.ts ***!
  \********************************************************/
/*! namespace exports */
/*! export PBE_BlockObstacle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_Bonus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_ChangeRoad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_End [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_ResetWallProps [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_SpeedChange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_Trampoline [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PBE_WallProps [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PathBlockEntry [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ePBE_ChangeRoadMode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ePathBlockEntryType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ePathBlockEntryType": () => /* binding */ ePathBlockEntryType,
/* harmony export */   "PathBlockEntry": () => /* binding */ PathBlockEntry,
/* harmony export */   "PBE_End": () => /* binding */ PBE_End,
/* harmony export */   "PBE_WallProps": () => /* binding */ PBE_WallProps,
/* harmony export */   "PBE_ResetWallProps": () => /* binding */ PBE_ResetWallProps,
/* harmony export */   "ePBE_ChangeRoadMode": () => /* binding */ ePBE_ChangeRoadMode,
/* harmony export */   "PBE_ChangeRoad": () => /* binding */ PBE_ChangeRoad,
/* harmony export */   "PBE_BlockObstacle": () => /* binding */ PBE_BlockObstacle,
/* harmony export */   "PBE_Trampoline": () => /* binding */ PBE_Trampoline,
/* harmony export */   "PBE_Bonus": () => /* binding */ PBE_Bonus,
/* harmony export */   "PBE_SpeedChange": () => /* binding */ PBE_SpeedChange
/* harmony export */ });
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");

var ePathBlockEntryType;
(function (ePathBlockEntryType) {
    ePathBlockEntryType[ePathBlockEntryType["end"] = 0] = "end";
    ePathBlockEntryType[ePathBlockEntryType["obstacleBlock"] = 1] = "obstacleBlock";
    ePathBlockEntryType[ePathBlockEntryType["trampoline"] = 2] = "trampoline";
    ePathBlockEntryType[ePathBlockEntryType["bonus"] = 3] = "bonus";
    ePathBlockEntryType[ePathBlockEntryType["speedChange"] = 4] = "speedChange";
    ePathBlockEntryType[ePathBlockEntryType["changeRoadProps"] = 5] = "changeRoadProps";
    ePathBlockEntryType[ePathBlockEntryType["changeWallProps"] = 6] = "changeWallProps";
    ePathBlockEntryType[ePathBlockEntryType["resetWallProps"] = 7] = "resetWallProps";
})(ePathBlockEntryType || (ePathBlockEntryType = {}));
class PathBlockEntry {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(rowId, type) {
        this._rowId = rowId;
        this._type = type;
    }
    /**
     * (RO) Aktivacni pozice v indexu radky zeme v ramci bloku cesty
     */
    get rowId() { return this._rowId; }
    /**
     * (RO) Typ zaznamu
     */
    get type() { return this._type; }
}
/**
 * Vyznaceni konce bloku
 */
class PBE_End extends PathBlockEntry {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(rowId) {
        super(rowId, 0 /* end */);
    }
}
class PBE_WallProps extends PathBlockEntry {
    constructor(rowId, baseMinHeight, baseMaxHeight, waveMinRatio = 1, waveMaxRatio = 1) {
        super(rowId, 6 /* changeWallProps */);
        this.baseMinHeight = baseMinHeight;
        this.baseMaxHeight = baseMaxHeight;
        this.waveMinRatio = waveMinRatio;
        this.waveMaxRatio = waveMaxRatio;
    }
}
class PBE_ResetWallProps extends PathBlockEntry {
    constructor(rowId) {
        super(rowId, 7 /* resetWallProps */);
    }
}
var ePBE_ChangeRoadMode;
(function (ePBE_ChangeRoadMode) {
    ePBE_ChangeRoadMode[ePBE_ChangeRoadMode["x"] = 0] = "x";
    ePBE_ChangeRoadMode[ePBE_ChangeRoadMode["widthFromLeft"] = 1] = "widthFromLeft";
    ePBE_ChangeRoadMode[ePBE_ChangeRoadMode["widthFromCenter"] = 2] = "widthFromCenter";
    ePBE_ChangeRoadMode[ePBE_ChangeRoadMode["widthFromRight"] = 3] = "widthFromRight";
})(ePBE_ChangeRoadMode || (ePBE_ChangeRoadMode = {}));
/**
 * Zmena sirky/pozice cesty
 */
class PBE_ChangeRoad extends PathBlockEntry {
    //-------------------------------------------------------------------------
    /**
     *
     * @param rowId Index radky
     * @param changeLen Pocet radek, do kterych bude zmena rozlozena
     * @param changeMode Rezim zmeny
     * @param targetValue 0 az 1 (1 = max sirka)
     */
    //-------------------------------------------------------------------------
    constructor(rowId, changeLen, changeMode, targetValue) {
        super(rowId, 5 /* changeRoadProps */);
        this._changeLen = changeLen;
        this._changeMode = changeMode;
        this._tagetValue = targetValue * _Road_RoadTile__WEBPACK_IMPORTED_MODULE_0__.RoadTile.MAX_WIDTH;
    }
    /**
     * (RO) Delka zmeny v poctu radek zeme. Urcuje vzdalenost od pocatku zmeny, kdy bude zmena dokoncena
     */
    get changeLen() { return this._changeLen; }
    /**
     * (RO) Rezim zmeny
     */
    get changeMode() { return this._changeMode; }
    /**
     * (RO) Cilova hodnota zmeny
     */
    get targetValue() { return this._tagetValue; }
}
/**
 * Blok prekazky nebo kontejner s bloky prekazky
 */
class PBE_BlockObstacle extends PathBlockEntry {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(rowId, data) {
        super(rowId, 1 /* obstacleBlock */);
        this._data = data;
    }
    get data() { return this._data; }
}
class PBE_Trampoline extends PathBlockEntry {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(rowId, x) {
        super(rowId, 2 /* trampoline */);
        this._x = x;
    }
    /**
     * (RO) Pozice trampoliny v dlazdici radky (0 az 1)
     */
    get x() { return this._x; }
}
class PBE_Bonus extends PathBlockEntry {
    //-------------------------------------------------------------------------
    /**
     *
     * @param rowId
     * @param x Pozice bonusu v dlazdici radky (0 az 1)
     * @param y Jak vysoko je bonus od zeme (defaultne je tesne nad zemi)
     * @param type Typ bonusu
     * @param shadow True, pokud se ma zobrazovat stin
     */
    //-------------------------------------------------------------------------
    constructor(rowId, x, y = 0.5, type = 0, shadow = true) {
        super(rowId, 3 /* bonus */);
        this._x = x;
        this._y = y;
        this._bnsType = type;
        this._shadow = shadow;
    }
    get x() { return this._x; }
    get y() { return this._y; }
    get bonusType() { return this._bnsType; }
    get shadow() { return this._shadow; }
}
class PBE_SpeedChange extends PathBlockEntry {
    //-------------------------------------------------------------------------
    /**
     * Zrychlujici dlazdice
     * @param rowId
     * @param x Pozice na ose X (0 az 1)
     * @param speedup Pokud true, tak se jedna o zrychleni, jinak o zpomaleni. Default: true
     */
    //-------------------------------------------------------------------------
    constructor(rowId, x, speedup = true) {
        super(rowId, 4 /* speedChange */);
        this._x = x;
        this._speedup = speedup;
    }
    /**
     * (RO) Pozice dlazdice na radce (0 az 1)
     */
    get x() { return this._x; }
    /**
     * (RO) Pokud true, tak se jedna o zrychleni, jinak o zpomaleni
     */
    get speedup() { return this._speedup; }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Path/PathBlockManager.ts":
/*!**********************************************************!*\
  !*** ./src/Gameplay/Game World/Path/PathBlockManager.ts ***!
  \**********************************************************/
/*! namespace exports */
/*! export PathBlockManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PathBlockManager": () => /* binding */ PathBlockManager
/* harmony export */ });
/* harmony import */ var _PathBlock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PathBlock */ "./src/Gameplay/Game World/Path/PathBlock.ts");

class PathBlockManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(blockGroups) {
        PathBlockManager._instance = this;
        this._blockGroups = blockGroups;
        this._blockPointer = new _PathBlock__WEBPACK_IMPORTED_MODULE_0__.PathBlockPointer();
    }
    static get instance() { return PathBlockManager._instance; }
    /**
     * (RO) Uzel s prvnim blokem
     */
    get firstBlockNode() { return this._firstBlockNode; }
    /**
     * (RO) Uzel s poslednim blokem
     */
    get lastBlockNode() { return this._lastBlockNode; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._curGroupId = 0;
        this._curGroupRemBlockCnt = this._blockGroups[0].blocksPerPathCnt;
        this._firstBlockNode = undefined;
        this._lastBlockNode = undefined;
        this.prepareNextBlock();
        this._firstBlockNode = this._lastBlockNode;
        this._blockPointer.init(this._firstBlockNode);
    }
    //-------------------------------------------------------------------------
    /**
     * Prida dalsi uzel s blokem cesty
     */
    //-------------------------------------------------------------------------
    prepareNextBlock() {
        if (this._curGroupRemBlockCnt-- == 0) {
            // Prechod do dalsi skupiny
            if (++this._curGroupId == this._blockGroups.length)
                this._curGroupId = 4;
            this._curGroupRemBlockCnt = this._blockGroups[this._curGroupId].blocksPerPathCnt - 1;
        }
        let group = this._blockGroups[this._curGroupId];
        // Pridat dalsi uzel
        this._lastBlockNode = new _PathBlock__WEBPACK_IMPORTED_MODULE_0__.PathBlockNode(group.getRndBlock(), group, this._lastBlockNode);
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Player/Controls.ts":
/*!****************************************************!*\
  !*** ./src/Gameplay/Game World/Player/Controls.ts ***!
  \****************************************************/
/*! namespace exports */
/*! export PlControls [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PlControls": () => /* binding */ PlControls
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/ScaleManager */ "./src/Utils/ScaleManager.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _HUD_Tutorial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../HUD/Tutorial */ "./src/Gameplay/HUD/Tutorial.ts");




class PlControls {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(player) {
        this._player = player;
        this._pixToMeters = 1 / (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.outputWidth / 14);
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.on(_Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_1__.ScaleManager.EVENT_RESIZE, () => {
            this._pixToMeters = 1 / (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.outputWidth / 14);
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._pointerDown = false;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    activate() {
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.touch) {
            let touch = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.touch;
            touch.on(pc.EVENT_TOUCHSTART, this.handleTouchStart, this);
            touch.on(pc.EVENT_TOUCHEND, this.handleTouchEnd, this);
            touch.on(pc.EVENT_TOUCHCANCEL, this.handleTouchEnd, this);
            touch.on(pc.EVENT_TOUCHMOVE, this.handleTouchMove, this);
        }
        else if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.mouse) {
            let mouse = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.mouse;
            mouse.on(pc.EVENT_MOUSEDOWN, this.handleMouseDown, this);
            mouse.on(pc.EVENT_MOUSEMOVE, this.handleMouseMove, this);
            mouse.on(pc.EVENT_MOUSEUP, this.handleMouseUp, this);
        }
    }
    //#region Mouse
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleMouseDown(event) {
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.paused || _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.state != 0 /* game */)
            return;
        if (this.handlePointerDown(event.x))
            event.event.preventDefault();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleMouseMove(event) {
        if (!this._pointerDown)
            return;
        this._player.horMove((event.x - this._pointerStartX) * this._pixToMeters);
        event.event.preventDefault();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleMouseUp() {
        if (this._pointerDown) {
            this._pointerDown = false;
        }
    }
    //#endregion
    //#region Touch
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleTouchStart(event) {
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.paused || _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.state != 0 /* game */)
            return;
        let touch = event.changedTouches[event.changedTouches.length - 1];
        this._touchId = touch.id;
        if (this.handlePointerDown(touch.x))
            event.event.preventDefault();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleTouchMove(event) {
        if (this._pointerDown) {
            let i = event.changedTouches.length;
            while (i-- != 0) {
                if (this._touchId == event.changedTouches[i].id) {
                    this.handlePointerMove(event.changedTouches[i].x);
                    break;
                }
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleTouchEnd(event) {
        if (this._pointerDown) {
            let i = event.changedTouches.length;
            while (i-- != 0) {
                if (this._touchId == event.changedTouches[i].id) {
                    this._touchId = undefined;
                    this._pointerDown = false;
                    break;
                }
            }
        }
    }
    //#endregion
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handlePointerDown(x) {
        if (_HUD_Tutorial__WEBPACK_IMPORTED_MODULE_3__.Tutorial.instance.active && _HUD_Tutorial__WEBPACK_IMPORTED_MODULE_3__.Tutorial.instance.reqTapToPlay)
            return false;
        if (this._player.startHorMove()) {
            this._pointerDown = true;
            this._pointerStartX = x;
        }
        return true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handlePointerMove(x) {
        if (this._pointerDown) {
            this._player.horMove((x - this._pointerStartX) * this._pixToMeters);
        }
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Player/Player.ts":
/*!**************************************************!*\
  !*** ./src/Gameplay/Game World/Player/Player.ts ***!
  \**************************************************/
/*! namespace exports */
/*! export Player [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ePlState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ePlState": () => /* binding */ ePlState,
/* harmony export */   "Player": () => /* binding */ Player
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _HUD_HUD__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../HUD/HUD */ "./src/Gameplay/HUD/HUD.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Road_RoadManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Road/RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../View */ "./src/Gameplay/Game World/View.ts");
/* harmony import */ var _Controls__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Controls */ "./src/Gameplay/Game World/Player/Controls.ts");
/* harmony import */ var _Tail__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Tail */ "./src/Gameplay/Game World/Player/Tail.ts");
/* harmony import */ var _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../Publisher API/Gamee/GameeWrapper */ "./src/Publisher API/Gamee/GameeWrapper.ts");
/* harmony import */ var _Results__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Results */ "./src/Gameplay/Game World/Player/Results.ts");
/* harmony import */ var _Speed__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Speed */ "./src/Gameplay/Game World/Player/Speed.ts");
/* harmony import */ var _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../Utils/ProtectedValue */ "./src/Utils/ProtectedValue.ts");














var ePlState;
(function (ePlState) {
    ePlState[ePlState["idle"] = 0] = "idle";
    ePlState[ePlState["rolling"] = 1] = "rolling";
    ePlState[ePlState["death"] = 2] = "death";
})(ePlState || (ePlState = {}));
class Player {
    //#endregion
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._rotation = new pc.Vec3();
        Player._instance = this;
        this._camDisTween = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.tween(_View__WEBPACK_IMPORTED_MODULE_7__.View.instance);
        // Kontejner kulicky
        this._ballContainer = new pc.GraphNode("ball");
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._ballContainer);
        // Entita
        this._ball = new pc.Entity("ballEnt");
        this._ball.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("player" /* player */, "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            lightmapped: false,
        });
        this._ball.setLocalScale(Player.RADIUS * 2, Player.RADIUS * 2, Player.RADIUS * 2);
        this._ballContainer.addChild(this._ball);
        let ballMat = this._ball.model.meshInstances[0].material;
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.ballColor) {
            ballMat.diffuse.copy(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.ballColor);
        }
        else {
            ballMat.diffuseMap = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("ball" /* ball */, "texture" /* texture */).resource;
        }
        ballMat.update();
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.createSoundComponent(this._ball);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "jump" /* jump */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.jump, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "crash" /* crash */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.crash, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "bonus" /* bonus */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.bonus, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "slowdown" /* slowdown */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.slowdown, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "speedup" /* speedup */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.speedup, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "timeOut" /* timeOut */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.timeOut, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._ball, "gameStart" /* gameStart */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.gameStart, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 0 /* GAMEE */ || _Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */)
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_10__.Wrapper.EVENTS.on("unmute" /* unmute */, () => { _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.mute = false; _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "music" /* music */); }, this);
        // Pruhledny obal
        let mat = new pc.StandardMaterial();
        mat.diffuse.set(0, 0, 0);
        mat.emissive.set(0, 1, 0);
        mat.blendType = pc.BLEND_NORMAL;
        mat.opacity = 0.15;
        mat.useFog = false;
        mat.useLighting = false;
        mat.depthWrite = false;
        mat.update();
        this._ballShineWrap = new pc.Entity("plBallWrap");
        this._ballShineWrap.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("player" /* player */, "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            lightmapped: false,
        });
        this._ballShineWrap.model.meshInstances[0].material = mat;
        this._ballShineWrap.setLocalScale(Player.RADIUS * 2 * 1.15, Player.RADIUS * 2 * 1.15, Player.RADIUS * 2 * 1.15);
        this._ballContainer.addChild(this._ballShineWrap);
        // Stin
        let shareMat = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.getSharedMaterial(1 /* circleShadow */);
        this._shadow = new pc.Entity("plShadow");
        this._shadow.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: shareMat.material,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            lightmapped: false,
            batchGroupId: shareMat.batchGroupId
        });
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._shadow);
        // Pozice a scale  
        this._pos = new pc.Vec3();
        this._cameraOrigin = new pc.Vec3();
        this._scale = new pc.Vec3();
        this._spdChngBallScaleTween = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.tween(this._scale);
        this._spdChngBallScaleTween.on("update", () => { this._scaleUpdate = true; });
        this._spdChngBallScaleTween.yoyo(true);
        // Ocas
        this._tail = new _Tail__WEBPACK_IMPORTED_MODULE_9__.Tail(this);
        // Kolize
        this._occupiedTiles = [];
        this._colSphere = new pc.BoundingSphere(this._pos, Player.RADIUS);
        this._rowElColFncs = [];
        this._rowElColFncs[0 /* obstacleBlock */] = this.handleObstacleBlockCollision;
        this._rowElColFncs[1 /* trampoline */] = this.handleTrampolineCollision;
        this._rowElColFncs[3 /* bonus */] = this.handleBonusCollision;
        this._rowElColFncs[2 /* speedChange */] = this.handleSpeedChangeCollision;
        this._flashFxSettings = [
            // Kolize s prekazkou
            {
                color: new pc.Color(1, 1, 1),
                alpha: 1,
                lenIn: 100,
                easeIn: pc.CubicOut,
                lenOut: 300,
                easeOut: pc.CubicOut
            },
            // Sebrani bonusu
            {
                color: new pc.Color(1, 1, 1),
                alpha: 0.5,
                lenIn: 100,
                easeIn: pc.CubicOut,
                lenOut: 250,
                easeOut: pc.CubicIn
            },
            // Zrychleni
            {
                color: new pc.Color(0.5, 1, 0.5),
                alpha: 0.2,
                lenIn: 1000,
                easeIn: pc.CubicOut,
                lenOut: 300,
                easeOut: pc.SineIn
            },
            // Zpomaleni
            {
                color: new pc.Color(1, 0.5, 0.5),
                alpha: 0.2,
                lenIn: 1000,
                easeIn: pc.CubicOut,
                lenOut: 300,
                easeOut: pc.SineIn
            }
        ];
        // Ovladani
        this._controls = new _Controls__WEBPACK_IMPORTED_MODULE_8__.PlControls(this);
        this._controls.activate();
        // Rychlost
        this._speedController = new _Speed__WEBPACK_IMPORTED_MODULE_12__.SpeedController(this.handleSpeedInc, this);
        // Skore a zivoty
        this._results = new _Results__WEBPACK_IMPORTED_MODULE_11__.PlResults(this);
        this._lifeCnt = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_13__.ProtectedValue();
        // Funkce pro zpracovani jednotlivych stavu
        this._stateProcessFnc = [];
        this._stateProcessFnc[1 /* rolling */] = this.processRolling;
    }
    static get instance() { return Player._instance; }
    /**
     * (RO) Aktualni stav hrace
     */
    get state() { return this._state; }
    /**
     * (RO) Pozice hrace (stredu kulicky) v hernim svete
     */
    get pos() { return this._pos; }
    /**
     * (RO) Pozice, podle ktere se umisuje kamera
     */
    get cameraOrigin() { return this._cameraOrigin; }
    /**
     * pc.SoundComponent pro hrehrani zvuku
     */
    get soundComponent() { return this._ball.sound; }
    /**
     * Vysledky hrace
     */
    get results() { return this._results; }
    /**
     * (RO) Pocet zbyvajicich zivotu
     */
    get lifeCnt() { return this._lifeCnt.value; }
    /**
     * (RO) True, pokud probiha skok
     */
    get jumpProgress() { return this._jumpProgress; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._pos.set(_GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.CENTER_X, _Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.Y + Player.RADIUS, _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z - 4);
        this._cameraOrigin.copy(this._pos);
        this._rotation.set(0, 0, 0);
        this._ballContainer.setPosition(this._pos);
        this._ball.model.show();
        this._ball.setLocalEulerAngles(this._rotation);
        this._ballShineWrap.model.enabled = false;
        this._shadow.setPosition(this._pos.x, _Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.Y + Player.SHADOW_OFFSET_Y, this._pos.z);
        this._shadow.setLocalScale(Player.SHADOW_SCALE, 1, Player.SHADOW_SCALE);
        // Scale
        this._scale.set(1, 1, 1);
        this._scaleUpdate = false;
        this._ballContainer.setLocalScale(this._scale);
        this._spdChngBallScaleTween.stop();
        // Ocas
        this._tail.reset();
        this._tail.setColor(Player.TAIL_COLORS[0]);
        // Skok
        this._jumpStartZ = 0;
        this._jumpProgress = 0;
        // Rychlost pohybu vpred
        this._speedController.reset();
        this._curSpeed = 0;
        this._bnsSpeedTime = 0;
        // Skore a zivoty
        this._results.reset();
        this._lifeCnt.value = _Results__WEBPACK_IMPORTED_MODULE_11__.PlResults.LIFE_CNT;
        // Kolize
        this._obsColTime = 0;
        // Ovladani
        this._controls.reset();
        // Tween pro vzdalenost kamery od hrace
        this._camDisTween.stop();
        // Audio
        this._ball.sound.pitch = 1.0;
        this._spdChngIniAudioPitch = this._spdChngTarAudioPitch = 1;
        // Stav
        this._state = 0 /* idle */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    applyGameeExtraLife() {
        // Obnovit pocet zivotu
        this._lifeCnt.value = 1;
        // Stav
        this._state = 0 /* idle */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let fnc = this._stateProcessFnc[this._state];
        if (fnc)
            fnc.call(this);
        this._speedController.update();
        // Scale
        if (this._scaleUpdate) {
            this._scaleUpdate = false;
            this._ballContainer.setLocalScale(this._scale);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Zahajeni horizontalniho pohybu kulicky
     */
    //-------------------------------------------------------------------------
    startHorMove() {
        if (this._state == 1 /* rolling */ || this._state == 0 /* idle */) {
            if (this._state == 0 /* idle */) {
                this._state = 1 /* rolling */;
                this.setOccupiedRoadTiles();
                // Rozjezd kulicky
                this.changeSpeed(1, 2, pc.SineIn);
                // Zacit prehravat hudbu
                if (!this._ball.sound.slots["music" /* music */]) {
                    this._ball.sound.addSlot("music" /* music */, {
                        loop: true,
                        volume: 0.4,
                        autoPlay: false,
                        asset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("music" /* music */, "audio" /* audio */).id
                    });
                }
                _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "music" /* music */);
                _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "gameStart" /* gameStart */);
                _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.events.fire(Player.EVENT_START);
            }
            this._hMoveStartX = this._pos.x;
            this._hMoveOffsetCor = 0;
            return true;
        }
        return false;
    }
    //-------------------------------------------------------------------------
    /**
     * Pohyb po ose X o zadany offset. Pred prvnim volani musi byt zavolano startHorMove()
     * @param offset
     */
    //-------------------------------------------------------------------------
    horMove(offset) {
        if (this._state == 1 /* rolling */) {
            let x = this._hMoveStartX + (offset - this._hMoveOffsetCor);
            // Zabranit vyjeti mimo hranice cesty
            let tile = this._occupiedTiles[0];
            if (x - Player.RADIUS < tile.x) {
                x = tile.x + Player.RADIUS;
                this._hMoveOffsetCor = offset;
                this._hMoveStartX = x;
            }
            else if (x + Player.RADIUS > tile.x + tile.width) {
                x = tile.x + tile.width - Player.RADIUS;
                this._hMoveOffsetCor = offset;
                this._hMoveStartX = x;
            }
            this._cameraOrigin.x = this._pos.x = x;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    processRolling() {
        let i;
        // Bonusova rychlost
        if (this._bnsSpeedTime != 0 && _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time >= this._bnsSpeedTime) {
            // Navrat do zakladni rychlosti
            this._bnsSpeedTime = 0;
            this.changeSpeed(1, 1.5, pc.SineIn);
            this._tail.setColor(Player.TAIL_COLORS[0], 1.5 * 1000, pc.SineIn);
            this._ballShineWrap.model.enabled = false;
            this._camDisTween.to({ cameraPlDistance: _View__WEBPACK_IMPORTED_MODULE_7__.View.CAM_DEF_PL_DIS }, 1.5, pc.SineIn);
            this._camDisTween.start();
        }
        // Vypocitat o kolik se hrac posune smerem vpred        
        /*if (GameTimer.instance.timesUp) {
            // Snizovat rychlost kulicky, dokud nezastavi
            if ((this._curSpeed -= TIMER.deltaS * 4) <= 0) {
                this._curSpeed = 0;
                this._state = ePlState.death;
                Gameplay.instance.events.fire(Player.EVENT_STOP);
            }
        }
        else*/ {
            if (this._curSpeed != this._spdChngTarSpeed)
                this.processSpeedChange();
        }
        let totalStepZ = this._curSpeed * _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.deltaS;
        // Ocas hrace
        this._tail.update();
        // Rotace kulicky
        this._rotation.x += totalStepZ * -100;
        this._ball.setLocalEulerAngles(this._rotation);
        // Zpracovat pohyb
        do {
            let stepZ = totalStepZ;
            if (stepZ > 0.15)
                stepZ = 0.15;
            totalStepZ -= stepZ;
            // Pozice na Z
            this._pos.z -= stepZ;
            // Skok
            if (this._jumpStartZ < 0)
                this.processJump();
            // Kolize
            let tile = this._occupiedTiles[0];
            this.setOccupiedRoadTiles();
            if (tile != this._occupiedTiles[0]) {
                let tile = this._occupiedTiles[0];
                if (this._pos.x - Player.RADIUS < tile.x) {
                    let wallBBox = tile.lWall.aabb;
                    while (wallBBox.intersectsBoundingSphere(this._colSphere))
                        this._pos.x += 0.2;
                    if (this._pos.x - Player.RADIUS > tile.x)
                        this._pos.x = tile.x + Player.RADIUS;
                    this._cameraOrigin.x = this._pos.x;
                }
                else if (this._pos.x + Player.RADIUS > tile.x + tile.width) {
                    let wallBBox = tile.rWall.aabb;
                    while (wallBBox.intersectsBoundingSphere(this._colSphere))
                        this._pos.x -= 0.2;
                    if (this._pos.x + Player.RADIUS < tile.x + tile.width)
                        this._pos.x = tile.x + tile.width - Player.RADIUS;
                    this._cameraOrigin.x = this._pos.x;
                }
            }
            // Kolize s row elementy
            let prevRoadTile = null;
            for (i = 0; i < 2; i++) {
                let roadTile = this._occupiedTiles[i];
                if (roadTile != prevRoadTile) {
                    this.checkRowElementCollision(roadTile);
                    prevRoadTile = roadTile;
                }
            }
        } while (totalStepZ > 0);
        // Nastavit aktualni pozici
        this._ballContainer.setPosition(this._pos);
        this._shadow.setPosition(this._pos.x, _Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.Y + Player.SHADOW_OFFSET_Y, this._pos.z);
        // Kamera origin
        this._cameraOrigin.z = this._pos.z;
        // Aktualizovat skore za ujetou vzdalenost
        this._results.update();
    }
    //-------------------------------------------------------------------------
    /**
     * Ulozi RoadTiles, do kterych kulicka zasahuje (0 = predkem, 1 = zadkem)
     */
    //-------------------------------------------------------------------------
    setOccupiedRoadTiles() {
        let roadMng = _Road_RoadManager__WEBPACK_IMPORTED_MODULE_5__.RoadManager.instance;
        this._occupiedTiles[0] = roadMng.getRowTile(Math.floor((this._pos.z - _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z) / -_Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.DEPTH));
        if (!_Game__WEBPACK_IMPORTED_MODULE_0__.Game.SHOW_PATH_BLOCK_ID) {
            this._occupiedTiles[1] = roadMng.getRowTile(Math.floor((this._pos.z + _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z) / -_Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.DEPTH));
        }
        else {
            let tile = roadMng.getRowTile(Math.floor((this._pos.z + _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z) / -_Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.DEPTH));
            if (tile != this._occupiedTiles[1]) {
                this._occupiedTiles[1] = tile;
                let blockNode = tile.pathBlockNode;
                _HUD_HUD__WEBPACK_IMPORTED_MODULE_3__.HUD.instance.pathBlockInfo.element.text = blockNode.group.uid + ":" + blockNode.block.uid;
            }
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Detekce kolize hrace s row elementem a vsemi jeho dcerinnymi polozkami
     * @param element
     */
    //-------------------------------------------------------------------------
    checkRowElementCollision(element) {
        // Kolize se samotnym elementem
        if (element.checkPlCollision(this._colSphere))
            this._rowElColFncs[element.type].call(this, element);
        // Kolize s dcerinnymi polozkami elementu
        element.children.forEach((e) => {
            this.checkRowElementCollision(e);
        });
    }
    //-------------------------------------------------------------------------
    /**
     * Zpracovani kolize s blokem prekazky
     */
    //-------------------------------------------------------------------------
    handleObstacleBlockCollision() {
        if (this._obsColTime + Player.IMMORTALITY_LEN < _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time && _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.state == 0 /* game */) {
            // Ulozit cas kolize
            this._obsColTime = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time;
            // Zablesk a zaklepani s kamerou
            _HUD_HUD__WEBPACK_IMPORTED_MODULE_3__.HUD.instance.flashFx.startFx(this._flashFxSettings[0]);
            _View__WEBPACK_IMPORTED_MODULE_7__.View.instance.startShake();
            // Zastavit a znovu rozjed kulicku
            this._curSpeed = 0;
            this.changeSpeed(1, 2, pc.SineIn);
            // Zrusit bonusovou rychlost
            if (this._bnsSpeedTime != 0) {
                this._bnsSpeedTime = 0;
                this._tail.setColor(Player.TAIL_COLORS[0], 1.5 * 1000, pc.SineIn);
                this._ballShineWrap.model.enabled = false;
                this._camDisTween.to({ cameraPlDistance: _View__WEBPACK_IMPORTED_MODULE_7__.View.CAM_DEF_PL_DIS }, 1.5, pc.SineIn);
                this._camDisTween.start();
            }
            // Resetovat nasobeni skore
            _HUD_HUD__WEBPACK_IMPORTED_MODULE_3__.HUD.instance.statusBar.multiplierBar.reset();
            // Snizit pocet zivotu
            if (--this._lifeCnt.value == 0)
                this._state = 2 /* death */;
            // Vyvolat udalost
            _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.events.fire(Player.EVENT_CRASH, this._lifeCnt.value);
        }
        // Prehrat zvuk
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "crash" /* crash */);
    }
    //-------------------------------------------------------------------------
    /**
     * Zpracovani kolize s bonusem
     * @param bonus
     */
    //-------------------------------------------------------------------------
    handleBonusCollision(bonus) {
        if (_Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.state == 0 /* game */) {
            let hud = _HUD_HUD__WEBPACK_IMPORTED_MODULE_3__.HUD.instance;
            let score = 15 + 15 * bonus.bonusType;
            // Navysit skore
            this._results.addBonusScore(score);
            // Zapsat zaznam do ucetnictvi
            if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */)
                _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.instance.accounting.addScoreEntry(0 /* bonusA */ + bonus.bonusType);
            // Upravit multiplier bar
            hud.statusBar.multiplierBar.inc();
            // Zobrazit vyskakovaci zpravu se skore
            let bnsPos = bonus.node.getPosition();
            let scoreMulti = this._results.score.multiplier;
            hud.showTextPopup(bnsPos.x, bnsPos.y + 0.5, bnsPos.z, "+" + (scoreMulti > 1 ? scoreMulti + "x" + score : score.toString()));
            // Zablesk
            hud.flashFx.startFx(this._flashFxSettings[1]);
        }
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "bonus" /* bonus */);
    }
    //-------------------------------------------------------------------------
    /**
     * Zpracovani kolize s trampolinou
     */
    //-------------------------------------------------------------------------
    handleTrampolineCollision() {
        this._jumpStartZ = this._pos.z;
        this._jumpProgress = 0;
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, "jump" /* jump */);
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions)
            _Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions.incMissionProgress(2 /* jumps */);
    }
    //-------------------------------------------------------------------------
    /**
     * Zpracovani kolize s menicem rychlosti
     * @param speedChange
     */
    //-------------------------------------------------------------------------
    handleSpeedChangeCollision(speedChange) {
        // Mise
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions && speedChange.speedup)
            _Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions.incMissionProgress(3 /* speedUps */);
        let cfg = Player.BONUS_SPEED_CFG[speedChange.speedup ? 1 : 0];
        // Zmenit rychlost
        this.changeSpeed(cfg.speedRatio, 1, pc.CubicOut, cfg.audioPitch);
        this._bnsSpeedTime = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time + cfg.lifespan * 1000;
        // Barva ocasu
        this._tail.setColor(Player.TAIL_COLORS[cfg.colorId], 1 * 1000, pc.CubicOut);
        // Pruhledny obal kulicky
        let mat = this._ballShineWrap.model.meshInstances[0].material;
        mat.emissive.copy(Player.TAIL_COLORS[cfg.colorId]);
        mat.update();
        this._ballShineWrap.model.enabled = true;
        // Scale
        if (cfg.ballScale != 1)
            this._spdChngBallScaleTween.to({ z: cfg.ballScale }, 0.5, pc.CubicOut).repeat(2).start();
        // Zvuk
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._ball, cfg.sfxSlot);
        // Priblizeni/oddaleni kamery
        this._camDisTween.to({ cameraPlDistance: cfg.camDisRatio * _View__WEBPACK_IMPORTED_MODULE_7__.View.CAM_DEF_PL_DIS }, 1, pc.BackOut, 0, 0, false);
        this._camDisTween.start();
    }
    //-------------------------------------------------------------------------
    /**
     * Zpracovat navyseni zakladni rychlosti
     */
    //-------------------------------------------------------------------------
    handleSpeedInc() {
        if (this._curSpeed == this._spdChngTarSpeed) {
            this.changeSpeed(1, 1, pc.Linear);
        }
        else {
            this._spdChngTarSpeed = this._speedRatio * this._speedController.speed;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    processJump() {
        let progress = (this._jumpStartZ - this._pos.z) / Player.JUMP_DISTANCE;
        this._jumpProgress = progress;
        if (progress < 0.3) {
            // Stoupani
            progress /= 0.3;
            this._pos.y = pc.CubicOut(progress) * Player.JUMP_HEIGHT;
            progress = this._pos.y / Player.JUMP_HEIGHT;
            // Scale kulicky
            if (progress < 0.7) {
                progress = pc.SineOut(progress / 0.7);
                this._scale.y = 1 + (Player.SCALE_JUMP_STRETCH - 1) * progress;
            }
            else {
                progress = pc.SineIn((progress - 0.7) / 0.3);
                this._scale.y = Player.SCALE_JUMP_STRETCH - (Player.SCALE_JUMP_STRETCH - Player.SCALE_JUMP_SHRINK) * progress;
            }
        }
        else if (progress < 1) {
            // Klesani
            progress = (progress - 0.3) / 0.7;
            this._pos.y = Player.JUMP_HEIGHT - pc.BounceOut(progress) * Player.JUMP_HEIGHT;
            // Scale kulicky
            if (progress < 0.3) {
                progress = 1 - (this._pos.y / Player.JUMP_HEIGHT);
                if (progress < 0.5) {
                    progress = pc.SineIn(progress / 0.5);
                    this._scale.y = Player.SCALE_JUMP_SHRINK + (Player.SCALE_JUMP_STRETCH - Player.SCALE_JUMP_SHRINK) * progress;
                }
                else {
                    this._scale.y = Player.SCALE_JUMP_STRETCH;
                }
            }
            else {
                // Po dopadpnuti
                progress = (progress - 0.35) / 0.3;
                if (progress < 0.5)
                    this._scale.y = Player.SCALE_JUMP_STRETCH - (Player.SCALE_JUMP_STRETCH - Player.SCALE_JUMP_SHRINK) * (progress / 0.5);
                else
                    this._scale.y = Player.SCALE_JUMP_SHRINK + (1 - Player.SCALE_JUMP_SHRINK) * Math.min(1, (progress - 0.5) / 0.5);
            }
        }
        else {
            this._pos.y = 0;
            this._jumpStartZ = 0;
            this._scale.y = 1;
        }
        this._scaleUpdate = true;
        // Stin
        progress = (1 - (this._pos.y / (Player.JUMP_HEIGHT * 0.75))) * Player.SHADOW_SCALE;
        this._shadow.setLocalScale(progress, 1, progress);
        // Aktualizovat pozici
        this._pos.y += _Road_RoadTile__WEBPACK_IMPORTED_MODULE_6__.RoadTile.Y + Player.RADIUS;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    changeSpeed(tarSpeedRatio, changeLen, changeEase, tarAudioPitch) {
        this._speedRatio = tarSpeedRatio;
        this._spdChngIniSpeed = this._curSpeed;
        this._spdChngTarSpeed = this._speedController.speed * tarSpeedRatio;
        this._spdChngTime = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time;
        this._spdChngLen = changeLen * 1000;
        this._spdChngEase = changeEase;
        if (tarAudioPitch != undefined) {
            this._spdChngIniAudioPitch = this._ball.sound.pitch;
            this._spdChngTarAudioPitch = tarAudioPitch;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    processSpeedChange() {
        let progress = (_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time - this._spdChngTime) / this._spdChngLen;
        if (progress > 1)
            progress = 1;
        progress = this._spdChngEase(progress);
        this._curSpeed = this._spdChngIniSpeed + (this._spdChngTarSpeed - this._spdChngIniSpeed) * progress;
        if (this._spdChngIniAudioPitch != this._spdChngTarAudioPitch)
            this._ball.sound.pitch = this._spdChngIniAudioPitch + (this._spdChngTarAudioPitch - this._spdChngIniAudioPitch) * progress;
    }
}
Player.RADIUS = 0.3;
Player.SHADOW_OFFSET_Y = 0.015;
Player.SHADOW_SCALE = Player.RADIUS * 2.5;
/**
 * Udalost vyvolana po zahajeni pohybu kulicky
 * Emitter: Gameplay.events
 */
Player.EVENT_START = "pl:start";
/**
 * Udalost vyvolana po zastaveni kulicky (po vyprseni casu)
 * Emitter: Gameplay.events
 */
Player.EVENT_STOP = "pl:stop";
/**
 * Udalost vyvolana po kolizi hrace s prekazkou
 * Emitter: Gameplay.events
 * Parametry:
 * - lifeCnt: number - Aktualni pocet zivotu
 */
Player.EVENT_CRASH = "pl:crash";
/**
 * Barvy pro ocas [0 = zakladni, 1 = slowdown, 2 = speedup]
 */
Player.TAIL_COLORS = [
    new pc.Color(0.75, 0.75, 0.75, 0.2),
    new pc.Color(0.75, 0, 0, 0.2),
    new pc.Color(0, 0.75, 0, 0.2)
];
Player.SCALE_JUMP_STRETCH = 2;
Player.SCALE_JUMP_SHRINK = 0.8;
//#region Skok
Player.JUMP_DISTANCE = 8;
Player.JUMP_HEIGHT = 2;
/**
 * Doba trvani bonusove rychlosti v ms
 */
Player.BONUS_SPEED_CFG = [
    {
        speedRatio: 0.5,
        lifespan: 2.5,
        colorId: 1,
        camDisRatio: 0.8,
        ballScale: 1,
        sfxSlot: "slowdown" /* slowdown */,
        audioPitch: 1,
    },
    {
        speedRatio: 1.25,
        lifespan: 3,
        colorId: 2,
        camDisRatio: 1.2,
        ballScale: 1,
        sfxSlot: "speedup" /* speedup */,
        audioPitch: 1,
    }
];
//#endregion
//#region Kolize
Player.IMMORTALITY_LEN = 1000;


/***/ }),

/***/ "./src/Gameplay/Game World/Player/Results.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/Game World/Player/Results.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export PlResults [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PlResults": () => /* binding */ PlResults
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/ProtectedValue */ "./src/Utils/ProtectedValue.ts");
/* harmony import */ var _Utils_Score__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Utils/Score */ "./src/Utils/Score.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");




class PlResults {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(player) {
        this._plPos = player.pos;
        this._score = new _Utils_Score__WEBPACK_IMPORTED_MODULE_2__.Score(5, _Gameplay__WEBPACK_IMPORTED_MODULE_3__.Gameplay.instance.events);
        this._disScore = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
        this._bnsScore = new _Utils_ProtectedValue__WEBPACK_IMPORTED_MODULE_1__.ProtectedValue();
    }
    /**
     * (RO) Skore
     */
    get score() { return this._score; }
    /**
     * (RO) Skore za ujetou vzdalenost
     */
    get distanceScore() { return this._disScore.value; }
    /**
     * (RO) Skore za sebrane bonusy
     */
    get bonusScore() { return this._bnsScore.value; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._score.reset();
        this._disScore.value = 0;
        this._bnsScore.value = 0;
        this._disScorePos = this._plPos.z;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let i = this._disScorePos - this._plPos.z;
        if (i >= PlResults.DISTANCE_SCORE_INTERVAL) {
            i = Math.floor(i / PlResults.DISTANCE_SCORE_INTERVAL);
            this._disScorePos -= i * PlResults.DISTANCE_SCORE_INTERVAL;
            if (_Gameplay__WEBPACK_IMPORTED_MODULE_3__.Gameplay.instance.state == 0 /* game */) {
                this._disScore.value += this._score.incScore(i * PlResults.DISTANCE_SCORE_VALUE);
                if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */) {
                    while (i-- != 0)
                        _Gameplay__WEBPACK_IMPORTED_MODULE_3__.Gameplay.instance.accounting.addScoreEntry(2 /* distance */);
                }
            }
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Pridat skore za sebrany bonus
     * @param val
     */
    //-------------------------------------------------------------------------
    addBonusScore(val) {
        this._bnsScore.value += this._score.incScore(val);
    }
}
/**
 * Interval navysovani skore za ujetou vzdalenost
 */
PlResults.DISTANCE_SCORE_INTERVAL = 5;
/**
 * O kolik se skore navysi
 */
PlResults.DISTANCE_SCORE_VALUE = 5;
/**
 * Pocatecni pocet zivotu
 */
PlResults.LIFE_CNT = 3;
/**
 * Bonus po dokonceni hry za zbyle zivoty
 */
PlResults.LIFE_SCORE_BONUS = 1000;


/***/ }),

/***/ "./src/Gameplay/Game World/Player/Speed.ts":
/*!*************************************************!*\
  !*** ./src/Gameplay/Game World/Player/Speed.ts ***!
  \*************************************************/
/*! namespace exports */
/*! export SpeedController [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpeedController": () => /* binding */ SpeedController
/* harmony export */ });
/* harmony import */ var _GameplayTimer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../GameplayTimer */ "./src/Gameplay/GameplayTimer.ts");

class SpeedController {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(onSpeedInc, onSpeedIncCtx) {
        this._onSpeedInc = onSpeedInc;
        this._onSpeedIncCtx = onSpeedIncCtx;
    }
    /**
     * (RO) Aktualni rychlost v units per second
     */
    get speed() { return this._speed; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (!this._timer)
            this._timer = _GameplayTimer__WEBPACK_IMPORTED_MODULE_0__.GameplayTimer.instance;
        this._speed = SpeedController.DEF_SPEED;
        this._nextIncTime = Math.round(this._timer.timeLimit * SpeedController.FIRST_INC_DELAY);
        this._incTimeStep = Math.round((this._timer.timeLimit - this._nextIncTime) / SpeedController.INC_STEP_CNT);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._timer.elapsedTime >= this._nextIncTime && this._speed < SpeedController.MAX_SPEED) {
            // Cas dalsiho zrychleni
            this._nextIncTime += this._incTimeStep;
            // Navysit rychlost
            this._speed += SpeedController.INC_STEP;
            this._onSpeedInc.call(this._onSpeedIncCtx);
        }
    }
}
SpeedController.DEF_SPEED = 14;
SpeedController.MAX_SPEED = 17;
/**
 * Kdy dojde k prvnimu navyseni rychlost (pomer 0 az 1 v celkovem case hry)
 */
SpeedController.FIRST_INC_DELAY = 0.25;
/**
 * Pocet kroku navyseni rychlost behem hry
 */
SpeedController.INC_STEP_CNT = (SpeedController.MAX_SPEED - SpeedController.DEF_SPEED) * 2;
/**
 * Velikost kroku navyseni rychlosti
 */
SpeedController.INC_STEP = (SpeedController.MAX_SPEED - SpeedController.DEF_SPEED) / SpeedController.INC_STEP_CNT;


/***/ }),

/***/ "./src/Gameplay/Game World/Player/Tail.ts":
/*!************************************************!*\
  !*** ./src/Gameplay/Game World/Player/Tail.ts ***!
  \************************************************/
/*! namespace exports */
/*! export Tail [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tail": () => /* binding */ Tail
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../View */ "./src/Gameplay/Game World/View.ts");
/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Player */ "./src/Gameplay/Game World/Player/Player.ts");




class Tail {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(player) {
        // Pozice hrace v hernim svete
        this._plPos = player.pos;
        // Zmena barvy
        this._colorChangeCol1 = new pc.Color();
        this._colorChangeCol2 = new pc.Color();
        // Alokovat buffer pro vrcholy
        this._vertexBuf = new Float32Array(Tail.MAX_VERTEX_CNT * Tail.VERTEX_ELEMENT_CNT);
        // Material
        this._material = new pc.StandardMaterial();
        this._material.cull = pc.CULLFACE_NONE;
        this._material.blendType = pc.BLEND_NORMAL;
        this._material.diffuse.set(0, 0, 0);
        this._material.emissive.set(0.75, 0.75, 0.75);
        this._material.opacity = 0.20;
        this._material.useLighting = false;
        this._material.update();
        // Mesh
        this._vertexData = new Float32Array(Tail.MAX_VERTEX_CNT * Tail.VERTEX_ELEMENT_CNT);
        this._vertexIndices = new Uint32Array(Tail.MAX_VERTEX_CNT);
        for (let i = 0; i < Tail.MAX_VERTEX_CNT; i++)
            this._vertexIndices[i] = i;
        this._mesh = new pc.Mesh(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.graphicsDevice);
        this._mesh.clear(true, false);
        this._mesh.setPositions(this._vertexData, Tail.VERTEX_ELEMENT_CNT, Tail.MAX_VERTEX_CNT);
        this._mesh.setIndices(this._vertexIndices);
        this._mesh.update(pc.PRIMITIVE_TRISTRIP);
        // Create the mesh instance
        let node = new pc.GraphNode();
        let meshInstance = new pc.MeshInstance(this._mesh, this._material, node);
        // Create a model and add the mesh instance to it
        let model = new pc.Model();
        model.graph = node;
        model.meshInstances = [meshInstance];
        // Add a model compoonent
        this._entity = new pc.Entity();
        this._entity.addComponent('model', {
            type: 'asset',
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
        });
        this._entity.model.model = model;
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._entity);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._vertexBufStart = 0;
        this._vertexBufSize = 0;
        this._plPrevZ = this._plPos.z;
        this._entity.model.enabled = false;
        this._colorChangeTime = -1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (Math.abs(this._plPrevZ - this._plPos.z) < 0.2)
            return;
        if (this._colorChangeTime >= 0) {
            let progress = (_Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time - this._colorChangeTime) / this._colorChangeLen;
            if (progress >= 1) {
                progress = 1;
                this._colorChangeTime = -1;
            }
            this._material.emissive.lerp(this._colorChangeCol1, this._colorChangeCol2, this._colorChangeEase(progress));
            this._material.update();
        }
        // Odstranit vrcholy, ktere jsou za view
        this.clearOldVertices();
        // Novy usek
        this.spawnNewVertices();
        // Aktualizovat mesh
        if (this._vertexBufSize > 2) {
            this.prepareVertexData();
            this._mesh.setPositions(this._vertexData, Tail.VERTEX_ELEMENT_CNT, this._vertexBufSize);
            this._mesh.setIndices(this._vertexIndices, this._vertexBufSize);
            this._mesh.update(pc.PRIMITIVE_TRISTRIP);
            this._entity.model.enabled = true;
        }
        else {
            this._entity.model.enabled = false;
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Zmena barvy ocasu
     * @param color Nova barva
     * @param changeLen Jak dlouho ma probihat zmena v ms. Pokud <= 0, tak je zmena okamzita.
     */
    //-------------------------------------------------------------------------
    setColor(color, changeLen = 0, changeEase) {
        if (changeLen <= 0) {
            this._material.emissive.copy(color);
            this._material.update();
            this._colorChangeTime = -1;
        }
        else {
            this._colorChangeTime = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time;
            this._colorChangeLen = changeLen;
            this._colorChangeCol1.copy(this._material.emissive);
            this._colorChangeCol2.copy(color);
            this._colorChangeEase = changeEase ? changeEase : pc.Linear;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    prepareVertexData() {
        let buf = this._vertexBuf;
        let bufPos = this._vertexBufStart;
        let bufMaxPos = buf.length;
        let dataPos = 0;
        let data = this._vertexData;
        let i = this._vertexBufSize * Tail.VERTEX_ELEMENT_CNT;
        while (i-- != 0) {
            data[dataPos++] = buf[bufPos];
            if (++bufPos == bufMaxPos)
                bufPos = 0;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    spawnNewVertices() {
        let pos = this._plPos;
        // Zajistit neprekroceni max poctu vrcholu
        if (this._vertexBufSize == Tail.MAX_VERTEX_CNT) {
            // Odstranit 2 nejstarsi vrcholy
            this._vertexBufStart += Tail.VERTEX_ELEMENT_CNT * 2;
            this._vertexBufSize -= 2;
            if (this._vertexBufStart >= this._vertexBuf.length)
                this._vertexBufStart -= this._vertexBuf.length;
        }
        // Ziskat pozici v bufferu pro novy vrchol
        let bufPos = this._vertexBufStart + this._vertexBufSize * Tail.VERTEX_ELEMENT_CNT;
        if (bufPos >= this._vertexBuf.length)
            bufPos -= this._vertexBuf.length;
        // Zapsat vrcholy
        let buf = this._vertexBuf;
        buf[bufPos] = pos.x - Tail.WIDTH / 2;
        buf[bufPos + 1] = pos.y - _Player__WEBPACK_IMPORTED_MODULE_3__.Player.RADIUS + 0.02;
        buf[bufPos + 2] = pos.z - _Player__WEBPACK_IMPORTED_MODULE_3__.Player.RADIUS;
        buf[bufPos + 3] = pos.x + Tail.WIDTH / 2;
        buf[bufPos + 4] = pos.y - _Player__WEBPACK_IMPORTED_MODULE_3__.Player.RADIUS + 0.02;
        buf[bufPos + 5] = pos.z - _Player__WEBPACK_IMPORTED_MODULE_3__.Player.RADIUS;
        this._vertexBufSize += 2;
    }
    //-------------------------------------------------------------------------
    /**
     * Odstrani vrcholy, ktere jsou za view
     */
    //-------------------------------------------------------------------------
    clearOldVertices() {
        let maxZ = _View__WEBPACK_IMPORTED_MODULE_2__.View.instance.viewBotZ;
        while (this._vertexBufSize != 0 && this._vertexBuf[this._vertexBufStart + 2] > maxZ) {
            // Odstranit 2 vrcholy (jelikoz vzdy dva maji stejnou pozici na Z)
            this._vertexBufStart += 6;
            this._vertexBufSize -= 2;
            if (this._vertexBufStart >= this._vertexBuf.length)
                this._vertexBufStart -= this._vertexBuf.length;
        }
    }
}
/**
 * Maximalni pocet ulozenych vrcholu
 */
Tail.MAX_VERTEX_CNT = 200;
/**
 * Velikost vrcholu x, y, z = 3
 */
Tail.VERTEX_ELEMENT_CNT = 3;
Tail.WIDTH = 0.4;


/***/ }),

/***/ "./src/Gameplay/Game World/Road/Decorations/RoadDecoBase.ts":
/*!******************************************************************!*\
  !*** ./src/Gameplay/Game World/Road/Decorations/RoadDecoBase.ts ***!
  \******************************************************************/
/*! namespace exports */
/*! export RoadDecoBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoadDecoBase": () => /* binding */ RoadDecoBase
/* harmony export */ });
class RoadDecoBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(type) {
        this._type = type;
    }
    /**
     * (RO) Objekt typu dekorace
     */
    get type() { return this._type; }
    /**
     * (RO) Index radky v hernim svete, ke ktere sloupec patri
     */
    get rowId() { return this._rowId; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._entity.setLocalScale(0, 0, 0);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() { }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Road/Decorations/RoadDecoColumn.ts":
/*!********************************************************************!*\
  !*** ./src/Gameplay/Game World/Road/Decorations/RoadDecoColumn.ts ***!
  \********************************************************************/
/*! namespace exports */
/*! export RoadDecoColumn [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoadDecoColumn": () => /* binding */ RoadDecoColumn
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/Models/CubeMesh */ "./src/Utils/Models/CubeMesh.ts");
/* harmony import */ var _Utils_Models_ModelUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../Utils/Models/ModelUtils */ "./src/Utils/Models/ModelUtils.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _RoadTile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");
/* harmony import */ var _RoadDecoBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RoadDecoBase */ "./src/Gameplay/Game World/Road/Decorations/RoadDecoBase.ts");






class RoadDecoColumn extends _RoadDecoBase__WEBPACK_IMPORTED_MODULE_5__.RoadDecoBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(type) {
        super(type);
        if (!RoadDecoColumn._model) {
            RoadDecoColumn._model = _Utils_Models_ModelUtils__WEBPACK_IMPORTED_MODULE_2__.ModelUtils.createModel([
                _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__.CubeMesh.createMesh(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.graphicsDevice, new pc.Vec3(1, 1, 1), new pc.Vec3(0.5, 0, -0.5), new pc.Color(1, 1, 1), (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__.CubeMesh.FACE_FRONT) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__.CubeMesh.FACE_LEFT) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__.CubeMesh.FACE_RIGHT) | (1 << _Utils_Models_CubeMesh__WEBPACK_IMPORTED_MODULE_1__.CubeMesh.FACE_TOP))
            ]);
        }
        let settings = type.visualSettings;
        let material = RoadDecoColumn._materials[settings.materialId];
        if (!material) {
            // Material
            let matSettings = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.columnsMaterials[settings.materialId];
            let mat = new pc.StandardMaterial();
            mat.diffuse.copy(matSettings.color);
            if (matSettings.albedoChunk != undefined) {
                const diffuseChunk = "uniform vec3 material_diffuse;\n" +
                    "void getAlbedo() {\n" + matSettings.albedoChunk + "}";
                mat.chunks.diffuseConstPS = diffuseChunk;
            }
            if (matSettings.opacityChunk != undefined) {
                const opacityChunk = "void getOpacity() {\n" + matSettings.opacityChunk + "}";
                mat.blendType = pc.BLEND_NORMAL;
                mat.chunks.opacityConstPS = opacityChunk;
                mat.opacity = 0.99;
            }
            mat.update();
            // Batchgroup
            let batchGroupId = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher.addGroup("decoCols" + settings.materialId, true, 100).id;
            /*Game.app.on("batch:created" + batchGroupId, (batch: pc.Batch): void => {
                console.log("batch: " + batch.batchGroupId);
            });*/
            // Ulozit do seznamu materialu
            material = { material: mat, batchgroupId: batchGroupId };
            RoadDecoColumn._materials[settings.materialId] = material;
        }
        // Entita
        this._entity = new pc.Entity("decoColumn");
        this._entity.addComponent("model" /* model */, {
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
        });
        this._entity.model.model = RoadDecoColumn._model.clone();
        this._entity.model.model.meshInstances[0].material = material.material;
        this._entity.model.batchGroupId = material.batchgroupId;
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._entity);
    }
    static resetBG() {
        if (RoadDecoColumn._materials)
            RoadDecoColumn._materials.forEach((mat) => { _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher.markGroupDirty(mat.batchgroupId); });
    }
    //-------------------------------------------------------------------------
    /**
     *
     * @param roadTile
     * @param side
     */
    //-------------------------------------------------------------------------
    init(roadTile, side) {
        // Index radky
        this._rowId = roadTile.rowId;
        // Pozice na ose X
        let settings = this._type.visualSettings;
        let sizeX = _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(settings.minSize.x, settings.maxSize.x);
        let posX = roadTile.x;
        if (side == 0) {
            posX -= (roadTile.lWall.width + sizeX / 2);
        }
        else {
            posX += (roadTile.width + roadTile.rWall.width + sizeX / 2);
        }
        if (side == 0 /* left */) {
            posX += _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(-settings.maxOuterOffsetX, settings.maxInnerOffsetX);
        }
        else {
            posX += _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(-settings.maxInnerOffsetX, settings.maxOuterOffsetX);
        }
        // Nastavit entitu
        this._entity.setLocalScale(sizeX, _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(settings.minSize.y, settings.maxSize.y), (_Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(settings.minSize.z, settings.maxSize.z) * _RoadTile__WEBPACK_IMPORTED_MODULE_4__.RoadTile.DEPTH) - 0.01);
        this._entity.setPosition(posX, _GameWorld__WEBPACK_IMPORTED_MODULE_3__.GameWorld.GROUND_Y, _GameWorld__WEBPACK_IMPORTED_MODULE_3__.GameWorld.START_Z - this._rowId * _RoadTile__WEBPACK_IMPORTED_MODULE_4__.RoadTile.DEPTH - _RoadTile__WEBPACK_IMPORTED_MODULE_4__.RoadTile.DEPTH / 2);
    }
}
RoadDecoColumn._materials = [];


/***/ }),

/***/ "./src/Gameplay/Game World/Road/Decorations/RoadDecoMng.ts":
/*!*****************************************************************!*\
  !*** ./src/Gameplay/Game World/Road/Decorations/RoadDecoMng.ts ***!
  \*****************************************************************/
/*! namespace exports */
/*! export RoadDecoMng [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eRoadDecoSide [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eRoadDecoSide": () => /* binding */ eRoadDecoSide,
/* harmony export */   "RoadDecoMng": () => /* binding */ RoadDecoMng
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");
/* harmony import */ var _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../Utils/Collections/WrapperArray */ "./src/Utils/Collections/WrapperArray.ts");
/* harmony import */ var _RoadManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");
/* harmony import */ var _RoadDecoColumn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RoadDecoColumn */ "./src/Gameplay/Game World/Road/Decorations/RoadDecoColumn.ts");
/* harmony import */ var _RoadDecoType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RoadDecoType */ "./src/Gameplay/Game World/Road/Decorations/RoadDecoType.ts");






var eRoadDecoSide;
(function (eRoadDecoSide) {
    eRoadDecoSide[eRoadDecoSide["left"] = 0] = "left";
    eRoadDecoSide[eRoadDecoSide["right"] = 1] = "right";
    eRoadDecoSide[eRoadDecoSide["NUMBER"] = 2] = "NUMBER";
})(eRoadDecoSide || (eRoadDecoSide = {}));
class RoadDecoMng {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._roadMng = _RoadManager__WEBPACK_IMPORTED_MODULE_3__.RoadManager.instance;
        // Typy podporovanych dekoraci
        let vs = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings;
        this._decoTypes = [];
        if (vs.columns) {
            vs.columns.forEach((columns) => {
                this._decoTypes.push(new _RoadDecoType__WEBPACK_IMPORTED_MODULE_5__.RoadDecoType(columns, _RoadDecoColumn__WEBPACK_IMPORTED_MODULE_4__.RoadDecoColumn));
            });
        }
        // Seznam aktivnich dekoraci
        this._actDecos = new _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_2__.WrappedArray();
        // Seznamy dekoraci k aktivaci pro jednotlive strany
        this._decosToAct = [];
        for (let side = 0; side < 2 /* NUMBER */; side++)
            this._decosToAct[side] = new _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        // Uvolnit aktivni dekorace
        this._actDecos.forEach((deco) => {
            deco.reset();
            deco.type.freeDecos.returnItem(deco);
        });
        this._actDecos.clear();
        // Vymazat seznam dekoraci k aktivaci a pripravit aktivaci pro prvni dekorace
        for (let side = 0; side < 2 /* NUMBER */; side++) {
            this._decosToAct[side].clear();
            this._decoTypes.forEach((type) => {
                type.lastActDowId[side] = 0;
                this.addDecoToAct(type, side);
            });
        }
        _RoadDecoColumn__WEBPACK_IMPORTED_MODULE_4__.RoadDecoColumn.resetBG();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Aktivace dekoraci
        let rowId = this._roadMng.lastActRowId;
        for (let side = 0; side < 2 /* NUMBER */; side++) {
            let decoToActList = this._decosToAct[side];
            let decoToAct;
            while ((decoToAct = decoToActList.first) && decoToAct.rowId <= rowId) {
                // Aktivovat dekoraci
                let deco = decoToAct.type.freeDecos.getItem();
                deco.init(this._roadMng.getRowTile(decoToAct.rowId), side);
                this._actDecos.add(deco);
                decoToActList.removeById(0);
                // Pokud neni dalsi dekorace tohoto typu pripravena k aktivaci, tak ji pripravi                
                if (decoToAct.type.lastActDowId[side] == decoToAct.rowId)
                    this.addDecoToAct(decoToAct.type, side);
            }
        }
        if (!this._actDecos.empty) {
            // Deaktivace dekoraci mimo view
            let deco = this._actDecos.first;
            rowId = this._roadMng.firstActRowId;
            while (deco && deco.rowId <= rowId) {
                deco.type.freeDecos.returnItem(deco);
                deco.reset();
                this._actDecos.remove(false);
                deco = this._actDecos.first;
            }
            // Zpracovat aktivni dekorace
            this._actDecos.forEach((deco) => {
                deco.update();
            });
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Nastavit a pridat aktivaci dekorace daneho typu
     * @param decoType
     * @param side
     */
    //-------------------------------------------------------------------------
    addDecoToAct(decoType, side) {
        let decoSettings = decoType.visualSettings;
        // Radek pro aktivaci
        let rowId = decoType.lastActDowId[side] + _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIntIn(decoSettings.minSpacing[decoSettings.decoType], decoSettings.maxSpacing);
        // Zajistit dostatecny odstup od ostatnich dekoraci
        let decosToAct = this._decosToAct[side];
        let prevDecoNode = decosToAct.lastNode;
        let nextDecoNode = null;
        let minRowId = 0;
        while (prevDecoNode && rowId < prevDecoNode.data.rowId) {
            nextDecoNode = prevDecoNode;
            prevDecoNode = prevDecoNode.prev;
        }
        while (true) {
            if (prevDecoNode) {
                minRowId = prevDecoNode.data.rowId + decoSettings.minSpacing[prevDecoNode.data.type.visualSettings.decoType];
                if (rowId < minRowId)
                    rowId = minRowId;
            }
            if (nextDecoNode) {
                let maxRowId = nextDecoNode.data.rowId - decoSettings.minSpacing[nextDecoNode.data.type.visualSettings.decoType];
                if (rowId > maxRowId) {
                    rowId = maxRowId;
                    if (rowId < minRowId) {
                        // Dekoraci nelze umistit mezi predchozi a nasledujici -> pokusit se dekoraci umistit za nasledujici
                        rowId = nextDecoNode.data.rowId + decoSettings.minSpacing[nextDecoNode.data.type.visualSettings.decoType];
                        prevDecoNode = nextDecoNode;
                        nextDecoNode = nextDecoNode.next;
                        continue;
                    }
                }
            }
            break;
        }
        // Zapsat aktivaci dekorace
        let decoActSettings = { type: decoType, rowId: rowId };
        if (prevDecoNode) {
            decosToAct.addAfterNode(decoActSettings, prevDecoNode);
        }
        else {
            decosToAct.add(decoActSettings, 0);
        }
        decoType.lastActDowId[side] = rowId;
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Road/Decorations/RoadDecoType.ts":
/*!******************************************************************!*\
  !*** ./src/Gameplay/Game World/Road/Decorations/RoadDecoType.ts ***!
  \******************************************************************/
/*! namespace exports */
/*! export RoadDecoType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eRoadDecoType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eRoadDecoType": () => /* binding */ eRoadDecoType,
/* harmony export */   "RoadDecoType": () => /* binding */ RoadDecoType
/* harmony export */ });
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");

var eRoadDecoType;
(function (eRoadDecoType) {
    eRoadDecoType[eRoadDecoType["column1"] = 0] = "column1";
    eRoadDecoType[eRoadDecoType["column2"] = 1] = "column2";
    eRoadDecoType[eRoadDecoType["decorationObj"] = 2] = "decorationObj";
    eRoadDecoType[eRoadDecoType["NUMBER"] = 3] = "NUMBER";
})(eRoadDecoType || (eRoadDecoType = {}));
class RoadDecoType {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(visualSettings, decoObj) {
        this.visualSettings = visualSettings;
        this.lastActDowId = [];
        for (let side = 0; side < 2 /* NUMBER */; side++)
            this.lastActDowId[side] = 0;
        this._decoObj = decoObj;
        this.freeDecos = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 4, true, () => {
            return new this._decoObj(this);
        });
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Road/RoadFloor.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/Game World/Road/RoadFloor.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export RoadFloor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoadFloor": () => /* binding */ RoadFloor
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../View */ "./src/Gameplay/Game World/View.ts");



class RoadFloor {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._material = new pc.StandardMaterial();
        this._material.diffuseMapTiling.set(RoadFloor.TEX_TILING_X, RoadFloor.TEX_TILING_Y);
        this._material.update();
        this._entity = new pc.Entity("floor");
        this._entity.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: this._material,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
        });
        this._entity.setLocalScale(RoadFloor.WIDTH, 1, RoadFloor.DEPTH);
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._entity);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init() {
        this._material.diffuseMap = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("ground" /* ground */ + _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.id, "texture" /* texture */).resource;
        this._material.update();
        this._camPos = _View__WEBPACK_IMPORTED_MODULE_2__.View.instance.cameraPos;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._material.diffuseMapOffset.y = (RoadFloor.TEX_TILING_Y / RoadFloor.DEPTH) * -_Player_Player__WEBPACK_IMPORTED_MODULE_1__.Player.instance.pos.z;
        this._material.update();
        this._entity.setPosition(0, 0, this._camPos.z - 1 - RoadFloor.DEPTH / 2);
    }
}
RoadFloor.DEPTH = 40;
RoadFloor.WIDTH = 10;
RoadFloor.TEX_TILING_X = 3;
RoadFloor.TEX_TILING_Y = (RoadFloor.DEPTH / RoadFloor.WIDTH) * RoadFloor.TEX_TILING_X;


/***/ }),

/***/ "./src/Gameplay/Game World/Road/RoadManager.ts":
/*!*****************************************************!*\
  !*** ./src/Gameplay/Game World/Road/RoadManager.ts ***!
  \*****************************************************/
/*! namespace exports */
/*! export RoadManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoadManager": () => /* binding */ RoadManager
/* harmony export */ });
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/Collections/WrapperArray */ "./src/Utils/Collections/WrapperArray.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Path_PathBlock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Path/PathBlock */ "./src/Gameplay/Game World/Path/PathBlock.ts");
/* harmony import */ var _Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Path/PathBlockManager */ "./src/Gameplay/Game World/Path/PathBlockManager.ts");
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../View */ "./src/Gameplay/Game World/View.ts");
/* harmony import */ var _Decorations_RoadDecoMng__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Decorations/RoadDecoMng */ "./src/Gameplay/Game World/Road/Decorations/RoadDecoMng.ts");
/* harmony import */ var _RoadFloor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RoadFloor */ "./src/Gameplay/Game World/Road/RoadFloor.ts");
/* harmony import */ var _RoadTile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");









class RoadManager {
    //#endregion    
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        RoadManager._instance = this;
        this._view = _View__WEBPACK_IMPORTED_MODULE_5__.View.instance;
        // Zed podel cesty
        this.roadWallWave = new _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadWallWave(1, 120, 3000);
        this.roadWallSettings = { baseMinHeight: _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTileWall.DEF_HEIGHT, baseMaxHeight: _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTileWall.DEF_HEIGHT, waveMinRatio: 1, waveMaxRatio: 1 };
        // Seznam dlazdic
        this._freeTiles = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(_RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile, 10, true);
        this._actTiles = new _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_1__.WrappedArray();
        // Podlaha
        this._floor = new _RoadFloor__WEBPACK_IMPORTED_MODULE_7__.RoadFloor();
        this._floor.init();
        // Dekorace
        this._roadDecos = new _Decorations_RoadDecoMng__WEBPACK_IMPORTED_MODULE_6__.RoadDecoMng();
        // Zpracovani zaznamu v bloku cesty
        this._pathBlockPointer = new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_3__.PathBlockPointer();
    }
    static get instance() { return RoadManager._instance; }
    /**
     * (RO) Index prvni aktivni radky
     */
    get firstActRowId() { return this._1stTileRowId; }
    /**
     * (RO) Index posledni (nejvzdalenejsi) aktivni radky
     */
    get lastActRowId() { return this._actTiles.last.rowId; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        // Dekorace
        this._roadDecos.reset();
        // Zdi
        this.roadWallWave.start(0);
        this.resetWallProps();
        // Zmena sirky/pozice cesty
        this._roadChangeRowId = -1;
        // Zpracovani zaznamu v bloku cesty
        this._pathBlockPointer.init(_Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_4__.PathBlockManager.instance.firstBlockNode);
        // Uvolnit aktivni dlazdice
        this._actTiles.forEach((tile) => {
            tile.reset();
            this._freeTiles.returnItem(tile);
        });
        this._actTiles.clear(true);
        this._1stTileRowId = 0;
        this.update();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Podlaha
        this._floor.update();
        // Vlna zdi
        this.roadWallWave.update();
        // Aktivovat nove dlazdice
        let viewZ = this._view.viewTopZ;
        let tileZ = _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.START_Z - (this._1stTileRowId + this._actTiles.size) * _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEPTH;
        while (tileZ > viewZ) {
            // Pridat novou dlazdici
            this.addNewTile(this._1stTileRowId + this._actTiles.size);
            tileZ -= _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEPTH;
        }
        // Odstranit dlazdice pod view
        viewZ = this._view.viewBotZ;
        tileZ = _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.START_Z - _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEPTH - this._1stTileRowId * _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEPTH;
        while (viewZ < tileZ) {
            let tile = this._actTiles.remove(false);
            this._1stTileRowId++;
            // Reset dlazdice
            tile.reset();
            this._freeTiles.returnItem(tile);
            tileZ -= _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEPTH;
        }
        // Aktualizovat aktivni dlazdice
        let i = this._actTiles.size;
        while (i-- != 0)
            this._actTiles.getItemAtIndex(i).update();
        // Dekorace
        this._roadDecos.update();
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci RoadTile pro zadany index radky
     * @param rowId
     */
    //-------------------------------------------------------------------------
    getRowTile(rowId) {
        if (rowId < this._1stTileRowId || rowId >= this._1stTileRowId + this._actTiles.size)
            return undefined;
        return this._actTiles.getItemAtIndex(rowId - this._1stTileRowId);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    resetWallProps() {
        this.roadWallSettings.baseMinHeight = _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTileWall.DEF_HEIGHT;
        this.roadWallSettings.baseMaxHeight = _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTileWall.DEF_HEIGHT;
        this.roadWallSettings.waveMinRatio = 1;
        this.roadWallSettings.waveMaxRatio = 1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addNewTile(rowId) {
        // Zpracovani bloku cesty
        let resetWallProps = false;
        while (this._pathBlockPointer.entryWorldRowId == rowId) {
            let entry = this._pathBlockPointer.entry;
            switch (entry.type) {
                case 5 /* changeRoadProps */: {
                    this._roadChangeRowId = rowId;
                    this._roadChangeSettings = entry;
                    break;
                }
                case 6 /* changeWallProps */: {
                    this.roadWallSettings.baseMinHeight = entry.baseMinHeight;
                    this.roadWallSettings.baseMaxHeight = entry.baseMaxHeight;
                    this.roadWallSettings.waveMinRatio = entry.waveMinRatio;
                    this.roadWallSettings.waveMaxRatio = entry.waveMaxRatio;
                    break;
                }
                case 7 /* resetWallProps */: {
                    resetWallProps = true;
                    break;
                }
            }
            this._pathBlockPointer.next();
        }
        let prevTile = this.getRowTile(rowId - 1);
        let tileX;
        let tileW;
        if (this._roadChangeRowId >= 0) {
            // Progress zmeny
            let changeProgress = (rowId - this._roadChangeRowId + 1) / this._roadChangeSettings.changeLen;
            let changeMode = this._roadChangeSettings.changeMode;
            let startTile = this.getRowTile(this._roadChangeRowId - 1);
            if (changeMode == 0 /* x */) {
                // Zmena pozice X
                tileX = startTile.x + this._roadChangeSettings.targetValue * changeProgress;
            }
            else {
                // Zmena sirky
                tileW = startTile.width + (this._roadChangeSettings.targetValue - startTile.width) * changeProgress;
                tileX = startTile.x;
                // Zmena pozice X
                if (changeMode == 2 /* widthFromCenter */) {
                    tileX -= (tileW - startTile.width) / 2;
                }
                else if (changeMode == 3 /* widthFromRight */) {
                    tileX -= (tileW - startTile.width);
                }
            }
            if (tileX < _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.CENTER_X - _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.MAX_WIDTH / 2) {
                tileX = _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.CENTER_X - _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.MAX_WIDTH / 2;
            }
            else if (tileX + tileW > _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.CENTER_X + _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.MAX_WIDTH / 2) {
                tileX = _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.CENTER_X + _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.MAX_WIDTH / 2 - tileW;
            }
            // Ukonceni zmeny
            if (changeProgress == 1) {
                this._roadChangeSettings = undefined;
                this._roadChangeRowId = -1;
            }
        }
        else {
            if (prevTile) {
                tileX = prevTile.x;
                tileW = prevTile.width;
            }
            else {
                tileX = _GameWorld__WEBPACK_IMPORTED_MODULE_2__.GameWorld.CENTER_X - _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEF_WIDTH / 2;
                tileW = _RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.DEF_WIDTH;
            }
        }
        // Zobrazit zem        
        let tile = this._freeTiles.getItem();
        tile.initTile(rowId, tileX, tileW, prevTile, this._pathBlockPointer.node);
        this._actTiles.add(tile);
        if (resetWallProps)
            this.resetWallProps();
    }
}
/**
 * Pocet barev, ktere pouziva zed cesty
 */
RoadManager.WALL_COLOR_CNT = 3;


/***/ }),

/***/ "./src/Gameplay/Game World/Road/RoadTile.ts":
/*!**************************************************!*\
  !*** ./src/Gameplay/Game World/Road/RoadTile.ts ***!
  \**************************************************/
/*! namespace exports */
/*! export RoadTile [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RoadTileWall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RoadWallWave [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoadTile": () => /* binding */ RoadTile,
/* harmony export */   "RoadTileWall": () => /* binding */ RoadTileWall,
/* harmony export */   "RoadWallWave": () => /* binding */ RoadWallWave
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Blocks */ "./src/Gameplay/Game World/Blocks.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Row_Elements_RowElement__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Row Elements/RowElement */ "./src/Gameplay/Game World/Row Elements/RowElement.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _RoadManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");






/**
 * Zapouzdruje levy a pravy blok zdi + zem
 */
class RoadTile extends _Row_Elements_RowElement__WEBPACK_IMPORTED_MODULE_3__.RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super(5 /* roadTile */);
        this._keepEnabled = true;
        this._node = new pc.GraphNode("roadTile");
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._node);
        this._lWall = new RoadTileWall(true);
        this._rWall = new RoadTileWall(false);
        this._y = 0;
        this._height = 10;
        this._depth = RoadTile.DEPTH;
    }
    get pathBlockNode() { return this._pathBlockNode; }
    get lWall() { return this._lWall; }
    get rWall() { return this._rWall; }
    //-------------------------------------------------------------------------
    /**
     * Uvolni zdi po okrajich a prestane zobrazovat podlahu. Udaj o pozice a sirce zustane zachovan.
     */
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            //this._floor.enabled = false;
            this._lWall.reset();
            this._rWall.reset();
            super.reset();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    initTile(rowId, x, width, prevTile, pathBlockNode) {
        this._pathBlockNode = pathBlockNode;
        // Levy okraj
        let z = _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z - rowId * RoadTile.DEPTH;
        let prevBorderX = (prevTile ? prevTile.x : x);
        let borderX = x;
        let wallW = RoadTileWall.DEF_WIDTH;
        if (borderX - prevBorderX > wallW)
            wallW = borderX - prevBorderX;
        this._lWall.init(rowId, x, z, wallW);
        // Pravy okraj
        prevBorderX += (prevTile ? prevTile.width : width);
        borderX += width;
        wallW = RoadTileWall.DEF_WIDTH;
        if (prevBorderX - borderX > wallW)
            wallW = prevBorderX - borderX;
        this._rWall.init(rowId, x + width, z, wallW);
        this._node.setLocalPosition(x, RoadTile.Y, _GameWorld__WEBPACK_IMPORTED_MODULE_4__.GameWorld.START_Z - rowId * RoadTile.DEPTH - RoadTile.DEPTH / 2);
        this._rowId = rowId;
        this._x = x;
        this._width = width;
        this._active = true;
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() {
        return true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._lWall.update();
        this._rWall.update();
    }
}
RoadTile.MAX_WIDTH = 10;
RoadTile.DEF_WIDTH = 6;
RoadTile.Y = 0;
/**
 * Velikost dlazdice na ose Z
 */
RoadTile.DEPTH = 1.5;
/**
 * Pocet bloku zdi po kazde strane
 */
RoadTile.WALL_BLOCK_CNT = 4;
/**
 * Zed po strane RoadTile
 */
class RoadTileWall {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(leftSide) {
        this._aabb = new pc.BoundingBox();
        this._blocks = [];
        this._blockAnimOffsets = [];
        this._blockAlignment = (leftSide ? 6 /* wallLeft */ : 7 /* wallRight */);
    }
    /**
     * (RO) Sirka zdi
     */
    get width() { return this._width; }
    /**
     * AABB bounding box zdi
     */
    get aabb() {
        if (!this._aabbValid) {
            this._aabbValid = true;
            this._aabb.copy(this._blocks[0].entity.model.meshInstances[0].aabb);
            this._aabb.center.z -= (RoadTile.DEPTH / 2 - RoadTileWall.BLOCK_DEPTH / 2);
            this._aabb.halfExtents.z = RoadTile.DEPTH / 2;
        }
        return this._aabb;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._blocks[0]) {
            let blockMng = _Blocks__WEBPACK_IMPORTED_MODULE_1__.BlockManager.instance;
            for (let i = 0; i < RoadTileWall.BLOCKS_PER_WALL; i++) {
                blockMng.releaseBlock(this._blocks[i]);
                this._blocks[i] = null;
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, x, z, width) {
        let settings = _RoadManager__WEBPACK_IMPORTED_MODULE_5__.RoadManager.instance.roadWallSettings;
        this._firstBlockId = rowId * RoadTileWall.BLOCKS_PER_WALL;
        this._width = width;
        this._baseHeight = _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(settings.baseMinHeight, settings.baseMaxHeight);
        this._waveHeightRatio = _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(settings.waveMinRatio, settings.waveMaxRatio);
        // Nastavit jednotlive bloky tvorici zed
        let blockMng = _Blocks__WEBPACK_IMPORTED_MODULE_1__.BlockManager.instance;
        for (let i = 0; i < RoadTileWall.BLOCKS_PER_WALL; i++) {
            let block = blockMng.getFreeBlock(_Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIntIn(0, (_Blocks__WEBPACK_IMPORTED_MODULE_1__.BlockManager.COLOR_CNT * 2) - 1) % _Blocks__WEBPACK_IMPORTED_MODULE_1__.BlockManager.COLOR_CNT, this._blockAlignment);
            let blockEnt = block.entity;
            this._blocks[i] = block;
            blockEnt.setLocalPosition(x, 0, z);
            this._blockAnimOffsets[i] = _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIn(0, 10) % 1;
            z -= RoadTileWall.BLOCK_DEPTH;
        }
        if (!this._wave)
            this._wave = _RoadManager__WEBPACK_IMPORTED_MODULE_5__.RoadManager.instance.roadWallWave;
        // AABB zdi
        this._aabbValid = false;
        return this;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        //let blockId = this._firstBlockId;
        let waveAnimProgress = this._wave.animProgress;
        for (let i = 0; i < RoadTileWall.BLOCKS_PER_WALL; i++) {
            let entity = this._blocks[i].entity;
            // Pozice ve vlne
            let blockAnimProgress = (waveAnimProgress + this._blockAnimOffsets[i]) % 1;
            entity.setLocalScale(this._width, this._baseHeight + RoadWallWave.HEIGHT_OFFSETS[Math.floor(blockAnimProgress * RoadWallWave.HEIGHT_OFFSETS.length)] * this._waveHeightRatio, RoadTileWall.BLOCK_DEPTH);
            //blockId++;
        }
    }
}
/**
 * Zakladni sirka zdi
 */
RoadTileWall.DEF_WIDTH = 5;
/**
 * Zakladni vyska zdi
 */
RoadTileWall.DEF_HEIGHT = 2.5;
/**
 * Pocet bloku tvoricich zed
 */
RoadTileWall.BLOCKS_PER_WALL = 2;
/**
 * Hloubka bloku
 */
RoadTileWall.BLOCK_DEPTH = RoadTile.DEPTH / RoadTileWall.BLOCKS_PER_WALL;
class RoadWallWave {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(height, precision, animLen) {
        // Tabulka offsetu vysky
        RoadWallWave.HEIGHT_OFFSETS = [];
        for (let i = 0; i < precision; i++)
            RoadWallWave.HEIGHT_OFFSETS[i] = pc.QuadraticInOut(i / precision) * height;
        for (let i = 0; i < precision; i++)
            RoadWallWave.HEIGHT_OFFSETS[precision + i] = height - RoadWallWave.HEIGHT_OFFSETS[i];
        // Rychlost animace
        this._animLen = animLen;
    }
    /**
     * Aktualni pozice ve vlne (0 = zacatek oblouku, 0.5 = vrchol oblouku, 1 = 0 = zacatek dalsiho oblouku)
     */
    get animProgress() { return this._animProgress; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    start(animOffset) {
        this._animProgress = animOffset;
        this._animStartTime = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._animProgress = ((_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time - this._animStartTime) / this._animLen) % 1;
    }
}
/**
 * Pocet bloku, ktere tvori oblouk vlny
 */
RoadWallWave.BLOCKS_PER_WAVE = 20;


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/Elements/Bonus.ts":
/*!****************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/Elements/Bonus.ts ***!
  \****************************************************************/
/*! namespace exports */
/*! export Bonus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BonusPickupFxManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bonus": () => /* binding */ Bonus,
/* harmony export */   "BonusPickupFxManager": () => /* binding */ BonusPickupFxManager
/* harmony export */ });
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _RowElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../RowElement */ "./src/Gameplay/Game World/Row Elements/RowElement.ts");
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../Utils/Collections/WrapperArray */ "./src/Utils/Collections/WrapperArray.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");








class Bonus extends _RowElement__WEBPACK_IMPORTED_MODULE_2__.RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(bonusType) {
        super(3 /* bonus */);
        /**
         * Vychozi pozice bonusu
         */
        this._pos = new pc.Vec3();
        this._keepEnabled = true;
        // Bonus
        let entity = this._node = new pc.Entity("bonus");
        entity.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.assets.find("bns" /* bonus */ + (bonusType + 1), "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            batchGroupId: _Gameplay__WEBPACK_IMPORTED_MODULE_1__.Gameplay.getBatchGroupId(2 /* vertexColor */)
        });
        entity.setLocalScale(0, 0, 0);
        // Zare nad bonusem
        if (!Bonus._glowMaterials)
            this.createGlowMaterials();
        this._glow = new pc.Entity("bnsGlow");
        this._glow.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            material: Bonus._glowMaterials[bonusType],
            batchGroupId: Bonus._glowBatchGroupId[bonusType]
        });
        this._glow.enabled = false;
        this._glow.setLocalScale(0.3, Bonus.GLOW_HEIGHT, 2);
        // Stin
        let matCyrcleShadow = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.Gameplay.getSharedMaterial(1 /* circleShadow */);
        this._shadow = new pc.Entity("bnsShadow");
        this._shadow.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: matCyrcleShadow.material,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            lightmapped: false,
            batchGroupId: matCyrcleShadow.batchGroupId
        });
        this._shadow.setLocalScale(0, 0, 0);
        // Typ
        this._bnsType = bonusType;
        // Pohupovani
        this._idleFxOffset = _Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIntIn(0, Bonus.IDLE_FX_MOVE_TIME);
    }
    /**
     * (RO) Typ bonusu
     */
    get bonusType() { return this._bnsType; }
    //-------------------------------------------------------------------------
    /**
     * Vraci neaktivni instanci Trampoline
     */
    //-------------------------------------------------------------------------
    static getInstance(bonusType) {
        if (!Bonus._freeInstances) {
            Bonus._freeInstances = [
                new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 6, true, () => { return new Bonus(0); }),
                new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 4, true, () => { return new Bonus(1); }),
            ];
        }
        return Bonus._freeInstances[bonusType].getItem();
    }
    //-------------------------------------------------------------------------
    /**
     *
     * @param rowId
     * @param parent
     * @param pbe
     */
    //-------------------------------------------------------------------------
    init(rowId, parent, pbe) {
        super.init(rowId, parent, pbe);
        // Bonus
        this._pos.set(Bonus.RADIUS + (parent.width - (Bonus.RADIUS * 2)) * pbe.x, pbe.y, 0);
        this._actY = pbe.y;
        this._node.setLocalPosition(this._pos);
        this._node.setLocalEulerAngles(0, 0, 0);
        this._node.setLocalScale(1, 1, 1);
        // Zare
        this._glow.setLocalPosition(this._pos.x, this._pos.y + 0.5 + Bonus.GLOW_HEIGHT / 2, this._pos.z);
        this._glow.setEulerAngles(90, 0, 0);
        if (this._glow.parent != parent.node)
            this._glow.reparent(parent.node);
        this._glow.enabled = true;
        // Stin
        if (pbe.shadow) {
            if (this._shadow.parent != parent.node)
                this._shadow.reparent(parent.node);
            this._shadow.setLocalPosition(this._pos.x, _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__.RoadTile.Y + 0.01, 0);
            this._shadow.setLocalScale(Bonus.RADIUS * 2.5, 1, Bonus.RADIUS * 2.5);
        }
        this._pickupTime = -1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            super.reset();
            this._node.setLocalScale(0, 0, 0);
            this._glow.enabled = false;
            this._shadow.setLocalScale(0, 0, 0);
            Bonus._freeInstances[this._bnsType].returnItem(this);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Test kolize s hracem
     * @param plColSphere BoundingSphere hrace
     */
    //-------------------------------------------------------------------------
    checkPlCollision(plColSphere) {
        if (this._pickupTime >= 0)
            return false;
        let pos = this._node.getPosition();
        if (pos.distance(plColSphere.center) < plColSphere.radius + Bonus.RADIUS) {
            BonusPickupFxManager.instance.showFx(this);
            // Skryt bonus
            this._pickupTime = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time;
            this._node.setLocalScale(0, 0, 0);
            this._glow.enabled = false;
            this._shadow.setLocalScale(0, 0, 0);
            // Mise
            if (_Game__WEBPACK_IMPORTED_MODULE_4__.Game.missions)
                _Game__WEBPACK_IMPORTED_MODULE_4__.Game.missions.incMissionProgress(this._bnsType == 0 ? 0 /* collectBonus1 */ : 1 /* collectBonus2 */);
            return true;
        }
        return false;
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() {
        return true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Bonus
        let rot = 60 * _Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.deltaS;
        if (this._pickupTime < 0) {
            let progress = (_Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time + this._idleFxOffset) / Bonus.IDLE_FX_MOVE_TIME;
            this._pos.y = this._actY + Math.sin(progress * Math.PI) * (Bonus.IDLE_FX_MOVE_RANGE / 2);
            this._node.setLocalPosition(this._pos);
            this._node.rotateLocal(0, rot, 0);
        }
        /*else {
            let i = (TIMER.time - this._pickupTime) / 500;

            if (i >= 1) {
                this.reset();
                return;
            }

            this._node.setLocalPosition(this._pos.x, this._pos.y + 2 * pc.CubicOut(i), this._pos.z);

            i = (Bonus.RADIUS * 2) - pc.SineIn(i) * (Bonus.RADIUS * 2);
            this._node.setLocalScale(i, i, i);
            rot *= 3;
            this._node.rotateLocal(rot, 0, 0);
        }*/
    }
    //-------------------------------------------------------------------------
    /**
     * Vytvoreni materualu pro zari nad bonusy
     */
    //-------------------------------------------------------------------------
    createGlowMaterials() {
        Bonus._glowMaterials = [];
        Bonus._glowBatchGroupId = [];
        const bnsColors = [
            new pc.Color(0, 1, 0),
            new pc.Color().fromString("#9800E7")
        ];
        for (let i = 0; i < 2; i++) {
            Bonus._glowMaterials[i] = this.createGlowMaterial(bnsColors[i]);
            Bonus._glowBatchGroupId[i] = _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.batcher.addGroup("bnsFx" + i, true, 100).id;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    createGlowMaterial(color) {
        let mat = new pc.StandardMaterial();
        mat.diffuse.set(0, 0, 0);
        mat.emissive.copy(color);
        mat.blendType = pc.BLEND_NORMAL;
        mat.useLighting = false;
        mat.useGammaTonemap = false;
        mat.depthWrite = false;
        mat.opacity = 0.5;
        mat.opacityMap = _Game__WEBPACK_IMPORTED_MODULE_4__.atlas.texture; // Musim nastavit texturu, aby se predavalo UV do shader chunku
        mat.chunks.opacityConstPS = Bonus.FX_OPACITY_CHUNK;
        mat.update();
        return mat;
    }
}
Bonus.RADIUS = 0.25;
Bonus.GLOW_HEIGHT = 2;
/**
 * Shader chunk pro vykresleni efektu nad bonusem
 */
Bonus.FX_OPACITY_CHUNK = "#define PI 3.1415926538\n" +
    "void getOpacity() {\n" +
    "   dAlpha = sin($UV.y * PI) * 0.5;\n" +
    "}";
/**
 * Rozsah pohybu bonusu po ose Z v idle stavu
 */
Bonus.IDLE_FX_MOVE_RANGE = 0.2;
/**
 * Jak dlouho (v ms) trva prekonani daneho rozsahu
 */
Bonus.IDLE_FX_MOVE_TIME = 400;
class BonusParticle {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(bonusType) {
        this._entity = new pc.Entity();
        this._entity.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.assets.find("bns" /* bonus */ + (bonusType + 1), "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            batchGroupId: _Gameplay__WEBPACK_IMPORTED_MODULE_1__.Gameplay.getBatchGroupId(2 /* vertexColor */)
        });
        this._entity.setLocalScale(0, 0, 0);
        _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.root.addChild(this._entity);
        this._startPos = new pc.Vec3();
        this._moveStep = new pc.Vec2();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._entity.setLocalScale(0, 0, 0);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    activate(scenePos) {
        // Scale
        let i = _Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIn(BonusParticle.MIN_SCALE, BonusParticle.MAX_SCALE);
        this._startScale = i;
        this._entity.setLocalScale(i, i, i);
        this._entity.setPosition(this._startPos.copy(scenePos));
        // Smer pohybu
        i = _Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIn(BonusParticle.MIN_MOVE_DIR, BonusParticle.MAX_MOVE_DIR);
        this._moveStep.x = Math.cos(i);
        this._moveStep.y = Math.sin(i);
        this._moveDis = _Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIn(BonusParticle.MIN_MOVE_DIS, BonusParticle.MAX_MOVE_DIS);
        // Rotace
        this._entity.setEulerAngles(_Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIn(0, 180), 0, _Game__WEBPACK_IMPORTED_MODULE_4__.rnd2.randomIn(0, 180));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update(progress) {
        // Pozice
        let moveDis = this._moveDis * pc.CubicOut(progress);
        this._entity.setPosition(this._startPos.x + this._moveStep.x * moveDis, this._startPos.y + this._moveStep.y * moveDis, this._startPos.z);
        // Scale
        if (progress > 0.5) {
            let scale = this._startScale - pc.CubicIn((progress - 0.5) / 0.5) * this._startScale;
            this._entity.setLocalScale(scale, scale, scale);
        }
    }
}
BonusParticle.MIN_SCALE = 0.5;
BonusParticle.MAX_SCALE = 0.4;
BonusParticle.MIN_MOVE_DIR = 45 * pc.math.DEG_TO_RAD;
BonusParticle.MAX_MOVE_DIR = 135 * pc.math.DEG_TO_RAD;
BonusParticle.MIN_MOVE_DIS = 1;
BonusParticle.MAX_MOVE_DIS = 1.5;
class BonusGroundCircle {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        if (!BonusGroundCircle._material)
            this.createMaterial();
        this._actTime = -1;
        this._entity = new pc.Entity();
        this._entity.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: BonusGroundCircle._material,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
        });
        _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.root.addChild(this._entity);
        this._entity.model.hide();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._actTime >= 0) {
            this._entity.model.hide();
            this._actTime = -1;
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Aktivace efektu
     * @param pos Pozice v hernim svete, na ktere se ma efekt aktivovat (Y se ignoruje)
     * @param bonusType
     */
    //-------------------------------------------------------------------------
    activate(pos, bonusType) {
        this._entity.setPosition(pos.x, _GameWorld__WEBPACK_IMPORTED_MODULE_6__.GameWorld.GROUND_Y + 0.01, pos.z);
        this._entity.setLocalScale(BonusGroundCircle.START_SCALE, BonusGroundCircle.START_SCALE, BonusGroundCircle.START_SCALE);
        this._entity.model.show();
        // Barva
        this._entity.model.meshInstances[0].setParameter("uColor", _Game__WEBPACK_IMPORTED_MODULE_4__.Game.colorToArray(BonusGroundCircle._colors[bonusType], false, BonusGroundCircle._colorBuf));
        this._actTime = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let progress = (_Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time - this._actTime) / 1000;
        if (progress >= 1) {
            this.reset();
            return false;
        }
        progress = pc.CubicOut(progress);
        let scale = BonusGroundCircle.START_SCALE + (BonusGroundCircle.END_SCALE - BonusGroundCircle.START_SCALE) * progress;
        this._entity.setLocalScale(scale, scale, scale);
        this._entity.model.meshInstances[0].setParameter("uAlpha", 1 - progress);
        return true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    createMaterial() {
        const vShader = `attribute vec3 aPosition;
        attribute vec2 aUv0;

        uniform mat4 matrix_model;
        uniform mat4 matrix_viewProjection;

        varying vec2 vUv0;

        void main(void) {
            vUv0 = aUv0;
            vec4 posW = matrix_model * vec4(aPosition, 1.0);
            gl_Position = matrix_viewProjection * posW;
        }`;
        const fShader = `varying vec2 vUv0;
        uniform float uAlpha;
        uniform vec3 uColor;

        void main(void) {
            float centerOffset = length(vUv0 - vec2(0.5));
            float alpha = (1.0 - smoothstep(0.475, 0.5, centerOffset)) * smoothstep(0.35, 0.375, centerOffset) * uAlpha;

            gl_FragColor = vec4(uColor, alpha);
        }`;
        let mat = BonusGroundCircle._material = new pc.Material();
        mat.blendType = pc.BLEND_NORMAL;
        mat.cull = pc.CULLFACE_NONE;
        mat.shader = new pc.Shader(_Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.graphicsDevice, {
            attributes: {
                aPosition: pc.SEMANTIC_POSITION,
                aUv0: pc.SEMANTIC_TEXCOORD0
            },
            vshader: vShader,
            fshader: "precision " + _Game__WEBPACK_IMPORTED_MODULE_4__.Game.app.graphicsDevice.precision + " float;\n" + fShader
        });
        mat.setParameter("uColor", BonusGroundCircle._colorBuf);
        mat.setParameter("uAlpha", 1);
        mat.update();
    }
}
BonusGroundCircle.START_SCALE = 0.5;
BonusGroundCircle.END_SCALE = 2.5;
BonusGroundCircle._colorBuf = [0, 0, 0];
BonusGroundCircle._colors = [
    new pc.Color().fromString("#65E733"),
    new pc.Color().fromString("#9800E7")
];
class BonusPickupFx {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(bonusType) {
        this._bnsType = bonusType;
        // Castice
        this._particles = [];
        for (let i = 0; i < BonusPickupFx.PARTICLE_CNT; i++) {
            this._particles.push(new BonusParticle(bonusType));
        }
        // Kruh
        this._groundCircle = new BonusGroundCircle();
    }
    /**
     * (RO) Typ bonusu, pro ktery je efekt urcen
     */
    get bonusType() { return this._bnsType; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._particles.forEach((particle) => { particle.reset(); });
        this._groundCircle.reset();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    start(bonus) {
        this._startTime = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time;
        let bnsPos = bonus.node.getPosition();
        // Aktivovat castice
        this._particles.forEach((particle) => {
            particle.activate(bnsPos);
        });
        // Aktivovat kruh
        this._groundCircle.activate(bnsPos, this._bnsType);
        this._stateMask = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let resMask = 0;
        // Castice
        if ((this._stateMask & 1) == 0) {
            let progress = (_Gameplay__WEBPACK_IMPORTED_MODULE_1__.TIMER.time - this._startTime) / BonusPickupFx.PARTICLE_LIFE_SPAN;
            if (progress < 1) {
                this._particles.forEach((particle) => { particle.update(progress); });
            }
            else {
                this._particles.forEach((particle) => { particle.reset(); });
                this._stateMask |= 1;
            }
        }
        // Kruh na zemi
        if ((this._stateMask & 2) == 0) {
            if (!this._groundCircle.update())
                this._stateMask |= 2;
        }
        return this._stateMask != 3;
    }
}
/**
 * Celkovy pocet castic
 */
BonusPickupFx.PARTICLE_CNT = 3;
/**
 * Zivotnost castic
 */
BonusPickupFx.PARTICLE_LIFE_SPAN = 500;
class BonusPickupFxManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        BonusPickupFxManager._instance = this;
        this._freeFxs = [
            new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 3, true, () => { return new BonusPickupFx(0); }),
            new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 1, true, () => { return new BonusPickupFx(1); }),
        ];
        this._actFxs = new _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_5__.WrappedArray();
    }
    static get instance() { return BonusPickupFxManager._instance; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._actFxs.forEach((fx) => {
            fx.reset();
            this._freeFxs[fx.bonusType].returnItem(fx);
        });
        this._actFxs.clear();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    showFx(bonus) {
        let fx = this._freeFxs[bonus.bonusType].getItem();
        fx.start(bonus);
        this._actFxs.add(fx);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let fxCnt = this._actFxs.size;
        for (let fxId = 0; fxId < fxCnt; fxId++) {
            let fx = this._actFxs.getItemAtIndex(fxId);
            if (!fx.update()) {
                this._actFxs.remove(false);
                this._freeFxs[fx.bonusType].returnItem(fx);
                fxId--;
                fxCnt--;
            }
        }
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/Elements/ObstacleBlock.ts":
/*!************************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/Elements/ObstacleBlock.ts ***!
  \************************************************************************/
/*! namespace exports */
/*! export ObstacleBlock [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ObstacleBlockBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ObstacleBlockContainer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ObstacleBlockContainerData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ObstacleBlockData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ObstacleBlockDataBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eObstacleBlockAlignment [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eObstacleBlockAlignment": () => /* binding */ eObstacleBlockAlignment,
/* harmony export */   "ObstacleBlockDataBase": () => /* binding */ ObstacleBlockDataBase,
/* harmony export */   "ObstacleBlockData": () => /* binding */ ObstacleBlockData,
/* harmony export */   "ObstacleBlockContainerData": () => /* binding */ ObstacleBlockContainerData,
/* harmony export */   "ObstacleBlockBase": () => /* binding */ ObstacleBlockBase,
/* harmony export */   "ObstacleBlockContainer": () => /* binding */ ObstacleBlockContainer,
/* harmony export */   "ObstacleBlock": () => /* binding */ ObstacleBlock
/* harmony export */ });
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Blocks */ "./src/Gameplay/Game World/Blocks.ts");
/* harmony import */ var _Road_RoadManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Road/RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");
/* harmony import */ var _RowElement__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../RowElement */ "./src/Gameplay/Game World/Row Elements/RowElement.ts");
/* harmony import */ var _Value__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Value */ "./src/Gameplay/Game World/Row Elements/Value.ts");






var eObstacleBlockAlignment;
(function (eObstacleBlockAlignment) {
    eObstacleBlockAlignment[eObstacleBlockAlignment["none"] = 0] = "none";
    eObstacleBlockAlignment[eObstacleBlockAlignment["left"] = 1] = "left";
    eObstacleBlockAlignment[eObstacleBlockAlignment["center"] = 2] = "center";
    eObstacleBlockAlignment[eObstacleBlockAlignment["right"] = 3] = "right";
})(eObstacleBlockAlignment || (eObstacleBlockAlignment = {}));
/**
 *
 */
class ObstacleBlockDataBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(hAlignment, x, y, width, height, depth, materialId) {
        this.hAlignment = hAlignment;
        this.x = (x instanceof _Value__WEBPACK_IMPORTED_MODULE_5__.Value ? x : new _Value__WEBPACK_IMPORTED_MODULE_5__.StaticValue(x));
        this.y = (y instanceof _Value__WEBPACK_IMPORTED_MODULE_5__.Value ? y : new _Value__WEBPACK_IMPORTED_MODULE_5__.StaticValue(y));
        this.width = (width instanceof _Value__WEBPACK_IMPORTED_MODULE_5__.Value ? width : new _Value__WEBPACK_IMPORTED_MODULE_5__.StaticValue(width));
        this.height = (height instanceof _Value__WEBPACK_IMPORTED_MODULE_5__.Value ? height : new _Value__WEBPACK_IMPORTED_MODULE_5__.StaticValue(height));
        this.depth = depth;
        this.materialId = materialId;
    }
}
class ObstacleBlockData extends ObstacleBlockDataBase {
    //-------------------------------------------------------------------------
    /**
     *
     * @param blockAlignment Alignment bloku, ktery se pouzije
     * @param hAlignment Alignment bloku v kontejneru
     * @param width Sirka bloku (0 az 1. 1 = 100% sirky, ktera je k dispozici)
     * @param height Vyska bloku v metrech
     * @param x Pozice bloku na ose X (0 az 1). Ma vyznam pouze pokud hAlignment je none. Default: 0
     * @param y Pozice bloku na ose Y v metrech. Default: 0
     * @param depth Hloubka bloku nebo kontejneru (0 az 1). Default 1 = max hloubka.
     * @param materialId Index materialu pro blok. Pokud -1, tak se pouzije material nastaveny kontejnerem nebo vychozi material (0), pokud je blok primo v RoadTile. Default: -1
     * @param checkPlCollision True, pokud se ma detekovat kolize s hracem. Default: true
     * @param shadow True, pokud se ma zobrazit stin. Default: false
     */
    //-------------------------------------------------------------------------
    constructor(blockAlignment, hAlignment, width, height, x = 0, y = 0, depth = 1, materialId = -1, checkPlCollision = true, shadow = false) {
        super(hAlignment, x, y, width, height, depth, materialId);
        this.blockAlignment = blockAlignment;
        this.shadow = shadow;
        this.checkPlCollision = checkPlCollision;
    }
}
class ObstacleBlockContainerData extends ObstacleBlockDataBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(hAlignment, children, width, x = 0, y = 0, depth = 1, materialId = -1) {
        let height = 0;
        super(hAlignment, x, y, width, height, depth, materialId);
        this.children = children;
    }
}
class ObstacleBlockBase extends _RowElement__WEBPACK_IMPORTED_MODULE_4__.RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super(0 /* obstacleBlock */);
        this._keepEnabled = true;
    }
    get data() { return this._data; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, parent, data) {
        super.init(rowId, parent, data);
        // Inicializovat data
        this._data = data;
        this._updateReqMask = 0;
        if (data.x.connectElement(this))
            this._updateReqMask |= ObstacleBlockBase.UPDATE_REQ_X;
        if (data.y.connectElement(this))
            this._updateReqMask |= ObstacleBlockBase.UPDATE_REQ_Y;
        if (data.width.connectElement(this))
            this._updateReqMask |= ObstacleBlockBase.UPDATE_REQ_W;
        if (data.height.connectElement(this))
            this._updateReqMask |= ObstacleBlockBase.UPDATE_REQ_H;
        // Nastavit pozici a rozmery node
        let parentW = this._parent.width;
        let x;
        let y = data.y.getValue();
        let w = parentW * data.width.getValue();
        let h = data.height.getValue();
        switch (data.hAlignment) {
            case 0 /* none */: {
                x = parentW * data.x.getValue();
                break;
            }
            case 1 /* left */: {
                x = 0;
                break;
            }
            case 2 /* center */: {
                x = parentW / 2;
                break;
            }
            case 3 /* right */: {
                x = parentW;
                break;
            }
        }
        this._node.setLocalPosition(x, y, 0);
        this._x = x;
        this._y = y;
        this._width = w;
        this._height = h;
        if (data.depth != 1) {
            x++;
        }
        this._depth = parent.depth * data.depth;
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() {
        return this._updateReqMask != 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Aktualizace pozice
        if ((this._updateReqMask & (ObstacleBlockBase.UPDATE_REQ_X | ObstacleBlockBase.UPDATE_REQ_Y)) != 0) {
            let pos = this._node.getLocalPosition();
            if ((this._updateReqMask & ObstacleBlockBase.UPDATE_REQ_X) != 0)
                pos.x = this._x = this._parent.width * this._data.x.getValue();
            if ((this._updateReqMask & ObstacleBlockBase.UPDATE_REQ_Y) != 0)
                pos.y = this._y = this._data.y.getValue();
            this._node.setLocalPosition(pos);
        }
        // Aktualizace rozmeru
        if ((this._updateReqMask & (ObstacleBlockBase.UPDATE_REQ_W | ObstacleBlockBase.UPDATE_REQ_H)) != 0) {
            let scale = this._node.getLocalScale();
            if ((this._updateReqMask & ObstacleBlockBase.UPDATE_REQ_W) != 0)
                scale.x = this._width = this._parent.width * this._data.width.getValue();
            if ((this._updateReqMask & ObstacleBlockBase.UPDATE_REQ_H) != 0)
                scale.y = this._height = this._data.height.getValue();
            this._node.setLocalScale(scale);
        }
    }
}
ObstacleBlockBase.DEPTH = 0.5;
ObstacleBlockBase.UPDATE_REQ_X = 0x0001;
ObstacleBlockBase.UPDATE_REQ_Y = 0x0002;
ObstacleBlockBase.UPDATE_REQ_W = 0x0004;
ObstacleBlockBase.UPDATE_REQ_H = 0x0008;
class ObstacleBlockContainer extends ObstacleBlockBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super();
        this._node = new pc.GraphNode("blockObsContainer");
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci neaktivni instanci ObstacleBlock
     */
    //-------------------------------------------------------------------------
    static getInstance() { return ObstacleBlockContainer._freeInstances.getItem(); }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            super.reset();
            ObstacleBlockContainer._freeInstances.returnItem(this);
        }
    }
}
/**
 * Pool s volnyma instancema
 */
ObstacleBlockContainer._freeInstances = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(ObstacleBlockContainer, 3, true);
class ObstacleBlock extends ObstacleBlockBase {
    //-------------------------------------------------------------------------
    /**
     * Vraci neaktivni instanci ObstacleBlock
     */
    //-------------------------------------------------------------------------
    static getInstance() {
        if (!ObstacleBlock._freeInstances) {
            ObstacleBlock._freeInstances = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(ObstacleBlock, 10, true);
            this._freeShadows = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 2, true, () => {
                let e = new pc.Entity("blockShadow");
                let sharedMat = _Gameplay__WEBPACK_IMPORTED_MODULE_1__.Gameplay.getSharedMaterial(0 /* rectShadow */);
                e.addComponent("model" /* model */, {
                    type: "plane" /* plane */,
                    material: sharedMat.material,
                    castShadows: false,
                    castShadowsLightmap: false,
                    receiveShadows: false,
                    lightmapped: false,
                    batchGroupId: sharedMat.batchGroupId
                });
                e.enabled = false;
                return e;
            });
        }
        return ObstacleBlock._freeInstances.getItem();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            this._active = false;
            _Blocks__WEBPACK_IMPORTED_MODULE_2__.BlockManager.instance.releaseBlock(this._block);
            this._block = null;
            this._node = null;
            if (this._shadow) {
                this._shadow.enabled = false;
                ObstacleBlock._freeShadows.returnItem(this._shadow);
                this._shadow = undefined;
            }
            ObstacleBlock._freeInstances.returnItem(this);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, parent, data) {
        // Ziskat blok
        let colorId = data.materialId;
        if (colorId < 0) {
            if (parent instanceof ObstacleBlockContainer)
                colorId = parent.data.materialId;
            if (colorId < 0)
                colorId = rowId % _Road_RoadManager__WEBPACK_IMPORTED_MODULE_3__.RoadManager.WALL_COLOR_CNT;
        }
        this._block = _Blocks__WEBPACK_IMPORTED_MODULE_2__.BlockManager.instance.getFreeBlock(colorId, data.blockAlignment);
        this._node = this._block.entity;
        if (this._node.parent != parent.node)
            this._node.reparent(parent.node);
        // Inicializace
        super.init(rowId, parent, data);
        this._node.setLocalScale(this._width, this._height, this._depth);
        // Stin
        if (data.shadow) {
            this._shadow = ObstacleBlock._freeShadows.getItem();
            if (this._shadow.parent != parent.node)
                this._shadow.reparent(parent.node);
            this.setShadowPos();
            this.setShadowSize();
            this._shadow.enabled = true;
        }
        // Detekovat kolize?
        this._checkPlCollision = data.checkPlCollision;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        super.update();
        if (this._shadow) {
            if ((this._updateReqMask & ObstacleBlockBase.UPDATE_REQ_X) != 0)
                this.setShadowPos();
            if ((this._updateReqMask & (ObstacleBlockBase.UPDATE_REQ_W | ObstacleBlockBase.UPDATE_REQ_Y)) != 0)
                this.setShadowSize();
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Test kolize s hracem
     * @param plColSphere BoundingSphere hrace
     */
    //-------------------------------------------------------------------------
    checkPlCollision(plColSphere) {
        if (!this._active || !this._checkPlCollision)
            return false;
        let colBox = this._node.model.meshInstances[0].aabb;
        if (colBox.intersectsBoundingSphere(plColSphere)) {
            let blockMng = _Blocks__WEBPACK_IMPORTED_MODULE_2__.BlockManager.instance;
            // Zobrazit transparentni blok
            let transBlock = blockMng.getFreeBlock(0, this._block.alignment + 3);
            let transBlockEnt = transBlock.entity;
            transBlockEnt.setLocalPosition(this._node.getLocalPosition());
            transBlockEnt.setLocalScale(this._node.getLocalScale());
            if (transBlockEnt.parent != this._node.parent)
                transBlockEnt.reparent(this._node.parent);
            this._node = transBlockEnt;
            // Uvolnit aktualni blok
            blockMng.releaseBlock(this._block);
            this._block = transBlock;
            this._checkPlCollision = false;
            return true;
        }
        return false;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setShadowPos() {
        let x = this._x;
        switch (this._data.blockAlignment) {
            case 0 /* left */: {
                x += this._width / 2;
                break;
            }
            case 1 /* right */: {
                x -= this._width / 2;
                break;
            }
        }
        this._shadow.setLocalPosition(x, 0.01, 0);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setShadowSize() {
        this._shadow.setLocalScale(this._width, 1, this._depth - Math.min(1, this._y / 3) * (this._depth / 2));
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/Elements/SpeedChange.ts":
/*!**********************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/Elements/SpeedChange.ts ***!
  \**********************************************************************/
/*! namespace exports */
/*! export SpeedChange [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpeedChange": () => /* binding */ SpeedChange
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _RowElement__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../RowElement */ "./src/Gameplay/Game World/Row Elements/RowElement.ts");





class SpeedChange extends _RowElement__WEBPACK_IMPORTED_MODULE_4__.RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(speedup) {
        if (!SpeedChange._fxMaterial) {
            // Material pro efekt menice rychlosti
            let mat = SpeedChange._fxMaterial = new pc.StandardMaterial();
            mat.diffuse.set(0, 0, 0);
            mat.emissiveVertexColor = true;
            mat.emissive.set(1, 1, 1);
            mat.blendType = pc.BLEND_NORMAL;
            mat.useLighting = false;
            mat.useGammaTonemap = false;
            mat.cull = pc.CULLFACE_NONE;
            mat.depthWrite = false;
            mat.opacity = 0.5;
            mat.chunks.opacityConstPS = SpeedChange.FX_OPACITY_CHUNK;
            mat.update();
            // Batchgroup pro efekt menice rychlosti
            SpeedChange._fxBatchGroupId = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher.addGroup("speedChangeFx", true, 100).id;
        }
        super(2 /* speedChange */);
        this._keepEnabled = true;
        this._speedup = speedup;
        // Entita pro sipky
        let entity = this._node = new pc.Entity("speedChange");
        entity.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find(speedup ? "speedUp" /* speedUp */ : "slowDown" /* slowDown */, "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            batchGroupId: _Gameplay__WEBPACK_IMPORTED_MODULE_2__.Gameplay.getBatchGroupId(2 /* vertexColor */)
        });
        entity.setLocalScale(0, 0, 0);
        // Zare nad spikami
        this._fxEnt = new pc.Entity();
        this._fxEnt.addComponent("model" /* model */, {
            type: "asset" /* asset */,
            asset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find(speedup ? "speedUpFx" /* speedUpFx */ : "slowDownFx" /* slowDownFx */, "model" /* model */),
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            batchGroupId: SpeedChange._fxBatchGroupId
        });
        this._fxEnt.model.meshInstances[0].material = SpeedChange._fxMaterial;
        entity.addChild(this._fxEnt);
    }
    /**
     * (RO) True, pokud se jedna o zrychlujici dlazdici
     */
    get speedup() { return this._speedup; }
    //-------------------------------------------------------------------------
    /**
     * Vraci neaktivni instanci
     */
    //-------------------------------------------------------------------------
    static getInstance(speedup) {
        if (!SpeedChange._freeInstances)
            SpeedChange._freeInstances = [
                new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(undefined, 4, true, () => { return new SpeedChange(false); }),
                new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(undefined, 4, true, () => { return new SpeedChange(true); }),
            ];
        return SpeedChange._freeInstances[speedup ? 1 : 0].getItem();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, parent, pbe) {
        super.init(rowId, parent, pbe);
        this._node.setLocalPosition(SpeedChange.TILE_W / 2 + (parent.width - SpeedChange.TILE_W) * pbe.x, 0.01, 0);
        this._node.setLocalScale(SpeedChange.TILE_W, 1, 1);
        this._checkCollision = true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            super.reset();
            this._node.setLocalScale(0, 0, 0);
            SpeedChange._freeInstances[this._speedup ? 1 : 0].returnItem(this);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() {
        return false;
    }
    //-------------------------------------------------------------------------
    /**
     * Test kolize s hracem
     * @param plColSphere BoundingSphere hrace
     */
    //-------------------------------------------------------------------------
    checkPlCollision(plColSphere) {
        if (!this._checkCollision)
            return false;
        let jumpProgress = _Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.instance.jumpProgress;
        if (jumpProgress > 0 && jumpProgress < 0.75)
            return false;
        let pos = this._node.getPosition();
        let plPos = plColSphere.center;
        let hSize = (SpeedChange.TILE_W / 2) + _Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.RADIUS * 0.75;
        if (pos.x - hSize <= plPos.x && pos.x + hSize >= plPos.x) {
            hSize = SpeedChange.TILE_H / 2;
            if (pos.z + hSize >= plPos.z && pos.z - hSize <= plPos.z) {
                this._checkCollision = false;
                return true;
            }
        }
        return false;
    }
}
SpeedChange.TILE_W = 0.75;
SpeedChange.TILE_H = 2.5;
SpeedChange.FX_OPACITY_CHUNK = "#define PI 3.1415926538\n" +
    "void getOpacity() {\n" +
    "   dAlpha = (1.0 - clamp((vPositionW.y / 0.4), 0.0, 1.0)) * 0.25;\n" +
    "}";


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/Elements/TRArampoline.ts":
/*!***********************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/Elements/TRArampoline.ts ***!
  \***********************************************************************/
/*! namespace exports */
/*! export TrampFxManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Trampoline [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Trampoline": () => /* binding */ Trampoline,
/* harmony export */   "TrampFxManager": () => /* binding */ TrampFxManager
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _RowElement__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../RowElement */ "./src/Gameplay/Game World/Row Elements/RowElement.ts");





class Trampoline extends _RowElement__WEBPACK_IMPORTED_MODULE_4__.RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super(1 /* trampoline */);
        this._keepEnabled = true;
        if (!Trampoline._material) {
            // Model pro tampolinu
            const opacityChunk = "void getOpacity() {\n" +
                "   dAlpha = 1.0;\n" +
                "   float len = length($UV.xy - vec2(0.5));\n" +
                "   float inCircle1 = (1.0 - smoothstep(0.175, 0.2, len));\n" +
                "   float inCircle2 = (1.0 - smoothstep(0.475, 0.5, len)) * smoothstep(0.35, 0.375, len);\n" +
                "   dAlpha *= (inCircle1 + inCircle2); }";
            let mat = Trampoline._material = new pc.StandardMaterial();
            mat.diffuse.set(0, 0, 0);
            mat.emissive.set(1, 0, 173 / 255);
            mat.blendType = pc.BLEND_NORMAL;
            mat.depthWrite = false;
            mat.useLighting = false;
            mat.useGammaTonemap = false;
            mat.opacity = 0.5;
            mat.opacityMap = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture; // Musim nastavit texturu, aby se predavalo UV do shader chunku
            mat.chunks.opacityConstPS = opacityChunk;
            mat.update();
            Trampoline._batchGroupId = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher.addGroup("trampBase", true, 100).id;
        }
        // Trampolina
        let entity = this._node = new pc.Entity("Trampoline");
        entity.addComponent("model" /* model */, {
            type: "plane" /* plane */,
            material: Trampoline._material,
            castShadows: false,
            castShadowsLightmap: false,
            receiveShadows: false,
            batchGroupId: Trampoline._batchGroupId
        });
        entity.setLocalScale(0, 0, 0);
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci neaktivni instanci Trampoline
     */
    //-------------------------------------------------------------------------
    static getInstance() {
        if (!Trampoline._freeInstances)
            Trampoline._freeInstances = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(Trampoline, 2, true);
        return Trampoline._freeInstances.getItem();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, parent, pbe) {
        super.init(rowId, parent, pbe);
        this._node.setLocalPosition(Trampoline.RADIUS + (parent.width - (Trampoline.RADIUS * 2)) * pbe.x, 0.01, 0);
        this._node.setLocalScale(Trampoline.RADIUS * 2, Trampoline.RADIUS * 2, Trampoline.RADIUS * 2);
        this._fx = TrampFxManager.instance.activateFx(this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            super.reset();
            this._node.setLocalScale(0, 0, 0);
            TrampFxManager.instance.deactivateFx(this._fx);
            this._fx = null;
            Trampoline._freeInstances.returnItem(this);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() {
        return true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._fx.update();
    }
    //-------------------------------------------------------------------------
    /**
     * Test kolize s hracem
     * @param plColSphere BoundingSphere hrace
     */
    //-------------------------------------------------------------------------
    checkPlCollision(plColSphere) {
        let jumpProgress = _Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.instance.jumpProgress;
        if (jumpProgress > 0 && jumpProgress < 0.75)
            return false;
        let pos = this._node.getPosition();
        let colDis = plColSphere.radius + Trampoline.RADIUS;
        return (Math.abs(plColSphere.center.x - pos.x) < colDis && Math.abs(plColSphere.center.z - pos.z) < colDis);
    }
}
Trampoline.RADIUS = 0.5;
class TrampFxManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        TrampFxManager._instance = this;
        this._freeFx = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(TrampFx, 2, true);
        this._fxPartSettings = [];
    }
    static get instance() { return TrampFxManager._instance; }
    /**
     * (RO) Aktualni offsety jednotlivych casti efektu na ose Y
     */
    get fxPartSettings() { return this._fxPartSettings; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    activateFx(trampoline) {
        let fx = this._freeFx.getItem();
        fx.activate(trampoline);
        return fx;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    deactivateFx(fx) {
        fx.reset();
        this._freeFx.returnItem(fx);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Vypocitat nastaveni pro jedotlive casti efektu
        let fxProgress = (_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time % TrampFx.PART_LIFESPAN) / TrampFx.PART_LIFESPAN;
        let fxPartProgSpacing = 1 / TrampFx.PART_CNT;
        let fxPartProg;
        for (let i = 0; i < TrampFx.PART_CNT; i++) {
            if ((fxPartProg = fxProgress + (fxPartProgSpacing * i)) >= 1)
                fxPartProg = fxPartProg - 1;
            this._fxPartSettings[i] = pc.SineOut(fxPartProg) * TrampFx.HEIGHT;
        }
    }
}
class TrampFx {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        if (!TrampFx._partMaterial) {
            // Material
            const opacityChunk = "#define FX_MAX_Y " + TrampFx.HEIGHT + ".0\n" +
                "#define DEF_OPACITY 0.75\n" +
                "void getOpacity() {\n" +
                "   dAlpha = (1.0 - (vPositionW.y / FX_MAX_Y)) * DEF_OPACITY;\n" +
                "   float len = length($UV.xy - vec2(0.5));\n" +
                "   float inCircle = (1.0 - smoothstep(0.475, 0.5, len)) * smoothstep(0.35, 0.375, len);\n" +
                "   dAlpha *= inCircle; }";
            let mat = TrampFx._partMaterial = new pc.StandardMaterial();
            mat.diffuse.set(0, 0, 0);
            mat.emissive.set(1, 0, 173 / 255);
            mat.blendType = pc.BLEND_NORMAL;
            mat.depthWrite = false;
            mat.useLighting = false;
            mat.useGammaTonemap = false;
            mat.opacity = 0.5;
            mat.opacityMap = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture; // Musim nastavit texturu, aby se predavalo UV do shader chunku
            mat.chunks.opacityConstPS = opacityChunk;
            mat.update();
            // Batchgroup
            TrampFx._partBatchGroupId = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher.addGroup("trampFx", true, 100).id;
            // Manager
            TrampFx._fxMng = TrampFxManager.instance;
        }
        // Entity pro jednotlive casti efektu
        this._partEntites = [];
        for (let i = 0; i < TrampFx.PART_CNT; i++) {
            let e = new pc.Entity();
            e.addComponent("model" /* model */, {
                type: "plane" /* plane */,
                castShadows: false,
                castShadowsLightmap: false,
                receiveShadows: false,
                material: TrampFx._partMaterial,
                batchGroupId: TrampFx._partBatchGroupId
            });
            e.setLocalScale(0, 0, 0);
            this._partEntites.push(e);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._partEntites.forEach((e) => { e.setLocalScale(0, 0, 0); });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    activate(trampoline) {
        let parent = trampoline.node;
        let partSettings = TrampFx._fxMng.fxPartSettings;
        this._partEntites.forEach((e, id) => {
            if (e.parent != parent)
                e.reparent(parent);
            e.setLocalPosition(0, 0, 0.01 + partSettings[id]);
            e.setEulerAngles(0, 0, 0);
            e.setLocalScale(1, 1, 1);
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let partSettings = TrampFx._fxMng.fxPartSettings;
        for (let id = 0; id < TrampFx.PART_CNT; id++) {
            this._partEntites[id].setLocalPosition(0, partSettings[id], 0);
        }
    }
}
/**
 * Pocet casti, ze kterych se efekt sklada
 */
TrampFx.PART_CNT = 5;
/**
 * Jak dlouho trva (v ms) nez cast efektu dosahne sveho cile
 */
TrampFx.PART_LIFESPAN = 1500;
/**
 * Vyska efektu
 */
TrampFx.HEIGHT = 1;


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/RowElement.ts":
/*!************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/RowElement.ts ***!
  \************************************************************/
/*! namespace exports */
/*! export RowElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eRowElementType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eRowElementType": () => /* binding */ eRowElementType,
/* harmony export */   "RowElement": () => /* binding */ RowElement
/* harmony export */ });
var eRowElementType;
(function (eRowElementType) {
    eRowElementType[eRowElementType["obstacleBlock"] = 0] = "obstacleBlock";
    eRowElementType[eRowElementType["trampoline"] = 1] = "trampoline";
    eRowElementType[eRowElementType["speedChange"] = 2] = "speedChange";
    eRowElementType[eRowElementType["bonus"] = 3] = "bonus";
    eRowElementType[eRowElementType["tallColumn"] = 4] = "tallColumn";
    eRowElementType[eRowElementType["roadTile"] = 5] = "roadTile";
    eRowElementType[eRowElementType["rectShadow"] = 6] = "rectShadow";
})(eRowElementType || (eRowElementType = {}));
class RowElement {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(type) {
        this._type = type;
        this._children = [];
        this._keepEnabled = false;
    }
    get type() { return this._type; }
    get node() { return this._node; }
    /**
     * (RO) Index radky v hernim svete, pro kterou je element urcen
     */
    get rowId() { return this._rowId; }
    /**
     * (RO) Lokalni pozice na ose X (levy okraj)
     */
    get x() { return this._x; }
    /**
     * (RO) Lokalni pozice na ose Y (spodni okraj)
     */
    get y() { return this._y; }
    get width() { return this._width; }
    get height() { return this._height; }
    /**
     * (RO) Hloubka elementu
     */
    get depth() { return this._depth; }
    /**
     * (RO) True, pokud je element aktivni
     */
    get active() { return this._active; }
    /**
     * (RO) Rodicovsky element
     */
    get parent() { return this._parent; }
    /**
     * (RO) Dcerinne elementy
     */
    get children() { return this._children; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    init(rowId, parent, data) {
        this._active = true;
        this._rowId = rowId;
        // Nastavit "rodice"
        this._parent = parent;
        if (this._node.parent != parent.node)
            this._node.reparent(parent.node);
        if (!this._keepEnabled)
            this._node.enabled = true;
        parent.addChild(this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._active) {
            if (this._children && this._children.length != 0) {
                this._children.forEach((element) => { element.reset(); });
                this._children.length = 0;
            }
            this._active = false;
            if (!this._keepEnabled)
                this._node.enabled = false;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addChild(child) {
        child._parent = this;
        this._children.push(child);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    removeChild(child) {
        let index = this._children.indexOf(child);
        if (index >= 0) {
            this._children.splice(index, 1);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Test kolize s hracem
     * @param plColSphere BoundingSphere hrace
     */
    //-------------------------------------------------------------------------
    checkPlCollision(plColSphere) {
        return false;
    }
    //-------------------------------------------------------------------------
    /**
     * True, pokud element vyzaduje volani update()
     */
    //-------------------------------------------------------------------------
    reqUpdate() { return false; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() { }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/RowElementManager.ts":
/*!*******************************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/RowElementManager.ts ***!
  \*******************************************************************/
/*! namespace exports */
/*! export RowElementManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RowElementManager": () => /* binding */ RowElementManager
/* harmony export */ });
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Path_PathBlock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Path/PathBlock */ "./src/Gameplay/Game World/Path/PathBlock.ts");
/* harmony import */ var _Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Path/PathBlockManager */ "./src/Gameplay/Game World/Path/PathBlockManager.ts");
/* harmony import */ var _Road_RoadManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Road/RoadManager */ "./src/Gameplay/Game World/Road/RoadManager.ts");
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");
/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../View */ "./src/Gameplay/Game World/View.ts");
/* harmony import */ var _Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Elements/ObstacleBlock */ "./src/Gameplay/Game World/Row Elements/Elements/ObstacleBlock.ts");
/* harmony import */ var _Elements_TRArampoline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Elements/TRArampoline */ "./src/Gameplay/Game World/Row Elements/Elements/TRArampoline.ts");
/* harmony import */ var _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../Utils/Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");
/* harmony import */ var _Elements_Bonus__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Elements/Bonus */ "./src/Gameplay/Game World/Row Elements/Elements/Bonus.ts");
/* harmony import */ var _Elements_SpeedChange__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Elements/SpeedChange */ "./src/Gameplay/Game World/Row Elements/Elements/SpeedChange.ts");











class RowElementManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._view = _View__WEBPACK_IMPORTED_MODULE_5__.View.instance;
        // Efekt pro trampoliny
        this._trampFxMng = new _Elements_TRArampoline__WEBPACK_IMPORTED_MODULE_7__.TrampFxManager();
        // Efekt pro bonusy
        this._bnsPickupFxMng = new _Elements_Bonus__WEBPACK_IMPORTED_MODULE_9__.BonusPickupFxManager();
        // Zpracovani zaznamu v bloku cesty
        this._pathBlockPointer = new _Path_PathBlock__WEBPACK_IMPORTED_MODULE_1__.PathBlockPointer();
        this._pbeProcessors = [];
        this._pbeProcessors[1 /* obstacleBlock */] = this.pbeObstacleBlock;
        this._pbeProcessors[2 /* trampoline */] = this.pbeTrampoline;
        this._pbeProcessors[3 /* bonus */] = this.pbeBonus;
        this._pbeProcessors[4 /* speedChange */] = this.pbeSpeedChange;
        // Seznam aktivnich element (elementu, pro ktere se vola .update())
        this._actElements = new _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_8__.NodeList();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._bnsPickupFxMng.reset();
        // Uvolnit aktivni elementy
        this._actElements.clear();
        // Zpracovani zaznamu v bloku cesty
        this._pathBlockPointer.init(_Path_PathBlockManager__WEBPACK_IMPORTED_MODULE_2__.PathBlockManager.instance.firstBlockNode);
        this._nextRowId = 0;
        this.update();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        // Efekty trampoliny
        this._trampFxMng.update();
        this._bnsPickupFxMng.update();
        // Zpracovat aktivni elementy
        this._actElements.forEach((element, node) => {
            if (element.active) {
                element.update();
            }
            else {
                this._actElements.removeByNode(node);
            }
        });
        // Zpracovat pohyb view
        let viewZ = this._view.viewTopZ;
        let rowZ = _GameWorld__WEBPACK_IMPORTED_MODULE_0__.GameWorld.START_Z - this._nextRowId * _Road_RoadTile__WEBPACK_IMPORTED_MODULE_4__.RoadTile.DEPTH;
        while (viewZ < rowZ) {
            let roadTile = _Road_RoadManager__WEBPACK_IMPORTED_MODULE_3__.RoadManager.instance.getRowTile(this._nextRowId);
            while (this._pathBlockPointer.entryWorldRowId == this._nextRowId) {
                let processor = this._pbeProcessors[this._pathBlockPointer.entry.type];
                if (processor) {
                    processor.call(this, this._nextRowId, roadTile, this._pathBlockPointer.entry);
                }
                this._pathBlockPointer.next();
            }
            this._nextRowId++;
            rowZ -= _Road_RoadTile__WEBPACK_IMPORTED_MODULE_4__.RoadTile.DEPTH;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    pbeObstacleBlock(rowId, roadTile, pbe) {
        let data = pbe.data;
        if (data instanceof _Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_6__.ObstacleBlockContainerData) {
            let container = _Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_6__.ObstacleBlockContainer.getInstance();
            container.init(rowId, roadTile, data);
            if (container.reqUpdate())
                this._actElements.add(container);
            data.children.forEach((blockData) => {
                let block = _Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_6__.ObstacleBlock.getInstance();
                block.init(rowId, container, blockData);
                if (block.reqUpdate())
                    this._actElements.add(block);
            });
        }
        else {
            let block = _Elements_ObstacleBlock__WEBPACK_IMPORTED_MODULE_6__.ObstacleBlock.getInstance();
            block.init(rowId, roadTile, data);
            if (block.reqUpdate())
                this._actElements.add(block);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    pbeTrampoline(rowId, roadTile, pbe) {
        let tramp = _Elements_TRArampoline__WEBPACK_IMPORTED_MODULE_7__.Trampoline.getInstance();
        tramp.init(rowId, roadTile, pbe);
        this._actElements.add(tramp);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    pbeBonus(rowId, roadTile, pbe) {
        let bonus = _Elements_Bonus__WEBPACK_IMPORTED_MODULE_9__.Bonus.getInstance(pbe.bonusType);
        bonus.init(rowId, roadTile, pbe);
        this._actElements.add(bonus);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    pbeSpeedChange(rowId, roadTile, pbe) {
        _Elements_SpeedChange__WEBPACK_IMPORTED_MODULE_10__.SpeedChange.getInstance(pbe.speedup).init(rowId, roadTile, pbe);
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/Row Elements/Value.ts":
/*!*******************************************************!*\
  !*** ./src/Gameplay/Game World/Row Elements/Value.ts ***!
  \*******************************************************/
/*! namespace exports */
/*! export AnimValue1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AnimValue2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AnimValue3 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StaticValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Value [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Value": () => /* binding */ Value,
/* harmony export */   "StaticValue": () => /* binding */ StaticValue,
/* harmony export */   "AnimValue1": () => /* binding */ AnimValue1,
/* harmony export */   "AnimValue2": () => /* binding */ AnimValue2,
/* harmony export */   "AnimValue3": () => /* binding */ AnimValue3
/* harmony export */ });
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");




class Value {
    //-------------------------------------------------------------------------
    /**
     * Napojeni hodnoty na RowElement. Vraci true, pokud je hodnotu potreba aktualizovat v herni smycce.
     * @param element
     */
    //-------------------------------------------------------------------------
    connectElement(element) { return false; }
}
/**
 * Staticka hodnota
 */
class StaticValue extends Value {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(value) {
        super();
        this._value = value;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getValue() { return this._value; }
}
/**
 * Animovana hodnota. Animace zacne a skonci v urcite vzdalenosti od hrace
 */
class AnimValue1 extends Value {
    //-------------------------------------------------------------------------
    /**
     * Animovana hodnota. Animace zacne a skonci v urcite vzdalenosti od hrace
     * @param val1 Pocatecni hodnota
     * @param val2 Cilova hodnota
     * @param animStartDis Vzdalenost RowElementu od hrace, pri ktere bude zahajena animace hodnoty
     * @param animEndDis Vzdalenost RowElementu od hrace, pri ktere bude animace hodnoty dokoncena
     * @param ease Ease funkce animace
     */
    //-------------------------------------------------------------------------
    constructor(val1, val2, animStartDis, animEndDis, ease) {
        super();
        this._val1 = val1;
        this._val2 = val2;
        this._animStartDis = animStartDis;
        this._animEndDis = animEndDis;
        this._ease = ease;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getValue() {
        let delta = _Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.instance.pos.z - this._elementWorldZ;
        if (delta >= this._animStartDis)
            return this._val1;
        if (delta <= this._animEndDis)
            return this._val2;
        return this._val1 + (this._val2 - this._val1) * this._ease((delta - this._animStartDis) / (this._animEndDis - this._animStartDis));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    connectElement(element) {
        // Ulozit pocatecni pozici elementu na ose Z
        this._elementWorldZ = _GameWorld__WEBPACK_IMPORTED_MODULE_1__.GameWorld.START_Z - element.rowId * _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__.RoadTile.DEPTH - _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__.RoadTile.DEPTH / 2;
        return true;
    }
}
/**
 * Animovana hodnota pohybujici se ve smycce mezi val1 a val2 s tim, ze v urcite vzdalenosti od hrace bude mit animace zadany progress a dosahne ho v zadanem smeru (bud ve smeru od val2 nebo ve smeru od val1).
 */
class AnimValue2 extends Value {
    //-------------------------------------------------------------------------
    /**
     * Animovana hodnota pohybujici se ve smycce mezi val1 a val2 s tim, ze v urcite vzdalenosti od hrace bude mit animace zadany progress a dosahne ho v zadanem smeru (bud ve smeru od val2 nebo ve smeru od val1).
     * @param val1 1. krajni hodnota
     * @param val2 2. krajni hodnota
     * @param valChangePerUnit Zmena hodnoty za 1m vzdalenosti od hrace
     * @param ease Ease funkce pro vypocet hodnoty
     * @param targetProgress Progress animace pri dosazeni pozice hrace (pokud < 0, tak se ciloveho progressu dosahne z val2, pokud > 0, tak z val1)
     */
    //-------------------------------------------------------------------------
    constructor(val1, val2, valChangePerUnit, ease, targetProgress) {
        super();
        this._val1 = val1;
        this._val2 = val2;
        this._changePerUnit = valChangePerUnit;
        this._ease = ease;
        this._targetProgress = targetProgress;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getValue() {
        // O jaky progress dojde ke zmene za zbyvajici vzdalenost od hrace
        let delta = _Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.instance.pos.z - this._elementWorldZ;
        let progress;
        if (delta > 0) {
            progress = ((delta * this._changePerUnit) / Math.abs(this._val2 - this._val1)) % 2;
            if (this._targetProgress > 0) {
                if ((progress = this._targetProgress - progress) < 0) {
                    progress = 2 + (progress % 2);
                }
            }
            else {
                if ((progress = -this._targetProgress + progress) > 2)
                    progress %= 2;
            }
        }
        else {
            progress = this._targetProgress; //((delta * this._changePerUnit) / Math.abs(this._val2 - this._val1)) % 2;
        }
        if (progress < 1) {
            return this._val1 + (this._val2 - this._val1) * this._ease(progress);
        }
        else {
            return this._val2 - (this._val2 - this._val1) * this._ease((progress - 1));
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    connectElement(element) {
        // Ulozit pocatecni pozici elementu na ose Z
        this._elementWorldZ = _GameWorld__WEBPACK_IMPORTED_MODULE_1__.GameWorld.START_Z - element.rowId * _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__.RoadTile.DEPTH - _Road_RoadTile__WEBPACK_IMPORTED_MODULE_3__.RoadTile.DEPTH / 2;
        return true;
    }
}
/**
 * Hodnota animovana casem od napojeni na element
 */
class AnimValue3 extends Value {
    //-------------------------------------------------------------------------
    /**
     * Hodnota animovana casem od napojeni na element
     * @param val1 Krajni hodnota 1
     * @param val2 Krajni hodnota 2
     * @param speed Rychlost zmeny hodnoty za vterinu
     * @param iniProgress Pocatecni progress animace (0 az 2 (0 az 1 je vysledna hodnota v rozsahu val1 az val2) a (1 az 2 je vysledna hodnota v rozsahu val2 az val1))
     * @param loop True, pokud se ma animovat ve smycce
     * @param delay Prodleva v ms pres zahajenim animace
     * @param ease Ease funkce pro animaci
     */
    //-------------------------------------------------------------------------
    constructor(val1, val2, speed, iniProgress = 0, loop = true, delay = 0, ease = pc.Linear) {
        super();
        this._val1 = val1;
        this._val2 = val2;
        this._cycleLen = (Math.abs(val2 - val1) / speed) * 1000;
        this._iniProgress = iniProgress;
        this._loop = loop;
        this._delay = delay;
        this._ease = ease;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getValue() {
        let progress = this._iniProgress;
        let time = _Gameplay__WEBPACK_IMPORTED_MODULE_0__.TIMER.time - this._iniTime;
        if ((time -= this._delay) > 0) {
            progress += (time % (this._cycleLen * 2)) / this._cycleLen;
            if (!this._loop) {
                if (progress > 1)
                    progress = 1;
            }
            else {
                progress %= 2;
            }
        }
        if (progress < 1) {
            return this._val1 + (this._val2 - this._val1) * this._ease(progress);
        }
        else {
            return this._val2 - (this._val2 - this._val1) * this._ease((progress - 1));
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    connectElement(element) {
        this._iniTime = _Gameplay__WEBPACK_IMPORTED_MODULE_0__.TIMER.time;
        return true;
    }
}


/***/ }),

/***/ "./src/Gameplay/Game World/View.ts":
/*!*****************************************!*\
  !*** ./src/Gameplay/Game World/View.ts ***!
  \*****************************************/
/*! namespace exports */
/*! export View [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "View": () => /* binding */ View
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _GameWorld__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Player_Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Utils_ValueShaker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Utils/ValueShaker */ "./src/Utils/ValueShaker.ts");
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Utils/Collections/WrapperArray */ "./src/Utils/Collections/WrapperArray.ts");
/* harmony import */ var _Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Utils/ScaleManager */ "./src/Utils/ScaleManager.ts");
/* harmony import */ var _Road_RoadTile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Road/RoadTile */ "./src/Gameplay/Game World/Road/RoadTile.ts");









class View {
    //#endregion
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        let visual = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings;
        // Staticky pristup
        View._instance = this;
        // Dynamicke svetlo
        let app = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app;
        let light = new pc.Entity("light");
        light.addComponent("light" /* light */, {
            type: pc.LIGHTTYPE_DIRECTIONAL,
            color: new pc.Color(1, 1, 1),
            intensity: 1,
            isStatic: true,
            bake: false,
            affectDynamic: true,
            affectLightmapped: false,
            castShadows: false,
        });
        light.setEulerAngles(25, 0, 5);
        app.root.addChild(light);
        // Ambient svetlo
        app.scene.ambientLight.set(0.6, 0.6, 0.6);
        app.scene.gammaCorrection = pc.GAMMA_SRGBFAST;
        // Mlha
        app.scene.fog = pc.FOG_LINEAR;
        app.scene.fogStart = View.CAM_FAR_CLIP - 6;
        app.scene.fogEnd = View.CAM_FAR_CLIP;
        app.scene.fogColor.lerp(visual.bgBotColor, visual.bgTopColor, 0.25);
        // Kamera
        this._camEntity = new pc.Entity("camera");
        this._camEntity.addComponent("camera" /* camera */, {
            nearClip: 0.1,
            farClip: View.CAM_FAR_CLIP + 1,
            clearColor: visual.bgTopColor,
            frustumCulling: false
        });
        this._camEntity.setEulerAngles(View.CAM_ANGLE, 0, 0);
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._camEntity);
        this._camPos = new pc.Vec3();
        // Klepani s kamerou
        this._freeShakers = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_5__.Pool(undefined, 1, true, () => { return new _Utils_ValueShaker__WEBPACK_IMPORTED_MODULE_4__.ValueShaker(150, 6, 0, 0.75, 0 /* around */); });
        this._actShakers = new _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_6__.WrappedArray();
        // Castice na obloze
        /*this._skyPartEmitter = new ParticlesEmitter(Game.app.root);
        this._skyPartEmitter.init({
            emitOffset: new pc.Vec3(0, 0, -35),
            emitTimer: TIMER,
            endOffsetZ: -8
        }, {
            partColor: new pc.Color(1, 1, 1),
            partMinAngle: 0,
            partMaxAngle: 180,
            partSpacingVolitionRatio: 1.0,
            radius: 5,
            partMinCnt: 5,
            partMaxCnt: 10,
            partMinLen: 0.2,
            partMaxLen: 4,
            partWidth: 0.05,
            entityMaxDepth: 8,
            rotMinSpeed: 0,
            rotMaxSpeed: 0,
            moveMinSpeed: 1,
            moveMaxSpeed: 2,
            rndRotation: false
        });

        this._skyPartEmitPos = new pc.Vec3();*/
        // Zachytavat zmenu rozliseni
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.on(_Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_7__.ScaleManager.EVENT_RESIZE, this.handleGameResize, this);
        this.handleGameResize(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.width, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.height);
    }
    /**
     * (RO) Staticky pristup
     */
    static get instance() { return View._instance; }
    /**
     * (RO) Kamera
     */
    get camera() { return this._camEntity; }
    /**
     * Pozice kamery v hernim svete
     */
    get cameraPos() { return this._camPos; }
    /**
     * Vzdalenost kamery od hrace
     */
    get cameraPlDistance() { return this._camPlDis; }
    set cameraPlDistance(dis) { this._camPlDis = dis; this.updateCameraPos(); }
    /**
     * (RO) Zmena viewZ za posledni snimek
     */
    get viewZChange() { return this._viewZChange; }
    /**
     * (RO) Pozice view na ose Z (okraj bliz)
     */
    get viewBotZ() { return this._viewZ; }
    /**
     * (RO) Pozice view na ose Z (nejvzdalenejsi okraj)
     */
    get viewTopZ() { return this._viewZ - View.CAM_FAR_CLIP; }
    //-------------------------------------------------------------------------
    /**
     * Reset view podle pozice hrace
     */
    //-------------------------------------------------------------------------
    reset() {
        // Vibrace
        this._actShakers.forEach((shaker) => {
            shaker.reset();
            this._freeShakers.returnItem(shaker);
        });
        this._actShakers.clear(true);
        this._curShakeOffset = 0;
        // Pozice kamery        
        this._camPlDis = View.CAM_DEF_PL_DIS;
        this.updateCameraPos();
        // Pozice view
        this._viewZ = this._camPos.z + View.VIEW_CAM_OFFSET_Z;
        this._viewZChange = 0;
        // Castice na obloze
        //this._skyPartEmitter.reset();
        //this._skyPartEmitPos.copy(this._camPos);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    startShake() {
        let shaker = this._freeShakers.getItem();
        shaker.start(_Gameplay__WEBPACK_IMPORTED_MODULE_3__.TIMER.time);
        this._actShakers.add(shaker);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let i;
        // Vibrace
        this._curShakeOffset = 0;
        if (!this._actShakers.empty) {
            this._actShakers.forEach((shaker) => {
                shaker.update(_Gameplay__WEBPACK_IMPORTED_MODULE_3__.TIMER.time);
                this._curShakeOffset += shaker.value;
            });
            if (!this._actShakers.first.active)
                this._freeShakers.returnItem(this._actShakers.remove(false));
        }
        // Aktualizovat pozici kamery
        this.updateCameraPos();
        // Aktualizovat pozici view
        i = this._camPos.z + View.VIEW_CAM_OFFSET_Z;
        this._viewZChange = i - this._viewZ;
        this._viewZ = i;
        // Castice na obloze
        /*while (this._skyPartEmitPos.z - this._camPos.z >= View.SKY_PARTICLES_EMIT_SPACING) {
            this._skyPartEmitPos.z -= View.SKY_PARTICLES_EMIT_SPACING;
            this._skyPartEmitter.emit(this._skyPartEmitPos);
        }

        this._skyPartEmitter.update(this._camPos);*/
    }
    //-------------------------------------------------------------------------
    /**
     * Aktualizuje umisteni kamery podle aktualni pozice hrace
     */
    //-------------------------------------------------------------------------
    updateCameraPos() {
        let plPos = _Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.instance.cameraOrigin;
        // Pozice kamery
        this._camPos.set(_GameWorld__WEBPACK_IMPORTED_MODULE_1__.GameWorld.CENTER_X + (plPos.x - _GameWorld__WEBPACK_IMPORTED_MODULE_1__.GameWorld.CENTER_X) / 2 + this._curShakeOffset, plPos.y + Math.sin(View.CAM_PL_ANGLE) * this._camPlDis, plPos.z + Math.cos(View.CAM_PL_ANGLE) * this._camPlDis);
        this._camEntity.setPosition(this._camPos);
        // Naklon kamery
        let tilt = (pc.SineIn((Math.abs(plPos.x) + _Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.RADIUS) / (_Road_RoadTile__WEBPACK_IMPORTED_MODULE_8__.RoadTile.MAX_WIDTH / 2)) * View.CAM_MAX_TILT);
        if (plPos.x < 0)
            tilt *= -1;
        this._camEntity.setEulerAngles(View.CAM_ANGLE, 0, tilt);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleGameResize(w, h) {
        let scale = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale;
        let fov = View.MIN_H_CAMERA_FOV + ((h - scale.minHeight) / (scale.maxHeight - scale.minHeight)) * (View.MAX_H_CAMERA_FOV - View.MIN_H_CAMERA_FOV);
        this._camEntity.camera.fov = fov;
    }
}
//#region Kamera
/**
 * Far clip kamery
 */
View.CAM_FAR_CLIP = 40;
/**
 * Vychozi vzdalenost kamery od hrace
 */
View.CAM_DEF_PL_DIS = 5;
/**
 * Uhel, ktery svira kamera s hracem
 */
View.CAM_PL_ANGLE = 25 * pc.math.DEG_TO_RAD;
/**
 * Nakloneni kamery vuci ceste
 */
View.CAM_ANGLE = -10;
View.CAM_MAX_TILT = 20;
//#endregion
//#region View
/**
 * Offset view od pozice kamery na ose Z
 */
View.VIEW_CAM_OFFSET_Z = 0;
//#endregion
//#region Particly na obloze
/**
 * Rozestup vyvolavani casti (vzdalenost na ose Z)
 */
View.SKY_PARTICLES_EMIT_SPACING = 1;
View.MIN_H_CAMERA_FOV = 75;
View.MAX_H_CAMERA_FOV = 95;


/***/ }),

/***/ "./src/Gameplay/Game World/VisualSettings.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/Game World/VisualSettings.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export VISUAL_SETTINGS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export VSRoadDecoBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export VSRoadDecoColumns [provided] [no usage info] [missing usage info prevents renaming] */
/*! export VSRoadDecoObjects [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VSRoadDecoBase": () => /* binding */ VSRoadDecoBase,
/* harmony export */   "VSRoadDecoColumns": () => /* binding */ VSRoadDecoColumns,
/* harmony export */   "VSRoadDecoObjects": () => /* binding */ VSRoadDecoObjects,
/* harmony export */   "VISUAL_SETTINGS": () => /* binding */ VISUAL_SETTINGS
/* harmony export */ });
class VSRoadDecoBase {
    constructor(decoType, minSpacing, maxSpacing) {
        this.decoType = decoType;
        this.minSpacing = minSpacing;
        this.maxSpacing = maxSpacing;
    }
}
/**
 * Nastaveni pro sloupy podel trati
 */
class VSRoadDecoColumns extends VSRoadDecoBase {
    constructor(decoType, minSpacing, maxSpacing, matId, minSize, maxSize, maxInnerOffsetX, maxOuterOffsetX) {
        super(decoType, minSpacing, maxSpacing);
        this.materialId = matId;
        this.minSize = minSize;
        this.maxSize = maxSize;
        this.maxInnerOffsetX = maxInnerOffsetX;
        this.maxOuterOffsetX = maxOuterOffsetX;
    }
}
class VSRoadDecoObjects extends VSRoadDecoBase {
}
const VISUAL_SETTINGS = [
    {
        id: 0,
        blockColors: [new pc.Color().fromString("#F457B9"), new pc.Color().fromString("#4B9FFF"), new pc.Color().fromString("#FFDB3F")],
        blockBlendColor: new pc.Color(0.5, 0.5, 0.5),
        bgTopColor: new pc.Color().fromString("#ABECFF"),
        bgBotColor: new pc.Color().fromString("#FFCEC7"),
        shadowColor: new pc.Color(0.5, 0.5, 0.5),
        columns: [
            new VSRoadDecoColumns(0 /* column1 */, [5, 1], 10, 0, new pc.Vec3(3, 30, 1), new pc.Vec3(3, 30, 1), 0, 0),
            new VSRoadDecoColumns(1 /* column2 */, [1, 2], 6, 1, new pc.Vec3(3, 7, 1), new pc.Vec3(3, 11, 1), 2, 0)
        ],
        columnsMaterials: [
            { albedoChunk: "float blendRatio = smoothstep(10.0, 20.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) - (vec3(0.2) * blendRatio);\n", opacityChunk: "dAlpha = 1.0 - smoothstep(10.0, 15.0, vPositionW.y);\n", color: new pc.Color(1, 1, 1) },
            { albedoChunk: "float blendRatio = 1.0 - smoothstep(0.4, 8.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) + (vec3(1.0) * blendRatio);\n", color: new pc.Color().fromString("#FFD0F9") }
        ]
    },
    {
        id: 1,
        ballColor: new pc.Color(0, 0, 0),
        blockColors: [new pc.Color().fromString("#F4392E"), new pc.Color().fromString("#2A3BFF"), new pc.Color().fromString("#FFBD3F")],
        blockBlendColor: new pc.Color(0.5, 0.5, 0.5),
        bgTopColor: new pc.Color().fromString("#CDCDCD"),
        bgBotColor: new pc.Color().fromString("#FFFDFD"),
        shadowColor: new pc.Color(0.5, 0.5, 0.5),
        columns: [
            new VSRoadDecoColumns(0 /* column1 */, [5, 1], 10, 0, new pc.Vec3(3, 30, 1), new pc.Vec3(3, 30, 1), 0, 0),
            new VSRoadDecoColumns(1 /* column2 */, [1, 2], 6, 1, new pc.Vec3(3, 7, 1), new pc.Vec3(3, 11, 1), 2, 0)
        ],
        columnsMaterials: [
            { albedoChunk: "float blendRatio = smoothstep(10.0, 20.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) - (vec3(0.2) * blendRatio);\n", opacityChunk: "dAlpha = 1.0 - smoothstep(10.0, 15.0, vPositionW.y);\n", color: new pc.Color(1, 1, 1) },
            { color: new pc.Color(1, 1, 1) }
        ]
    },
    {
        id: 2,
        blockColors: [new pc.Color().fromString("#EF7373"), new pc.Color().fromString("#783F45"), new pc.Color().fromString("#18243C")],
        blockBlendColor: new pc.Color().fromString("#f4ad9d"),
        bgTopColor: new pc.Color().fromString("#8B79A6"),
        bgBotColor: new pc.Color().fromString("#E5B8B7"),
        shadowColor: new pc.Color(0.5, 0.5, 0.5),
        columns: [
            new VSRoadDecoColumns(0 /* column1 */, [5, 1], 10, 0, new pc.Vec3(3, 30, 1), new pc.Vec3(3, 30, 1), 0, 0),
            new VSRoadDecoColumns(1 /* column2 */, [1, 2], 6, 1, new pc.Vec3(3, 7, 1), new pc.Vec3(3, 11, 1), 2, 0)
        ],
        columnsMaterials: [
            { albedoChunk: "float blendRatio = smoothstep(10.0, 20.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) - (vec3(0.2) * blendRatio);\n", opacityChunk: "dAlpha = 1.0 - smoothstep(10.0, 15.0, vPositionW.y);\n", color: new pc.Color().fromString("#F7F0FF") },
            { color: new pc.Color().fromString("#E9FFF8") }
        ]
    },
    {
        id: 3,
        blockColors: [new pc.Color().fromString("#B5B4B5"), new pc.Color().fromString("#8E8D8E"), new pc.Color().fromString("#545455")],
        blockBlendColor: new pc.Color().fromString("#a0a0a0"),
        bgTopColor: new pc.Color().fromString("#BCAFE2"),
        bgBotColor: new pc.Color().fromString("#E2C9D3"),
        shadowColor: new pc.Color(0.5, 0.5, 0.5),
        columns: [
            new VSRoadDecoColumns(0 /* column1 */, [5, 1], 10, 0, new pc.Vec3(3, 30, 1), new pc.Vec3(3, 30, 1), 0, 0),
            new VSRoadDecoColumns(1 /* column2 */, [1, 2], 6, 1, new pc.Vec3(3, 7, 1), new pc.Vec3(3, 11, 1), 2, 0)
        ],
        columnsMaterials: [
            { albedoChunk: "float blendRatio = smoothstep(10.0, 20.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) - (vec3(0.2) * blendRatio);\n", opacityChunk: "dAlpha = 1.0 - smoothstep(10.0, 15.0, vPositionW.y);\n", color: new pc.Color().fromString("#F7F0FF") },
            { color: new pc.Color().fromString("#E9FFF8") }
        ]
    },
    {
        id: 4,
        blockColors: [new pc.Color().fromString("#A5F2D6"), new pc.Color().fromString("#4D94A0"), new pc.Color().fromString("#5BCEBD")],
        blockBlendColor: new pc.Color().fromString("#a0a0a0"),
        bgTopColor: new pc.Color().fromString("#B6FFF3"),
        bgBotColor: new pc.Color().fromString("#FFFFE9"),
        shadowColor: new pc.Color(0.5, 0.5, 0.5),
        columns: [
            new VSRoadDecoColumns(0 /* column1 */, [5, 1], 10, 0, new pc.Vec3(3, 30, 1), new pc.Vec3(3, 30, 1), 0, 0),
            new VSRoadDecoColumns(1 /* column2 */, [1, 2], 6, 1, new pc.Vec3(3, 7, 1), new pc.Vec3(3, 11, 1), 2, 0)
        ],
        columnsMaterials: [
            { albedoChunk: "float blendRatio = smoothstep(10.0, 20.0, vPositionW.y);\n" + "dAlbedo = (vec3(1.0) * material_diffuse.rgb) - (vec3(0.2) * blendRatio);\n", opacityChunk: "dAlpha = 1.0 - smoothstep(10.0, 15.0, vPositionW.y);\n", color: new pc.Color().fromString("#FFE6FA") },
            { color: new pc.Color().fromString("#FFB6D4") }
        ]
    },
];


/***/ }),

/***/ "./src/Gameplay/Gameplay.ts":
/*!**********************************!*\
  !*** ./src/Gameplay/Gameplay.ts ***!
  \**********************************/
/*! namespace exports */
/*! export Gameplay [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SharedMaterial [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TIME [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TIMER [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eBatchGroup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eGameplayState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eSharedMaterial [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TIME": () => /* binding */ TIME,
/* harmony export */   "TIMER": () => /* binding */ TIMER,
/* harmony export */   "eGameplayState": () => /* binding */ eGameplayState,
/* harmony export */   "eBatchGroup": () => /* binding */ eBatchGroup,
/* harmony export */   "eSharedMaterial": () => /* binding */ eSharedMaterial,
/* harmony export */   "SharedMaterial": () => /* binding */ SharedMaterial,
/* harmony export */   "Gameplay": () => /* binding */ Gameplay
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Time_TimeManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils/Time/TimeManager */ "./src/Utils/Time/TimeManager.ts");
/* harmony import */ var _Background__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Background */ "./src/Gameplay/Background.ts");
/* harmony import */ var _Game_World_GameWorld__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Game World/GameWorld */ "./src/Gameplay/Game World/GameWorld.ts");
/* harmony import */ var _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Game World/Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _HUD_HUD__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HUD/HUD */ "./src/Gameplay/HUD/HUD.ts");
/* harmony import */ var _HUD_SlideMessage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HUD/SlideMessage */ "./src/Gameplay/HUD/SlideMessage.ts");
/* harmony import */ var _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Publisher API/Gamee/GameeWrapper */ "./src/Publisher API/Gamee/GameeWrapper.ts");
/* harmony import */ var _Utils_Score__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Utils/Score */ "./src/Utils/Score.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _GameplayTimer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./GameplayTimer */ "./src/Gameplay/GameplayTimer.ts");
/* harmony import */ var _Accounting__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Accounting */ "./src/Gameplay/Accounting.ts");












const TIME = new _Utils_Time_TimeManager__WEBPACK_IMPORTED_MODULE_1__.TimeManager();
const TIMER = TIME.createTimer();
var eGameplayState;
(function (eGameplayState) {
    eGameplayState[eGameplayState["game"] = 0] = "game";
    eGameplayState[eGameplayState["gameOverMsg"] = 1] = "gameOverMsg";
    eGameplayState[eGameplayState["gameOver"] = 2] = "gameOver";
    eGameplayState[eGameplayState["waitForStart"] = 3] = "waitForStart";
})(eGameplayState || (eGameplayState = {}));
var eBatchGroup;
(function (eBatchGroup) {
    eBatchGroup[eBatchGroup["circleShadows"] = 0] = "circleShadows";
    eBatchGroup[eBatchGroup["rectShadows"] = 1] = "rectShadows";
    eBatchGroup[eBatchGroup["vertexColor"] = 2] = "vertexColor";
    eBatchGroup[eBatchGroup["obsBlocks"] = 3] = "obsBlocks";
    eBatchGroup[eBatchGroup["walls"] = 4] = "walls";
    eBatchGroup[eBatchGroup["decorationObjs"] = 5] = "decorationObjs";
    eBatchGroup[eBatchGroup["tallCols"] = 6] = "tallCols";
    eBatchGroup[eBatchGroup["scorePopups"] = 7] = "scorePopups";
    eBatchGroup[eBatchGroup["results"] = 8] = "results";
})(eBatchGroup || (eBatchGroup = {}));
var eSharedMaterial;
(function (eSharedMaterial) {
    eSharedMaterial[eSharedMaterial["rectShadow"] = 0] = "rectShadow";
    eSharedMaterial[eSharedMaterial["circleShadow"] = 1] = "circleShadow";
})(eSharedMaterial || (eSharedMaterial = {}));
class SharedMaterial {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(material, batchGroupId) {
        this._material = material;
        this._batchGroupId = batchGroupId;
    }
    get material() { return this._material; }
    get batchGroupId() { return this._batchGroupId; }
}
class Gameplay {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        Gameplay._instance = this;
        // Spravce udalosti
        this._events = new pc.EventHandler();
        // Ucetnictvi hry
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */)
            this._accounting = new _Accounting__WEBPACK_IMPORTED_MODULE_11__.Accounting();
        // Batchgroups      
        let batcher = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.batcher;
        let layers = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.scene.layers;
        Gameplay._batchGroupId = [];
        Gameplay.BATCH_GROUPS.forEach((bg) => {
            Gameplay._batchGroupId.push(batcher.addGroup(bg.name, true, bg.maxAABBSize != undefined ? bg.maxAABBSize : 100, undefined, [layers.getLayerByName(bg.layerName).id]).id);
        });
        /*Game.app.on("batch:created" + Gameplay._batchGroupId[eBatchGroup.vertexColor], (batch: pc.Batch): void => {
            console.log("batch: " + batch.batchGroupId);
        });*/
        // Shared materialy
        this.createSharedMaterials();
        // Casovy limit
        this._timer = new _GameplayTimer__WEBPACK_IMPORTED_MODULE_10__.GameplayTimer(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.settings.timeLimit);
        this._events.on(_GameplayTimer__WEBPACK_IMPORTED_MODULE_10__.GameplayTimer.EVENT_TIME_OUT, this.handleTimeOut, this);
        this._bg = new _Background__WEBPACK_IMPORTED_MODULE_2__.Background();
        this._hud = new _HUD_HUD__WEBPACK_IMPORTED_MODULE_5__.HUD();
        this._world = new _Game_World_GameWorld__WEBPACK_IMPORTED_MODULE_3__.GameWorld();
        // Zachytavat zahajeni a ukonceni pohybu hrace
        this._events.on(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.EVENT_START, this.handlePlayerStart, this);
        // Zachytavat kolizi hrace s prekazkou
        this._events.on(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.EVENT_CRASH, this.handlePlCrash, this);
        this.reset();
        // GAMEE
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 0 /* GAMEE */ || _Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */) {
            this._state = 3 /* waitForStart */;
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.EVENTS.on("start" /* start */, () => {
                if (this._state != 3 /* waitForStart */) {
                    this.reset();
                }
                else {
                    this._state = 0 /* game */;
                }
            }, this);
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.EVENTS.on("resume" /* resume */, () => {
                if (this._state == 0 /* game */) {
                    this._pauseCnt++;
                    if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.settings.freePauseCnt >= 0 && this._pauseCnt > _Game__WEBPACK_IMPORTED_MODULE_0__.Game.settings.freePauseCnt) {
                        // Penalizace za pauzu                    
                        let score = _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.instance.results.score;
                        if (score.value > 0) {
                            let penalization = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.settings.pausePenalization;
                            let compensation = 0;
                            if (penalization > score.value)
                                compensation = penalization - score.value;
                            this._accounting.addPausePenalty(compensation);
                            score.value -= penalization;
                        }
                    }
                }
            }, this);
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.EVENTS.on("submit" /* submit */, () => {
                if (this._state != 2 /* gameOver */) {
                    _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.stop();
                    this._timer.stop();
                    this._isUserEnded = true;
                    this._state = 2 /* gameOver */;
                    this.showArc8Results();
                }
            }, this);
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.EVENTS.on("useExtraLife" /* useExtraLife */, () => {
                this._timer.start();
                _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.instance.applyGameeExtraLife();
                this._hud.setState(1 /* tutorial */);
                this._state = 0 /* game */;
            }, this);
            // Zachytavat zmenu skore
            this._events.on(_Utils_Score__WEBPACK_IMPORTED_MODULE_8__.Score.EVENT_SCORE_CHANGE, (score, value) => { this.updateGameeScore(value); });
            // Cekat na spusteni od GAMEE
            this._state = 3 /* waitForStart */;
        }
    }
    static get instance() { return Gameplay._instance; }
    /**
     * (RO) Spravce udalosti
     */
    get events() { return this._events; }
    /**
     * (RO) Aktualni stav
     */
    get state() { return this._state; }
    /**
     * (RO) Ucetnictvi hry
     */
    get accounting() { return this._accounting; }
    /**
     * (RO) Cas posledni aktualizace skore (ziskany z TIMER.time)
     */
    get scoreUpdateTime() { return this._scoreUpdateTime; }
    /**
     * (RO) True, pokud hrac ukoncil hru predcasne
     */
    get isUserEnded() { return this._isUserEnded; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static getBatchGroupId(id) {
        return Gameplay._batchGroupId[id];
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static getSharedMaterial(id) {
        return Gameplay._sharedMats[id];
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        TIMER.start();
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.stop();
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions)
            _Game__WEBPACK_IMPORTED_MODULE_0__.Game.missions.resetMissionProgress();
        this._scoreUpdateTime = -1;
        this._timer.reset();
        this._world.reset();
        this._bg.reset();
        this._hud.setState(1 /* tutorial */);
        if (this._accounting)
            this._accounting.reset();
        this._pauseCnt = 0;
        this._isUserEnded = false;
        this._state = 0 /* game */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update(deltaS) {
        if (this._state == 3 /* waitForStart */)
            return;
        TIME.update(deltaS);
        this._hud.update();
        if (this._state == 2 /* gameOver */)
            return;
        this._timer.update();
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */ && this._scoreUpdateTime >= 0 && this._scoreUpdateTime + 1000 < TIMER.time)
            this.updateGameeScore(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.instance.results.score.value);
        if (this._state == 1 /* gameOverMsg */) {
            if (!_HUD_SlideMessage__WEBPACK_IMPORTED_MODULE_6__.SlideMessageManager.instance.active) {
                if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */) {
                    this.showArc8Results();
                }
                else {
                    _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.gameOver();
                }
                this._state = 2 /* gameOver */;
            }
            return;
        }
        this._world.update();
        this._bg.update();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    showArc8Results() {
        // Zobrazit vysledky
        _HUD_HUD__WEBPACK_IMPORTED_MODULE_5__.HUD.instance.setState(2 /* results */);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    updateGameeScore(score) {
        if (!this._accounting || this._accounting.ready) {
            if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 0 /* GAMEE */) {
                _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.updateScore(score);
            }
            else {
                let time = Math.round(this._timer.elapsedTime);
                _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.updateScore(score, time, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.calculateHash(score + ":" + time + _Game__WEBPACK_IMPORTED_MODULE_0__.Game.UPDATE_SCORE_PHRASE));
                this._scoreUpdateTime = TIMER.time;
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    createSharedMaterials() {
        let shadowColor = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.visualSettings.shadowColor;
        Gameplay._sharedMats = [];
        // Material pro obdelnikove stiny
        let mat = new pc.StandardMaterial();
        mat.diffuse.set(0, 0, 0);
        mat.emissive.copy(shadowColor);
        mat.useLighting = false;
        mat.update();
        Gameplay._sharedMats.push(new SharedMaterial(mat, Gameplay._batchGroupId[1 /* rectShadows */]));
        // Material s kruhovym stinem
        const circleShadowOpacityChunk = "void getOpacity() {\n" +
            "dAlpha = (1.0 - smoothstep(0.3, 0.5, length($UV.xy - 0.5)));\n" +
            "}";
        mat = new pc.StandardMaterial();
        mat.diffuse.set(0, 0, 0);
        mat.emissive.copy(shadowColor);
        mat.blendType = pc.BLEND_NORMAL;
        mat.depthWrite = false;
        mat.useLighting = false;
        mat.useGammaTonemap = false;
        mat.opacity = 0.5;
        mat.opacityMap = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture; // Musim nastavit texturu, aby se predavalo UV do shader chunku
        mat.chunks.opacityConstPS = circleShadowOpacityChunk;
        mat.update();
        Gameplay._sharedMats.push(new SharedMaterial(mat, Gameplay._batchGroupId[0 /* circleShadows */]));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handlePlayerStart() {
        this._timer.start();
        this._hud.setState(0 /* gameplay */);
        this._scoreUpdateTime = TIMER.time;
        if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 0 /* GAMEE */ || _Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */)
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_7__.Wrapper.gameStart();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleTimeOut() {
        _HUD_SlideMessage__WEBPACK_IMPORTED_MODULE_6__.SlideMessageManager.instance.showMessage("TIME'S UP!");
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.stop();
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.playSound(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.instance.soundComponent, "timeOut" /* timeOut */);
        this._state = 1 /* gameOverMsg */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handlePlCrash(lifeCnt) {
        if (lifeCnt == 0 && this._state == 0 /* game */) {
            _HUD_SlideMessage__WEBPACK_IMPORTED_MODULE_6__.SlideMessageManager.instance.showMessage("GAME OVER");
            _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.stop();
            _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_9__.SoundManager.playSound(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_4__.Player.instance.soundComponent, "timeOut" /* timeOut */);
            this._timer.stop();
            this._state = 1 /* gameOverMsg */;
        }
    }
}
/**
 * Batch skupiny
 */
Gameplay.BATCH_GROUPS = [
    { name: "circleShadows", layerName: "World" },
    { name: "rectShadows", layerName: "World" },
    { name: "vertexColor", layerName: "World", maxAABBSize: 200 },
    { name: "obsBlocks", layerName: "World" },
    { name: "walls", layerName: "World" },
    { name: "decoObjs", layerName: "World" },
    { name: "tallCols", layerName: "World" },
    { name: "scorePopups", layerName: "UI" },
    { name: "results", layerName: "UI" },
];
/**
 * Indexy jednotlivych batch group
 */
Gameplay._batchGroupId = [];


/***/ }),

/***/ "./src/Gameplay/GameplayTimer.ts":
/*!***************************************!*\
  !*** ./src/Gameplay/GameplayTimer.ts ***!
  \***************************************/
/*! namespace exports */
/*! export GameplayTimer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GameplayTimer": () => /* binding */ GameplayTimer
/* harmony export */ });
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Gameplay */ "./src/Gameplay/Gameplay.ts");

class GameplayTimer {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(timeLimit) {
        GameplayTimer._instance = this;
        this._timeLimit = timeLimit;
        this.reset();
    }
    static get instance() { return GameplayTimer._instance; }
    /**
     * (RO) Casovy limit na hru v ms
     */
    get timeLimit() { return this._timeLimit; }
    /**
     * (RO) Pocet zbyvajicich ms na hru
     */
    get timeLeft() { return this._timeLeft; }
    /**
     * (RO) Uplynuly cas v ms
     */
    get elapsedTime() { return this._timeLimit - this._timeLeft; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._timeLeft = this._timeLimit;
        this._startTime = -1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    start() {
        if (this._timeLimit > 0) {
            this._startTime = _Gameplay__WEBPACK_IMPORTED_MODULE_0__.TIMER.time;
            this._timeLeft = this._timeLimit;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    stop() {
        this._startTime = -1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._startTime < 0)
            return;
        if ((this._timeLeft = this._timeLimit - (_Gameplay__WEBPACK_IMPORTED_MODULE_0__.TIMER.time - this._startTime)) <= 0) {
            this._timeLeft = 0;
            this._startTime = -1;
            _Gameplay__WEBPACK_IMPORTED_MODULE_0__.Gameplay.instance.events.fire(GameplayTimer.EVENT_TIME_OUT);
        }
    }
}
/**
 * Udalost vyvolana pri vyprseni casu
 */
GameplayTimer.EVENT_TIME_OUT = "timeOut";


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Results.ts":
/*!******************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Results.ts ***!
  \******************************************/
/*! namespace exports */
/*! export Results [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Results": () => /* binding */ Results
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Utils/TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");
/* harmony import */ var _HUD__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../HUD */ "./src/Gameplay/HUD/HUD.ts");
/* harmony import */ var _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../Publisher API/Gamee/GameeWrapper */ "./src/Publisher API/Gamee/GameeWrapper.ts");
/* harmony import */ var _ResultsBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ResultsBase */ "./src/Gameplay/HUD/ResultsBase.ts");
/* harmony import */ var _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Game World/Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Game_World_Player_Results__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Game World/Player/Results */ "./src/Gameplay/Game World/Player/Results.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _GameplayTimer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../GameplayTimer */ "./src/Gameplay/GameplayTimer.ts");










var eState;
(function (eState) {
    eState[eState["waitForClick"] = 0] = "waitForClick";
    eState[eState["waitForTime"] = 1] = "waitForTime";
    eState[eState["gameOver"] = 2] = "gameOver";
})(eState || (eState = {}));
class Results extends _ResultsBase__WEBPACK_IMPORTED_MODULE_5__.ResultsBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent) {
        super();
        // Kontejner
        this._container = new pc.Entity("results");
        this._container.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_GROUP,
            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),
            pivot: new pc.Vec2(0.5, 0.5),
            width: Results.WND_WIDTH,
            height: Results.WND_HEIGHT
        });
        parent.addChild(this._container);
        // Pozadi okna
        let bg = new pc.Entity();
        bg.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 1],
            texture: _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture,
            width: Results.WND_WIDTH,
            height: 641,
            rect: _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_2__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "results/wnd" /* resWnd */),
        });
        this._container.addChild(bg);
        // Celkove skore
        let font = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntArc8UI" /* arc8UI */, "font" /* font */).id;
        this._totalScore = new pc.Entity("totScore");
        this._totalScore.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 0.5],
            fontSize: 63,
            fontAsset: font,
            autoWidth: true,
            autoHeight: true,
        });
        this._totalScore.setLocalPosition(0, -568, 0);
        this._container.addChild(this._totalScore);
        // Skore za ujetou vzdalenost
        this._distanceScore = new pc.Entity();
        this._distanceScore.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [1, 1, 1, 1],
            pivot: [1, 0],
            fontSize: 28,
            fontAsset: font,
            autoWidth: true,
            autoHeight: true,
            color: Results.TEXT_COLOR
        });
        this._distanceScore.setLocalPosition(-53, -204, 0);
        this._container.addChild(this._distanceScore);
        // Skore za sebrane bonusy
        this._pickupsScore = new pc.Entity();
        this._pickupsScore.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [1, 1, 1, 1],
            pivot: [1, 0],
            fontSize: 28,
            fontAsset: font,
            autoWidth: true,
            autoHeight: true,
            color: Results.TEXT_COLOR
        });
        this._pickupsScore.setLocalPosition(-53, -281, 0);
        this._container.addChild(this._pickupsScore);
        // Skore za zbyle zivoty
        this._livesScore = new pc.Entity();
        this._livesScore.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [1, 1, 1, 1],
            pivot: [1, 0],
            fontSize: 28,
            fontAsset: font,
            autoWidth: true,
            autoHeight: true,
            color: Results.TEXT_COLOR
        });
        this._livesScore.setLocalPosition(-53, -359, 0);
        this._container.addChild(this._livesScore);
        // Close button
        this._btn = _HUD__WEBPACK_IMPORTED_MODULE_3__.HUD.createButton(1 /* arc8BtnResOK */, Results.BTN_WIDTH, Results.BTN_HEIGHT, new pc.Vec4(0.5, 0, 0.5, 0), new pc.Vec2(0.5, 0), this._container, new pc.Vec3(0, 0, 0));
        this._btn.button.on("click", () => {
            if (this._state == 0 /* waitForClick */) {
                if (this._remTime < Results.AUTO_END_DELAY - 1000) {
                    this.gameOver();
                }
                else {
                    this._state = 1 /* waitForTime */;
                }
            }
        });
        this._btnFill = new pc.Entity();
        this._btnFill.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            anchor: [0, 0.5, 0, 0.5],
            pivot: [0, 0.5],
            width: Results.BTN_WIDTH,
            height: Results.BTN_HEIGHT,
            texture: _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture,
            rect: _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_2__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "results/btnClose_" /* resBtnOK */ + "1"),
        });
        this._btn.addChild(this._btnFill);
        /*this._btnContent = new pc.Entity();
        this._btnContent.addComponent(pc.eCompomentType.element, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [0.5, 0.5, 0.5, 0.5],
            pivot: [0.5, 0.5],
            fontSize: 25,
            fontAsset: font,
            autoWidth: true,
            autoHeight: true,
            text: "Continue"
        });
        this._btn.addChild(this._btnContent);*/
        this._state = 2 /* gameOver */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._state = 2 /* gameOver */;
        this._container.enabled = false;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    show() {
        if (this._state == 2 /* gameOver */) {
            this._state = 0 /* waitForClick */;
            let gameplay = _Gameplay__WEBPACK_IMPORTED_MODULE_8__.Gameplay.instance;
            let pl = _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_6__.Player.instance;
            let plRes = pl.results;
            // Navysit skore o bonus za zbyle zivoty
            let lifeBns = gameplay.isUserEnded ? 0 : pl.lifeCnt * _Game_World_Player_Results__WEBPACK_IMPORTED_MODULE_7__.PlResults.LIFE_SCORE_BONUS;
            plRes.score.value += lifeBns;
            gameplay.updateGameeScore(plRes.score.value);
            this._totalScore.element.text = plRes.score.value.toString();
            this._distanceScore.element.text = plRes.distanceScore.toString();
            this._pickupsScore.element.text = plRes.bonusScore.toString();
            this._livesScore.element.text = lifeBns.toString();
            // Odpocet
            this._remTime = Results.AUTO_END_DELAY;
            // Zobrazit
            this._container.enabled = true;
            // Ukoncit ucetnictvi        
            gameplay.accounting.close(Math.round(Math.round(_GameplayTimer__WEBPACK_IMPORTED_MODULE_9__.GameplayTimer.instance.elapsedTime) / 1000), gameplay.isUserEnded);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._state != 2 /* gameOver */) {
            let remTime = this._remTime - _Gameplay__WEBPACK_IMPORTED_MODULE_8__.TIME.deltaMs;
            if (remTime < 0)
                remTime = 0;
            this._remTime = remTime;
            if (this._state == 0 /* waitForClick */) {
                // Velikost fill casti
                let w = Math.ceil((remTime / Results.AUTO_END_DELAY) * Results.BTN_WIDTH);
                let btnFill = this._btnFill.element;
                btnFill.width = w;
                btnFill.rect.z = w / _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture.width;
                btnFill.rect = btnFill.rect;
                if (remTime == 0)
                    this.gameOver();
            }
            else if (remTime < Results.AUTO_END_DELAY - 1000) {
                this.gameOver();
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    gameOver() {
        if (this._state != 2 /* gameOver */) {
            this._state = 2 /* gameOver */;
            _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.stop();
            let replayData;
            if (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.API == 1 /* ARC8 */) {
                replayData = _Gameplay__WEBPACK_IMPORTED_MODULE_8__.Gameplay.instance.accounting.replayData;
                //console.log(replayData);
            }
            _Publisher_API_Gamee_GameeWrapper__WEBPACK_IMPORTED_MODULE_4__.Wrapper.gameOver(replayData);
        }
    }
}
Results.WND_WIDTH = 418;
Results.WND_HEIGHT = 781;
Results.BTN_WIDTH = 209;
Results.BTN_HEIGHT = 79;
Results.AUTO_END_DELAY = 5 * 1000;
Results.TEXT_COLOR = new pc.Color(0.25, 0.41, 0.65);


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Status Bar/Lives.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Status Bar/Lives.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export Lives [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lives": () => /* binding */ Lives
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");
/* harmony import */ var _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Game World/Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Game_World_Player_Results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Game World/Player/Results */ "./src/Gameplay/Game World/Player/Results.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");





class Lives {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent) {
        // Vytovirt ikony
        this._icons = [];
        for (let i = 0; i < _Game_World_Player_Results__WEBPACK_IMPORTED_MODULE_3__.PlResults.LIFE_CNT; i++) {
            let icon = new pc.Entity();
            icon.addComponent("element" /* element */, {
                type: pc.ELEMENTTYPE_IMAGE,
                anchor: [0, 0.5, 0, 0.5],
                pivot: [0, 0.5],
                width: Lives.ICON_W,
                height: Lives.ICON_H,
                texture: _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture,
                rect: _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "life_0" /* iconLife_0 */),
            });
            parent.addChild(icon);
            icon.setLocalPosition(30 + i * Lives.ICON_W + (Lives.ICON_SPACING * (i - 1)), 0, 0);
            this._icons.push(icon);
        }
        _Gameplay__WEBPACK_IMPORTED_MODULE_4__.Gameplay.instance.events.on(_Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.EVENT_CRASH, this.handlePlCrash, this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        let lifeCnt = _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_2__.Player.instance.lifeCnt;
        for (let i = 0; i < _Game_World_Player_Results__WEBPACK_IMPORTED_MODULE_3__.PlResults.LIFE_CNT; i++) {
            this._icons[i].element.rect = _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, i < lifeCnt ? "life_1" /* iconLife_1 */ : "life_0" /* iconLife_0 */);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handlePlCrash(lifeCnt) {
        this._icons[lifeCnt].element.rect = _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "life_0" /* iconLife_0 */);
    }
}
Lives.ICON_W = 27;
Lives.ICON_H = 24;
Lives.ICON_SPACING = 8;


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Status Bar/MultiplierBar.ts":
/*!***********************************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Status Bar/MultiplierBar.ts ***!
  \***********************************************************/
/*! namespace exports */
/*! export MultiplierBar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiplierBar": () => /* binding */ MultiplierBar
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _Utils_UI_Elements_ProgressBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../Utils/UI Elements/ProgressBar */ "./src/Utils/UI Elements/ProgressBar.ts");
/* harmony import */ var _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Game World/Player/Player */ "./src/Gameplay/Game World/Player/Player.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _StatusBar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StatusBar */ "./src/Gameplay/HUD/Arc8/Status Bar/StatusBar.ts");






var eState;
(function (eState) {
    eState[eState["idle"] = 0] = "idle";
    eState[eState["filling"] = 1] = "filling";
    eState[eState["emptying"] = 2] = "emptying";
})(eState || (eState = {}));
var eNumAnimMode;
(function (eNumAnimMode) {
    eNumAnimMode[eNumAnimMode["none"] = 0] = "none";
    eNumAnimMode[eNumAnimMode["incMultiplier"] = 1] = "incMultiplier";
    eNumAnimMode[eNumAnimMode["decMultiplier"] = 2] = "decMultiplier";
})(eNumAnimMode || (eNumAnimMode = {}));
class MultiplierBar {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(container, x = 0) {
        // Pruh
        this._bar = new _Utils_UI_Elements_ProgressBar__WEBPACK_IMPORTED_MODULE_2__.ProgressBar(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "multiBarBg" /* multiBarBg */, "multiBar" /* multiBar */, 0, 0);
        container.addChild(this._bar.entity);
        this._bar.entity.setLocalPosition(x, -(_StatusBar__WEBPACK_IMPORTED_MODULE_5__.StatusBar.CONTAINER_H - MultiplierBar.BAR_H) / 2, 0);
        // Cislo
        this._numEntity = new pc.Entity("multiNum");
        this._numEntity.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [0, 0.5, 0, 0.5],
            pivot: [0, 0.5],
            fontSize: 24,
            fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntArc8UI" /* arc8UI */, "font" /* font */).id,
            autoWidth: true,
            autoHeight: true,
            color: new pc.Color().fromString("#693aff")
        });
        this._bar.entity.addChild(this._numEntity);
        this._numEntity.setLocalPosition(MultiplierBar.BAR_W + 5, 1, 0);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.createSoundComponent(this._numEntity);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._numEntity, "multiplierUp" /* multiplierUp */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.multiplierUp, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._bar.state = 0;
        if (!this._score)
            this._score = _Game_World_Player_Player__WEBPACK_IMPORTED_MODULE_3__.Player.instance.results.score;
        this._score.multiplier = 1;
        this.updateNumber();
        this._state = 0 /* idle */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._state != 0 /* idle */) {
            if (this._state == 2 /* emptying */) {
                this.processEmptying();
            }
            else {
                this.processFilling();
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    inc() {
        this._remFillVal = MultiplierBar.INC_STEP;
        this._state = 1 /* filling */;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    processFilling() {
        // O kolik doplnit
        let fillVal = MultiplierBar.FILLING_STEP * _Gameplay__WEBPACK_IMPORTED_MODULE_4__.TIMER.deltaS;
        if (fillVal > this._remFillVal)
            fillVal = this._remFillVal;
        if ((this._remFillVal -= fillVal) == 0) {
            this._emptyingTime = _Gameplay__WEBPACK_IMPORTED_MODULE_4__.TIMER.time + MultiplierBar.EMPTYING_DELAY;
            this._state = 2 /* emptying */;
        }
        // Doplnit
        let barState = this._bar.state + fillVal;
        if (barState >= 1) {
            if (this._score.multiplier < this._score.maxMultiplier) {
                this.incMultiplier();
                barState -= 1;
            }
            else {
                barState = 1;
            }
        }
        this._bar.state = barState;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    processEmptying() {
        let barState = this._bar.state;
        if (_Gameplay__WEBPACK_IMPORTED_MODULE_4__.TIMER.time > this._emptyingTime) {
            barState -= MultiplierBar.EMPTYING_STEP * _Gameplay__WEBPACK_IMPORTED_MODULE_4__.TIMER.deltaS;
            if (barState < 0) {
                if (this._score.multiplier > 1) {
                    this.decMultiplier();
                    barState += 1;
                }
                else {
                    barState = 0;
                    this._state = 0 /* idle */;
                }
            }
            this._bar.state = barState;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    incMultiplier() {
        // Aktualizovat zobrazene cislo
        this._score.multiplier++;
        this.updateNumber();
        // Audio
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._numEntity, "multiplierUp" /* multiplierUp */);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    decMultiplier() {
        // Aktualizovat zobrazene cislo
        this._score.multiplier--;
        this.updateNumber();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    updateNumber() {
        this._numEntity.element.text = "×" + this._score.multiplier;
    }
}
MultiplierBar.BAR_W = 117;
MultiplierBar.BAR_H = 12;
/**
 * Prodleva nez se zacne pruh automaticky vyprazdnovat v ms
 */
MultiplierBar.EMPTYING_DELAY = 1500;
/**
 * Rychlost vyprazdnovani pruhu za vterinu
 */
MultiplierBar.EMPTYING_STEP = 0.1;
/**
 * O kolik se pruh navysi pri sebrani bonusu
 */
MultiplierBar.INC_STEP = 0.2;
/**
 * Rychlost plneni pruhu za vterinu
 */
MultiplierBar.FILLING_STEP = MultiplierBar.INC_STEP / 0.1;


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Status Bar/Score.ts":
/*!***************************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Status Bar/Score.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export Score [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Score": () => /* binding */ Score
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _Utils_Score__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../Utils/Score */ "./src/Utils/Score.ts");



class Score {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent, y) {
        this._entity = new pc.Entity();
        this._entity.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 1],
            fontSize: 44,
            fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntArc8UI" /* arc8UI */, "font" /* font */).id,
            autoWidth: true,
            autoHeight: true,
            color: new pc.Color().fromString("#693aff")
        });
        this._entity.setPosition(0, y, 0);
        parent.addChild(this._entity);
        // Zachytavat zmenu skore
        _Gameplay__WEBPACK_IMPORTED_MODULE_1__.Gameplay.instance.events.on(_Utils_Score__WEBPACK_IMPORTED_MODULE_2__.Score.EVENT_SCORE_CHANGE, this.handleScoreChange, this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._entity.element.text = "0";
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleScoreChange(score, val) {
        this._entity.element.text = val.toString();
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Status Bar/StatusBar.ts":
/*!*******************************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Status Bar/StatusBar.ts ***!
  \*******************************************************/
/*! namespace exports */
/*! export StatusBar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusBar": () => /* binding */ StatusBar
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");
/* harmony import */ var _Lives__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Lives */ "./src/Gameplay/HUD/Arc8/Status Bar/Lives.ts");
/* harmony import */ var _MultiplierBar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MultiplierBar */ "./src/Gameplay/HUD/Arc8/Status Bar/MultiplierBar.ts");
/* harmony import */ var _Score__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Score */ "./src/Gameplay/HUD/Arc8/Status Bar/Score.ts");
/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Time */ "./src/Gameplay/HUD/Arc8/Status Bar/Time.ts");






class StatusBar {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent) {
        // Kontejner s pozadim
        let texture = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture;
        let frameRc = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.frames.statusBar.rect;
        let rc = _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getTexFrameRegion(texture, frameRc);
        this._container = new pc.Entity("stBar");
        this._container.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: texture,
            width: StatusBar.CONTAINER_W,
            height: StatusBar.CONTAINER_H,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 1],
            rect: rc,
        });
        this._container.setLocalPosition(0, -67, 0);
        parent.addChild(this._container);
        // Pocet zivotu
        this._lives = new _Lives__WEBPACK_IMPORTED_MODULE_2__.Lives(this._container);
        // Multiplier bar
        this._multiBar = new _MultiplierBar__WEBPACK_IMPORTED_MODULE_3__.MultiplierBar(this._container);
        // Zbyvajici cas
        this._time = new _Time__WEBPACK_IMPORTED_MODULE_5__.Time(this._container);
        // Skore
        this._score = new _Score__WEBPACK_IMPORTED_MODULE_4__.Score(this._container, -105);
    }
    get container() { return this._container; }
    get visible() { return this._visible; }
    set visible(val) {
        if (val != this._visible) {
            this._visible = val;
            this._container.enabled = val;
        }
    }
    get multiplierBar() { return this._multiBar; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._lives.reset();
        this._multiBar.reset();
        this._time.reset();
        this._score.reset();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._multiBar.update();
        this._time.update();
    }
}
StatusBar.CONTAINER_W = 512;
StatusBar.CONTAINER_H = 72;


/***/ }),

/***/ "./src/Gameplay/HUD/Arc8/Status Bar/Time.ts":
/*!**************************************************!*\
  !*** ./src/Gameplay/HUD/Arc8/Status Bar/Time.ts ***!
  \**************************************************/
/*! namespace exports */
/*! export Time [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Time": () => /* binding */ Time
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/SoundManager */ "./src/Utils/SoundManager.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _GameplayTimer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../GameplayTimer */ "./src/Gameplay/GameplayTimer.ts");
/* harmony import */ var _HUD__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../HUD */ "./src/Gameplay/HUD/HUD.ts");





class Time {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent) {
        /**
         * Nastaveni zablesku pri restartovani na poslednich checkpointu
         */
        this._flashSettings = {
            color: new pc.Color(1, 0, 0), alpha: 0.25, easeIn: pc.CubicOut, lenIn: 250, easeOut: pc.CubicOut, lenOut: 100,
        };
        // Vykresleni casu
        this._remTimeEnt = new pc.Entity();
        this._remTimeEnt.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            anchor: [1, 0.5, 1, 0.5],
            pivot: [1, 0.5],
            fontSize: 24,
            fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntArc8UI" /* arc8UI */, "font" /* font */).id,
            autoWidth: true,
            autoHeight: true,
            color: new pc.Color().fromString("#693aff")
        });
        this._remTimeEnt.setLocalPosition(-53, 1, 0);
        // Zvuky
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.createSoundComponent(this._remTimeEnt);
        _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.addSoundSlot(this._remTimeEnt, "timeTick" /* timeTick */, _Game__WEBPACK_IMPORTED_MODULE_0__.SfxSprites.timeTick, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.sfxSpriteAssetId);
        parent.addChild(this._remTimeEnt);
        this._remTimeSec = -1;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this.setRemTime(Math.ceil(_GameplayTimer__WEBPACK_IMPORTED_MODULE_3__.GameplayTimer.instance.timeLeft / 1000));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        let remTime = Math.ceil(_GameplayTimer__WEBPACK_IMPORTED_MODULE_3__.GameplayTimer.instance.timeLeft / 1000);
        if (remTime != this._remTimeSec) {
            this.setRemTime(remTime);
            if (remTime <= 5) {
                // Blikani obrazovky
                _HUD__WEBPACK_IMPORTED_MODULE_4__.HUD.instance.flashFx.startFx(this._flashSettings);
                // Pipani
                if (remTime > 0)
                    _Utils_SoundManager__WEBPACK_IMPORTED_MODULE_1__.SoundManager.playSound(this._remTimeEnt, "timeTick" /* timeTick */);
            }
        }
        if (remTime <= 30)
            this._remTimeEnt.element.enabled = remTime == 0 || (Math.floor(_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time / 200) & 1) != 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setRemTime(sec) {
        this._remTimeSec = sec;
        // Cast s minutama
        let timeTxt = Math.floor(sec / 60).toString();
        // Cast se vterinama
        sec %= 60;
        if (sec < 10)
            timeTxt += ":0" + sec;
        else
            timeTxt += ":" + sec;
        this._remTimeEnt.element.text = timeTxt;
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/FlashFx.ts":
/*!*************************************!*\
  !*** ./src/Gameplay/HUD/FlashFx.ts ***!
  \*************************************/
/*! namespace exports */
/*! export FlashFxManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlashFxManager": () => /* binding */ FlashFxManager
/* harmony export */ });
/* harmony import */ var _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Utils/Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");
/* harmony import */ var _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _ScreenOverlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScreenOverlay */ "./src/Gameplay/HUD/ScreenOverlay.ts");




class FlashFx {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._curVals = {
            color: new pc.Color(),
            alpha: 0
        };
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    start(settings) {
        this._settings = settings;
        this._stateTime = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time;
        this._state = 0;
        this._curVals.color.copy(settings.color);
        this._curVals.alpha = 0;
    }
    //-------------------------------------------------------------------------
    /**
     *
     * @returns Aktualni hodnoty efektu nebo undefined, pokud doslo k dokonceni efektu
     */
    //-------------------------------------------------------------------------
    update() {
        let time = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time - this._stateTime;
        let progress;
        switch (this._state) {
            case 0: {
                progress = time / this._settings.lenIn;
                if (progress < 1) {
                    this._curVals.alpha = this._settings.easeIn(progress) * this._settings.alpha;
                    break;
                }
                time -= this._settings.lenIn;
                this._stateTime += this._settings.lenIn;
                this._state++;
                if (this._settings.onCompleteIn)
                    this._settings.onCompleteIn();
            }
            case 1: {
                let progress = time / this._settings.lenOut;
                if (progress < 1) {
                    this._curVals.alpha = this._settings.alpha - this._settings.easeOut(progress) * this._settings.alpha;
                }
                else {
                    this._curVals.alpha = 0;
                    this._state++;
                    if (this._settings.onCompleteOut)
                        this._settings.onCompleteOut();
                    return undefined;
                }
                break;
            }
        }
        return this._curVals;
    }
}
class FlashFxManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(screen) {
        this._scrOverlay = new _ScreenOverlay__WEBPACK_IMPORTED_MODULE_3__.ScreenOverlay(screen);
        this._scrOverlayColor = new pc.Color();
        this._freeFx = new _Utils_Collections_Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(FlashFx, 1, true);
        this._actFx = new _Utils_Collections_NodeList__WEBPACK_IMPORTED_MODULE_0__.NodeList();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this._scrOverlay.enabled) {
            this._scrOverlay.enabled = false;
            this._actFx.forEach((fx) => {
                this._freeFx.returnItem(fx);
            });
            this._actFx.clear();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    startFx(settings) {
        let fx = this._freeFx.getItem();
        fx.start(settings);
        this._actFx.add(fx);
        if (!this._scrOverlay.enabled)
            this._scrOverlay.enabled = true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._actFx.empty)
            return;
        // Vypocitat barvu a alfu
        this._scrOverlayColor.set(0, 0, 0);
        this._scrOverlayAlpha = 0;
        this._actFx.forEach((fx, fxNode) => {
            let fxVal = fx.update();
            if (fxVal) {
                if (fxVal.alpha > this._scrOverlayAlpha)
                    this._scrOverlayAlpha = fxVal.alpha;
                this._scrOverlayColor.lerp(this._scrOverlayColor, fxVal.color, fxVal.alpha / this._scrOverlayAlpha);
            }
            else {
                // Vyradit efekt ze seznamu aktivnich
                this._actFx.removeByNode(fxNode);
                this._freeFx.returnItem(fx);
                // Pokud neni zadny dalsi efekt, tak vypnout overlay
                if (this._actFx.empty)
                    this._scrOverlay.enabled = false;
            }
        });
        // Nastavit overlay
        this._scrOverlay.color = this._scrOverlayColor;
        this._scrOverlay.opacity = this._scrOverlayAlpha;
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/HUD.ts":
/*!*********************************!*\
  !*** ./src/Gameplay/HUD/HUD.ts ***!
  \*********************************/
/*! namespace exports */
/*! export HUD [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eHUDState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eHUDState": () => /* binding */ eHUDState,
/* harmony export */   "HUD": () => /* binding */ HUD
/* harmony export */ });
/* harmony import */ var _Utils_UpdatableItems__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Utils/UpdatableItems */ "./src/Utils/UpdatableItems.ts");
/* harmony import */ var _TextPopup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TextPopup */ "./src/Gameplay/HUD/TextPopup.ts");
/* harmony import */ var _Tutorial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tutorial */ "./src/Gameplay/HUD/Tutorial.ts");
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _SlideMessage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SlideMessage */ "./src/Gameplay/HUD/SlideMessage.ts");
/* harmony import */ var _ScreenOverlay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ScreenOverlay */ "./src/Gameplay/HUD/ScreenOverlay.ts");
/* harmony import */ var _FlashFx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FlashFx */ "./src/Gameplay/HUD/FlashFx.ts");
/* harmony import */ var _Arc8_Results__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Arc8/Results */ "./src/Gameplay/HUD/Arc8/Results.ts");
/* harmony import */ var _Sprites__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Sprites */ "./src/Sprites.ts");
/* harmony import */ var _Prizes_Status_Bar_StatusBar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Prizes/Status Bar/StatusBar */ "./src/Gameplay/HUD/Prizes/Status Bar/StatusBar.ts");
/* harmony import */ var _Arc8_Status_Bar_StatusBar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Arc8/Status Bar/StatusBar */ "./src/Gameplay/HUD/Arc8/Status Bar/StatusBar.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");












var eHUDState;
(function (eHUDState) {
    eHUDState[eHUDState["gameplay"] = 0] = "gameplay";
    eHUDState[eHUDState["tutorial"] = 1] = "tutorial";
    eHUDState[eHUDState["results"] = 2] = "results";
})(eHUDState || (eHUDState = {}));
class HUD {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        HUD._instance = this;
        // Textove vyskakovaci zpravy
        this._textPopups = new _Utils_UpdatableItems__WEBPACK_IMPORTED_MODULE_0__.UpdatableItemManager(1, true, () => {
            return new _TextPopup__WEBPACK_IMPORTED_MODULE_1__.TextPopup();
        }, this);
        this._textPopupsColors = [
            new pc.Color(1, 1, 1),
            new pc.Color(1, 0, 0)
        ];
        // 2D screen
        this._screen = new pc.Entity("hud");
        this._screen.addComponent("screen" /* screen */, {
            scaleMode: pc.SCALEMODE_BLEND,
            screenSpace: true,
            scaleBlend: _Game__WEBPACK_IMPORTED_MODULE_3__.Game.scale.maxWidth < _Game__WEBPACK_IMPORTED_MODULE_3__.Game.scale.maxHeight ? 0 : 1,
            referenceResolution: new pc.Vec2(_Game__WEBPACK_IMPORTED_MODULE_3__.Game.scale.minWidth, _Game__WEBPACK_IMPORTED_MODULE_3__.Game.scale.minHeight)
        });
        _Game__WEBPACK_IMPORTED_MODULE_3__.Game.app.root.addChild(this._screen);
        if (_Game__WEBPACK_IMPORTED_MODULE_3__.Game.SHOW_PATH_BLOCK_ID) {
            this._pathBlockInfo = new pc.Entity();
            this._pathBlockInfo.addComponent("element" /* element */, {
                type: pc.ELEMENTTYPE_TEXT,
                fontSize: 30,
                fontAsset: _Game__WEBPACK_IMPORTED_MODULE_3__.Game.app.assets.find("fntDefault" /* default */, "font" /* font */).id,
                autoWidth: true,
                autoHeight: true,
                pivot: [0, 1],
                anchor: [0, 1, 0, 1],
                outlineThickness: 0.5,
            });
            this._pathBlockInfo.element.color.set(1, 1, 1);
            this._pathBlockInfo.element.outlineColor.set(0, 0, 0);
            this._pathBlockInfo.setLocalPosition(20, -60, 0);
            this._screen.addChild(this._pathBlockInfo);
        }
        // Slidovaci zpravy
        this._slideMessages = new _SlideMessage__WEBPACK_IMPORTED_MODULE_4__.SlideMessageManager();
        // Status bar
        if (_Game__WEBPACK_IMPORTED_MODULE_3__.Game.API == 1 /* ARC8 */) {
            this._statusBar = new _Arc8_Status_Bar_StatusBar__WEBPACK_IMPORTED_MODULE_10__.StatusBar(this._screen);
        }
        else {
            this._statusBar = new _Prizes_Status_Bar_StatusBar__WEBPACK_IMPORTED_MODULE_9__.StatusBar(this._screen);
        }
        // Efekt zablesku
        this._flashFx = new _FlashFx__WEBPACK_IMPORTED_MODULE_6__.FlashFxManager(this._screen);
        // Screen overlay
        this._overlay = new _ScreenOverlay__WEBPACK_IMPORTED_MODULE_5__.ScreenOverlay(this._screen);
        this._tutorial = new _Tutorial__WEBPACK_IMPORTED_MODULE_2__.Tutorial(this._screen);
        if (_Game__WEBPACK_IMPORTED_MODULE_3__.Game.API != 1 /* ARC8 */)
            this._results = new _Arc8_Results__WEBPACK_IMPORTED_MODULE_7__.Results(this._screen);
    }
    static get instance() { return HUD._instance; }
    /**
     * (RO) pc.Entity se Screen komponentou pro zobrazeni informaci v HUDu
     */
    get screen() { return this._screen; }
    /**
     * Status bar
     */
    get statusBar() { return this._statusBar; }
    /**
     * (RO) Informace o bloku cesty, ve kterem se hrac nachazi
     */
    get pathBlockInfo() { return this._pathBlockInfo; }
    /**
     * (RO) Overlay pres celou obrazovku
     */
    get overlay() { return this._overlay; }
    /**
     * (RO) Efekt zablesku
     */
    get flashFx() { return this._flashFx; }
    /**
     * Tutorial
     */
    get tutorial() { return this._tutorial; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setState(state) {
        if (state == this._state)
            return;
        this._state = state;
        switch (state) {
            case 0 /* gameplay */: {
                this._tutorial.reset();
                this._overlay.enabled = false;
                break;
            }
            case 1 /* tutorial */: {
                this._textPopups.reset();
                this._slideMessages.reset();
                this._statusBar.reset();
                this._statusBar.visible = true;
                if (this._results)
                    this._results.reset();
                this._flashFx.reset();
                this._overlay.enabled = true;
                this._overlay.opacity = 0.4;
                this._tutorial.show();
                break;
            }
            case 2 /* results */: {
                this._statusBar.visible = false;
                this._overlay.enabled = true;
                this._overlay.opacity = 0.4;
                this._results.show();
                break;
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (_Gameplay__WEBPACK_IMPORTED_MODULE_11__.Gameplay.instance.state != 2 /* gameOver */) {
            this._statusBar.update();
            this._flashFx.update();
            this._textPopups.update();
            this._slideMessages.update();
            this._tutorial.update();
        }
        else {
            if (this._results)
                this._results.update();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    showTextPopup(x, y, z, text, colorId = 0) {
        let popup = this._textPopups.activateItem();
        popup.show(x, y, z, text);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static createButton(sprite, width, height, anchor, pivot, parent, pos, batchGroupId = -1) {
        let asset = _Game__WEBPACK_IMPORTED_MODULE_3__.Game.app.assets.find(_Sprites__WEBPACK_IMPORTED_MODULE_8__.SPRITES[sprite].name, "sprite" /* sprite */);
        let entity = new pc.Entity();
        entity.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            width: width,
            height: height,
            anchor: anchor,
            pivot: pivot,
            useInput: true,
            spriteAsset: asset.id,
            batchGroupId: batchGroupId
        });
        entity.addComponent("button" /* button */, {
            active: true,
            imageEntity: entity,
            transitionMode: pc.BUTTON_TRANSITION_MODE_SPRITE_CHANGE,
            inactiveSpriteAsset: asset,
            hoverSpriteAsset: asset,
            pressedSpriteAsset: asset,
        });
        entity.button.hoverSpriteFrame = 0;
        entity.button.pressedSpriteFrame = 1;
        entity.button.on("mousedown", (event) => { event.event.stopImmediatePropagation(); });
        entity.button.on("touchstart", (event) => { event.event.stopImmediatePropagation(); });
        parent.addChild(entity);
        entity.setLocalPosition(pos);
        return entity;
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/Prizes/Status Bar/StatusBar.ts":
/*!*********************************************************!*\
  !*** ./src/Gameplay/HUD/Prizes/Status Bar/StatusBar.ts ***!
  \*********************************************************/
/*! namespace exports */
/*! export StatusBar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusBar": () => /* binding */ StatusBar
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../Utils/TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");
/* harmony import */ var _Arc8_Status_Bar_Lives__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Arc8/Status Bar/Lives */ "./src/Gameplay/HUD/Arc8/Status Bar/Lives.ts");
/* harmony import */ var _Arc8_Status_Bar_MultiplierBar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Arc8/Status Bar/MultiplierBar */ "./src/Gameplay/HUD/Arc8/Status Bar/MultiplierBar.ts");




class StatusBar {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(parent) {
        // Kontejner s pozadim
        let texture = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture;
        let frameRc = _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.frames.statusBar.rect;
        let rc = _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getTexFrameRegion(texture, frameRc);
        this._container = new pc.Entity("stBar");
        this._container.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: texture,
            width: StatusBar.CONTAINER_W,
            height: StatusBar.CONTAINER_H,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 1],
            rect: rc,
        });
        this._container.setLocalPosition(0, -20, 0);
        parent.addChild(this._container);
        // Pocet zivotu
        this._lives = new _Arc8_Status_Bar_Lives__WEBPACK_IMPORTED_MODULE_2__.Lives(this._container);
        // Multiplier bar
        this._multiBar = new _Arc8_Status_Bar_MultiplierBar__WEBPACK_IMPORTED_MODULE_3__.MultiplierBar(this._container, 140);
    }
    get container() { return this._container; }
    get visible() { return this._visible; }
    set visible(val) {
        if (val != this._visible) {
            this._visible = val;
            this._container.enabled = val;
        }
    }
    get multiplierBar() { return this._multiBar; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._lives.reset();
        this._multiBar.reset();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        this._multiBar.update();
    }
}
StatusBar.CONTAINER_W = 512;
StatusBar.CONTAINER_H = 72;


/***/ }),

/***/ "./src/Gameplay/HUD/ResultsBase.ts":
/*!*****************************************!*\
  !*** ./src/Gameplay/HUD/ResultsBase.ts ***!
  \*****************************************/
/*! namespace exports */
/*! export ResultsBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResultsBase": () => /* binding */ ResultsBase
/* harmony export */ });
class ResultsBase {
    update() { }
}


/***/ }),

/***/ "./src/Gameplay/HUD/ScreenOverlay.ts":
/*!*******************************************!*\
  !*** ./src/Gameplay/HUD/ScreenOverlay.ts ***!
  \*******************************************/
/*! namespace exports */
/*! export ScreenOverlay [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScreenOverlay": () => /* binding */ ScreenOverlay
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/ScaleManager */ "./src/Utils/ScaleManager.ts");


class ScreenOverlay {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(screen) {
        this._entity = new pc.Entity();
        this._entity.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            anchor: [0.5, 0.5, 0.5, 0.5],
            color: new pc.Color(0, 0, 0),
            opacity: 0.3,
        });
        this._entity.enabled = false;
        screen.addChild(this._entity);
        // Nastavit velikost a zachytavat zmenu rozliseni
        this.handleScreenResChange(_Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.width, _Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.height);
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.on(_Utils_ScaleManager__WEBPACK_IMPORTED_MODULE_1__.ScaleManager.EVENT_RESIZE, this.handleScreenResChange, this);
    }
    get opacity() { return this._entity.element.opacity; }
    set opacity(val) { this._entity.element.opacity = val; }
    get color() { return this._entity.element.color; }
    set color(val) { this._entity.element.color = val; }
    get enabled() { return this._entity.enabled; }
    set enabled(val) {
        if (this._entity.enabled != val) {
            this._entity.enabled = val;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    handleScreenResChange(w, h) {
        this._entity.element.width = w;
        this._entity.element.height = h;
        this._entity.setLocalPosition(-w / 2, -h / 2, 0);
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/SlideMessage.ts":
/*!******************************************!*\
  !*** ./src/Gameplay/HUD/SlideMessage.ts ***!
  \******************************************/
/*! namespace exports */
/*! export SlideMessageManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SlideMessageTypeEx [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SlideMessageTypeEx": () => /* binding */ SlideMessageTypeEx,
/* harmony export */   "SlideMessageManager": () => /* binding */ SlideMessageManager
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/Collections/WrapperArray */ "./src/Utils/Collections/WrapperArray.ts");
/* harmony import */ var _Utils_SlideMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Utils/SlideMessage */ "./src/Utils/SlideMessage.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");
/* harmony import */ var _HUD__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HUD */ "./src/Gameplay/HUD/HUD.ts");





class SlideMessageTypeEx extends _Utils_SlideMessage__WEBPACK_IMPORTED_MODULE_2__.SlideMessageType {
    constructor(slideInTime, slideInEase, slideOutDelay, slideOutTime, slideOutEase, offsetY = 0) {
        super(slideInTime, slideOutDelay, slideOutTime);
        this.slideInEase = slideInEase;
        this.slideOutEase = slideOutEase;
        this.offsetY = offsetY;
    }
}
class SlideMessage extends _Utils_SlideMessage__WEBPACK_IMPORTED_MODULE_2__.SlideMessageBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super(SlideMessage._type, _Gameplay__WEBPACK_IMPORTED_MODULE_3__.TIMER);
        let e = this._messageEnt = new pc.Entity("slideMsg");
        e.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            fontSize: 56,
            fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntDefault" /* default */, "font" /* font */).id,
            autoWidth: true,
            autoHeight: true,
            pivot: [0.5, 0.5],
            anchor: [0.5, 0.5, 0.5, 0.5],
        });
        e.element.outlineColor.set(0, 0, 0);
        e.element.outlineThickness = 0.5;
        e.enabled = false;
        _HUD__WEBPACK_IMPORTED_MODULE_4__.HUD.instance.screen.addChild(e);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this.active) {
            super.reset();
            this._messageEnt.enabled = false;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    show(message, type) {
        // Nastavit typ
        if (!type)
            type = SlideMessage._type;
        this._type = type;
        // Nastavit zpravu
        this._messageEnt.element.text = message;
        this._messageEnt.enabled = true;
        this._messageSlideDis = (_Game__WEBPACK_IMPORTED_MODULE_0__.Game.scale.maxWidth / 2) + (this._messageEnt.element.textWidth / 2);
        // Zahajit zobrazeni zpravu
        super.showMessage();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    updateContainer(state, stateProgress) {
        switch (state) {
            case _Utils_SlideMessage__WEBPACK_IMPORTED_MODULE_2__.eSlideMessageState.slideIn: {
                // Prijezd zpravy na stred
                this._messageEnt.setLocalPosition(this._messageSlideDis * (1 - pc.ElasticOut(stateProgress)), this._type.offsetY, 0);
                break;
            }
            case _Utils_SlideMessage__WEBPACK_IMPORTED_MODULE_2__.eSlideMessageState.slideOut: {
                // Odjezd zpravy ze stredu
                this._messageEnt.setLocalPosition(-this._messageSlideDis * pc.CubicIn(stateProgress), this._type.offsetY, 0);
                break;
            }
        }
    }
}
SlideMessage._type = new SlideMessageTypeEx(750, pc.CubicOut, 500, 750, pc.CubicIn);
SlideMessage.START_X = 2;
SlideMessage.VIEW_W = SlideMessage.START_X * 2;
class SlideMessageManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        SlideMessageManager._instance = this;
        this._slideMessage = new SlideMessage();
        this._waitingMessages = new _Utils_Collections_WrapperArray__WEBPACK_IMPORTED_MODULE_1__.WrappedArray();
    }
    static get instance() { return SlideMessageManager._instance; }
    /**
     * (RO) True, pokud probiha zobrazovani zprav
     */
    get active() { return this._slideMessage.active; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._slideMessage.reset();
        this._waitingMessages.clear();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    showMessage(message, type) {
        if (!this._slideMessage.active) {
            // Zobrazit zpravu okamzite
            this._slideMessage.show(message, type);
        }
        else {
            // Pridat zpravu do seznamu cekajicich
            this._waitingMessages.add({ text: message, type: type });
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (this._slideMessage.active) {
            if (!this._slideMessage.update()) {
                if (!this._waitingMessages.empty) {
                    // Zobrazit dalsi cekajici zpravu
                    let message = this._waitingMessages.remove(false);
                    this._slideMessage.show(message.text, message.type);
                }
            }
        }
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/TextPopup.ts":
/*!***************************************!*\
  !*** ./src/Gameplay/HUD/TextPopup.ts ***!
  \***************************************/
/*! namespace exports */
/*! export TextPopup [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextPopup": () => /* binding */ TextPopup
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_PopupMessage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/PopupMessage */ "./src/Utils/PopupMessage.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");



class TextPopup extends _Utils_PopupMessage__WEBPACK_IMPORTED_MODULE_1__.PopupMessageBase {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        super();
        if (!TextPopup._msgType)
            TextPopup._msgType = new _Utils_PopupMessage__WEBPACK_IMPORTED_MODULE_1__.PopupMessageType(new pc.Vec3(0, 1, -4), 1000, pc.CubicOut, 500, 500, pc.CubicIn);
        this._entity = new pc.Entity("scorePopup");
        this._entity.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_TEXT,
            fontSize: 0.25,
            fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntDefault" /* default */, "font" /* font */).id,
            autoWidth: true,
            autoHeight: true,
            pivot: [0.5, 0],
        });
        this._entity.element.color.set(1, 1, 1);
        this._entity.element.outlineColor.set(0, 0, 0);
        this._entity.element.outlineThickness = 0.5;
        this._entity.element.enabled = false;
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.root.addChild(this._entity);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    show(x, y, z, text) {
        this._entity.element.text = text;
        this._entity.setPosition(x, y, z);
        this._entity.setLocalScale(1, 1, 1);
        this._entity.element.enabled = true;
        super.showMessage(x, y, z, TextPopup._msgType, _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER);
        return this;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        return super.update();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        super.release();
        this._entity.element.enabled = false;
        return this;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    updateContainer(pos) {
        this._entity.setPosition(pos);
    }
}


/***/ }),

/***/ "./src/Gameplay/HUD/Tutorial.ts":
/*!**************************************!*\
  !*** ./src/Gameplay/HUD/Tutorial.ts ***!
  \**************************************/
/*! namespace exports */
/*! export Tutorial [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tutorial": () => /* binding */ Tutorial
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Game */ "./src/Game.ts");
/* harmony import */ var _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Utils/TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");
/* harmony import */ var _Gameplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Gameplay */ "./src/Gameplay/Gameplay.ts");



class Tutorial {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(screen) {
        Tutorial._instance = this;
        // Cara, po ktere bude ruka jezdit
        this._line = new pc.Entity();
        this._line.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture,
            rect: _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "tutorial/line" /* tutorLine */),
            anchor: [0.5, 0, 0.5, 0],
            pivot: [0.5, 0.5],
            width: 461,
            height: 19,
            opacity: 1
        });
        screen.addChild(this._line);
        this._line.setLocalPosition(0, 200, 0);
        // Ruka
        this._hand = new pc.Entity();
        this._hand.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: _Game__WEBPACK_IMPORTED_MODULE_0__.atlas.texture,
            rect: _Utils_TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_1__.TextureAtlasUtils.getAtlasFrameRegion(_Game__WEBPACK_IMPORTED_MODULE_0__.atlas, "tutorial/hand" /* tutorHand */),
            anchor: [0.5, 0, 0.5, 0],
            pivot: [0.35, 1],
            width: 98,
            height: 167,
            opacity: 1
        });
        screen.addChild(this._hand);
        this._hand.setLocalPosition(0, 230, 0);
        // Napis Tap to Play
        if (pc.platform.ios) {
            this._reqTapToPlay = true;
            this._tapToPlay = new pc.Entity();
            this._tapToPlay.addComponent("element" /* element */, {
                type: pc.ELEMENTTYPE_TEXT,
                fontSize: 58,
                fontAsset: _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find("fntDefault" /* default */, "font" /* font */).id,
                autoWidth: true,
                autoHeight: true,
                pivot: [0.5, 0.5],
                anchor: [0.5, 0.5, 0.5, 0.5],
                outlineColor: new pc.Color(0, 0, 0),
                outlineThickness: 0.5,
                text: "TAP TO PLAY"
            });
            screen.addChild(this._tapToPlay);
        }
        else {
            this._reqTapToPlay = false;
        }
        this._active = false;
    }
    static get instance() { return Tutorial._instance; }
    /**
     * (RO) True, pokud je vyzadovano tapnuti pro zahajeni hrani hry
     */
    get reqTapToPlay() { return this._reqTapToPlay; }
    /**
     * (RO) True, pokud je tutorial aktivni
     */
    get active() { return this._active; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    show() {
        if (!this.active) {
            this._active = true;
            this._time = _Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time;
            this._line.enabled = true;
            this._hand.enabled = true;
            if (this._reqTapToPlay) {
                this._tapToPlay.enabled = true;
                _Game__WEBPACK_IMPORTED_MODULE_0__.Game.canvas.addEventListener("click", Tutorial.handleClickEvent);
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        if (this.active) {
            this._active = false;
            this._line.enabled = false;
            this._hand.enabled = false;
            if (this._tapToPlay)
                this._tapToPlay.enabled = false;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update() {
        if (!this._active)
            return;
        // Pohyb ruky
        let i = (_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time - this._time + 500) % 2000;
        if (i < 1000) {
            i = pc.SineInOut(i / 1000);
        }
        else {
            i = 1 - pc.SineInOut((i - 1000) / 1000);
        }
        this._hand.setLocalPosition(pc.math.lerp(-100, 100, i), 230, 0);
        // Blikani napisu TAP TO PLAY
        if (this._reqTapToPlay) {
            let enabled = (Math.floor((_Gameplay__WEBPACK_IMPORTED_MODULE_2__.TIMER.time - this._time) / 500) & 1) == 0;
            if (this._tapToPlay.enabled != enabled)
                this._tapToPlay.enabled = enabled;
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static handleClickEvent() {
        // Zrusit zachytavani "click" event
        _Game__WEBPACK_IMPORTED_MODULE_0__.Game.canvas.removeEventListener("click", Tutorial.handleClickEvent);
        // Znovu jiz tapnuti nevyzadovat
        Tutorial._instance._reqTapToPlay = false;
        // Prehrat prvni zvuk
        /*let pl = Player.instance;
        SoundManager.playSound(pl.entity, eSfxSprite.jump);*/
        // Zahajit pohyb hrace
        //pl.startJumping();
    }
}


/***/ }),

/***/ "./src/Publisher API/Gamee/GameeWrapper.ts":
/*!*************************************************!*\
  !*** ./src/Publisher API/Gamee/GameeWrapper.ts ***!
  \*************************************************/
/*! namespace exports */
/*! export Wrapper [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eAdState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eEvent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eEvent": () => /* binding */ eEvent,
/* harmony export */   "eState": () => /* binding */ eState,
/* harmony export */   "eAdState": () => /* binding */ eAdState,
/* harmony export */   "Wrapper": () => /* binding */ Wrapper
/* harmony export */ });
var eEvent;
(function (eEvent) {
    /**
     * Will be emitted when user start or restart the game.
     */
    eEvent["start"] = "start";
    /**
     * Will be emitted when user paused the game.
     */
    eEvent["pause"] = "pause";
    /**
     * Will be emitted after user resumes the game after pause or GameeApp suspension.

     */
    eEvent["resume"] = "resume";
    /**
     * Will be emitted when user clicks the mute button and the game must mute all game sounds.
     */
    eEvent["mute"] = "mute";
    /**
     * Will be emitted when user clicks the unmute button and the game should unmute all game sounds.
     */
    eEvent["unmute"] = "unmute";
    /**
     * Revive player
     */
    eEvent["useExtraLife"] = "useExtraLife";
    /**
     * Hrac ukoncil hru
     */
    eEvent["submit"] = "submit";
})(eEvent || (eEvent = {}));
var eState;
(function (eState) {
    eState[eState["unitialized"] = 0] = "unitialized";
    /**
     * Probiha inicializace
     */
    eState[eState["waitForInit"] = 1] = "waitForInit";
    /**
     * Probehla uspesne inicializace, ale nebylo zavolano gamee.gameReady()
     */
    eState[eState["initialized"] = 2] = "initialized";
    /**
     * Probiha cekani na "start" udalost od GAMEE
     */
    eState[eState["waitForStart"] = 3] = "waitForStart";
    /**
     * Byla prijata "start" udalost od GAMEE
     */
    eState[eState["started"] = 4] = "started";
    /**
     *
     */
    eState[eState["gameOver"] = 5] = "gameOver";
})(eState || (eState = {}));
var eAdState;
(function (eAdState) {
    eAdState[eAdState["ready"] = 0] = "ready";
    eAdState[eAdState["loading"] = 1] = "loading";
    eAdState[eAdState["showing"] = 2] = "showing";
    eAdState[eAdState["uninitialized"] = 3] = "uninitialized";
})(eAdState || (eAdState = {}));
class Wrapper {
    /**
     * (RO) Aktualni stav
     */
    static get GAMEE_STATE() { return Wrapper._GAMEE_STATE; }
    /**
     * (RO) Spravce udalosti
     */
    static get EVENTS() { return Wrapper._EVENTS; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static gameInit(caps, clb, clbCtx) {
        if (Wrapper._GAMEE_STATE != 0 /* unitialized */)
            throw new Error(Wrapper._ERROR_DUPLICATE_CALL + "gamee.gameInit()");
        Wrapper.GAMEE = window.gamee;
        if (!Wrapper.GAMEE) {
            console.log(Wrapper._ERROR_GAMEE_DOESNT_EXIST);
            Wrapper._GAMEE_STATE = 2 /* initialized */;
            clb.call(clbCtx);
            return;
        }
        Wrapper._GAMEE_STATE = 1 /* waitForInit */;
        Wrapper.GAMEE.gameInit("FullScreen", {}, caps, (error, data) => {
            if (error)
                throw new Error(error);
            Wrapper._GAMEE_STATE = 2 /* initialized */;
            // Ulozit initData
            Wrapper.INIT_DATA = data;
            // Zachytavani GAMEE udalosti
            Wrapper.GAMEE.emitter.addEventListener("start", () => {
                Wrapper._GAMEE_STATE = 4 /* started */;
                Wrapper._EVENTS.fire("start" /* start */);
            });
            Wrapper.GAMEE.emitter.addEventListener("pause", () => {
                Wrapper._EVENTS.fire("pause" /* pause */);
            });
            Wrapper.GAMEE.emitter.addEventListener("resume", () => {
                Wrapper._EVENTS.fire("resume" /* resume */);
            });
            Wrapper.GAMEE.emitter.addEventListener("mute", () => {
                Wrapper._EVENTS.fire("mute" /* mute */);
            });
            Wrapper.GAMEE.emitter.addEventListener("unmute", () => {
                Wrapper._EVENTS.fire("unmute" /* unmute */);
            });
            Wrapper.GAMEE.emitter.addEventListener("useExtraLife", () => {
                Wrapper._GAMEE_STATE = 4 /* started */;
                Wrapper._EVENTS.fire("useExtraLife" /* useExtraLife */);
            });
            Wrapper.GAMEE.emitter.addEventListener("submit", () => {
                Wrapper._EVENTS.fire("submit" /* submit */);
            });
            // Callback
            clb.call(clbCtx);
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static gameReady() {
        if (Wrapper._GAMEE_STATE == 2 /* initialized */) {
            if (Wrapper.GAMEE) {
                Wrapper._GAMEE_STATE = 3 /* waitForStart */;
                Wrapper.GAMEE.gameReady((error) => {
                    if (error)
                        throw new Error(error);
                });
            }
            else {
                Wrapper._GAMEE_STATE = 4 /* started */;
                Wrapper._EVENTS.fire("start" /* start */);
            }
        }
        else if (Wrapper._GAMEE_STATE < 2 /* initialized */) {
            throw new Error(Wrapper._ERROR_NOT_INITIALIZED);
        }
        else {
            throw new Error(Wrapper._ERROR_DUPLICATE_CALL);
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static gameStart() {
        if (Wrapper.GAMEE && Wrapper._GAMEE_STATE == 4 /* started */)
            Wrapper.GAMEE.gameStart();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static gameSave(saveState) {
        if (Wrapper.GAMEE)
            Wrapper.GAMEE.gameSave(typeof saveState == "string" ? saveState : JSON.stringify(saveState));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static gameOver(replay) {
        if (Wrapper._GAMEE_STATE == 4 /* started */) {
            Wrapper._GAMEE_STATE = 5 /* gameOver */;
            if (Wrapper.GAMEE) {
                Wrapper.GAMEE.gameOver(replay);
            }
            else {
                Wrapper._GAMEE_STATE = 4 /* started */;
                Wrapper._EVENTS.fire("start" /* start */);
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static updateScore(score, timeMs, hash) {
        if (Wrapper.GAMEE)
            Wrapper.GAMEE.updateScore(score, timeMs, hash);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static logEvent(name, value) {
        if (Wrapper.GAMEE && Wrapper._GAMEE_STATE >= 2 /* initialized */) {
            Wrapper.GAMEE.logEvent(name, value);
        }
        else {
            console.log("EVENT: " + name + " - " + value);
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Updates the mission progress on the platform level, making it visible for the player after the game over. Should be called with every mission progress change.
     * @param progress Progress of a specific mission, number in <0, 100> range
     */
    //-------------------------------------------------------------------------
    static updateMissionProgress(progress) {
        if (progress > 100)
            progress = 100;
        if (Wrapper._GAMEE_STATE >= 2 /* initialized */ && Wrapper.GAMEE) {
            Wrapper.GAMEE.updateMissionProgress(progress);
        }
    }
    //*************************************************************************
    //*************************************************************************
    // Reklamy
    //*************************************************************************
    //*************************************************************************
    /**
     * (RO) Aktualni stav reklamy
     */
    static get adState() { return Wrapper._adState; }
    /**
     * (RO) True, pokud je reklama pripravena k zobrazeni
     */
    static get adReady() { return Wrapper._adState == 0 /* ready */; }
    //-------------------------------------------------------------------------
    /**
     * Nacteni reklamy. Po dokonceni se vola callback, kteremu se predaji nasledujici parametry:
     * res: boolean True, pokud se reklamu podarilo nacist a je pripravena pro zobrazeni
     * @returns True, pokud bylo nacteni reklamy zahajeno.
     */
    //-------------------------------------------------------------------------
    static loadAd(cbFnc, cbCtx) {
        if (Wrapper.GAMEE) {
            if (Wrapper._GAMEE_STATE < 2 /* initialized */ || Wrapper._adState != 3 /* uninitialized */)
                return false;
            Wrapper._adState = 1 /* loading */;
            try {
                Wrapper.GAMEE.loadRewardedVideo((error, data) => {
                    Wrapper._adState = (data && data.videoLoaded ? 0 /* ready */ : 3 /* uninitialized */);
                    if (cbFnc)
                        cbFnc.call(cbCtx, Wrapper._adState == 0 /* ready */);
                });
            }
            catch (e) {
                return false;
            }
        }
        else {
            Wrapper._adState = 0 /* ready */;
        }
        return true;
    }
    //-------------------------------------------------------------------------
    /**
     * Zobrazeni reklamy. Reklama musi byt ve stavu eAdState.ready. Po dokonceni zobrazeni reklamy se vola callback, kteremu se predaji nasledujici parametry:
     * res: boolean True, pokud reklama byla zobrazena
     * @returns True, pokud bylo zobrazeni reklamy zahajeno
     */
    //-------------------------------------------------------------------------
    static showAd(cbFnc, cbCtx) {
        if (Wrapper.GAMEE) {
            // Overit zda je reklama nactena
            if (Wrapper._adState != 0 /* ready */) {
                // Pokusit se nacist reklamu
                return Wrapper.loadAd((res) => {
                    if (res) {
                        // Zobrazit reklamu
                        Wrapper.showAd(cbFnc, cbCtx);
                    }
                    else {
                        // Reklamu se nepodarilo nacist
                        cbFnc.call(cbCtx, false);
                    }
                });
            }
            Wrapper._adState = 2 /* showing */;
            Wrapper.GAMEE.showRewardedVideo(function (error, data) {
                Wrapper._adState = 3 /* uninitialized */;
                cbFnc.call(cbCtx, (data && data.videoPlayed));
            });
        }
        else {
            cbFnc.call(cbCtx, true);
        }
        return true;
    }
}
Wrapper._ERROR_GAMEE_DOESNT_EXIST = "GAMEE doesn't exist.";
Wrapper._ERROR_DUPLICATE_CALL = "Duplicate call: ";
Wrapper._ERROR_NOT_INITIALIZED = "GAMEE is not yet initialized.";
Wrapper._GAMEE_STATE = 0 /* unitialized */;
Wrapper._EVENTS = new pc.EventHandler();
Wrapper._adState = 3 /* uninitialized */;


/***/ }),

/***/ "./src/Publisher API/Gamee/MissionManager.ts":
/*!***************************************************!*\
  !*** ./src/Publisher API/Gamee/MissionManager.ts ***!
  \***************************************************/
/*! namespace exports */
/*! export MissionManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eMissionType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eMissionType": () => /* binding */ eMissionType,
/* harmony export */   "MissionManager": () => /* binding */ MissionManager
/* harmony export */ });
/* harmony import */ var _GameeWrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameeWrapper */ "./src/Publisher API/Gamee/GameeWrapper.ts");

var eMissionType;
(function (eMissionType) {
    /**
     * Seber X zakladnich bonusu
     */
    eMissionType[eMissionType["collectBonus1"] = 0] = "collectBonus1";
    /**
     * Seber X extra bonusu
     */
    eMissionType[eMissionType["collectBonus2"] = 1] = "collectBonus2";
    /**
     * Vyskoc x krat
     */
    eMissionType[eMissionType["jumps"] = 2] = "jumps";
    /**
     * Zrychly x krat
     */
    eMissionType[eMissionType["speedUps"] = 3] = "speedUps";
})(eMissionType || (eMissionType = {}));
class MissionManager {
    /**
     * (RO) Aktualni mise
     */
    get mission() { return this._mission; }
    //-------------------------------------------------------------------------
    /**
     * Nastaveni aktivni mise podle jmena mise
     * @param name
     * @param targetVal Cilova hodnota mise. Pokud <= 0, tak se pouzije vychozi cilova hodnota
     */
    //-------------------------------------------------------------------------
    setActiveMission(name, targetVal) {
        this._mission = undefined;
        this._missionValue = 0;
        let i = MissionManager._MISSIONS.length;
        while (i-- != 0) {
            if (MissionManager._MISSIONS[i].name == name) {
                this._mission = MissionManager._MISSIONS[i];
                this._missionTargetValue = (targetVal > 0 ? targetVal : this._mission.targetValue);
                break;
            }
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    resetMissionProgress() {
        this._missionValue = 0;
    }
    //-------------------------------------------------------------------------
    /**
     * Navyseni hodnoty mise o 1
     * @param missionType Typ mise
     * @param value O kolik se ma hodnota mise navysit. Default = 1
     */
    //-------------------------------------------------------------------------
    incMissionProgress(missionType, value = 1) {
        if (this._mission && this._mission.type == missionType)
            _GameeWrapper__WEBPACK_IMPORTED_MODULE_0__.Wrapper.updateMissionProgress(Math.floor(((this._missionValue += value) / this._missionTargetValue) * 100));
    }
    //-------------------------------------------------------------------------
    /**
     * Nastaveni hodnoty mise. Hodnota mise se zmeni pouze pokud nova hodnota je vyssi nez stavajici.
     * @param missionType
     * @param value
     */
    //-------------------------------------------------------------------------
    setMissionValue(missionType, value) {
        if (this._mission && this._mission.type == missionType) {
            if (value > this._missionValue) {
                this._missionValue = value;
                _GameeWrapper__WEBPACK_IMPORTED_MODULE_0__.Wrapper.updateMissionProgress(Math.floor((this._missionValue / this._missionTargetValue) * 100));
            }
        }
    }
}
/**
 * Seznam vsech misi
 */
MissionManager._MISSIONS = [
    {
        type: 0 /* collectBonus1 */,
        name: "bonuses1",
        targetValue: 4
    },
    {
        type: 1 /* collectBonus2 */,
        name: "bonuses2",
        targetValue: 1
    },
    {
        type: 2 /* jumps */,
        name: "jumps",
        targetValue: 3
    },
    {
        type: 3 /* speedUps */,
        name: "speedUps",
        targetValue: 3
    },
];


/***/ }),

/***/ "./src/Sprites.ts":
/*!************************!*\
  !*** ./src/Sprites.ts ***!
  \************************/
/*! namespace exports */
/*! export SPRITES [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SpriteDsc [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eSprite [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eSprite": () => /* binding */ eSprite,
/* harmony export */   "SpriteDsc": () => /* binding */ SpriteDsc,
/* harmony export */   "SPRITES": () => /* binding */ SPRITES
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ "./src/Game.ts");

var eSprite;
(function (eSprite) {
    /**
     * Tlacitko pro zavreni okna s vysledky
     */
    eSprite[eSprite["defBtnResOK"] = 0] = "defBtnResOK";
    eSprite[eSprite["arc8BtnResOK"] = 1] = "arc8BtnResOK";
})(eSprite || (eSprite = {}));
class SpriteDsc {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(name, frameKeys) {
        this._name = name;
        this._frameKeys = frameKeys;
    }
    get name() { return this._name; }
    get frameKeys() { return this._frameKeys; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getSpriteAssetId() {
        if (this._assetId == undefined)
            this._assetId = _Game__WEBPACK_IMPORTED_MODULE_0__.Game.app.assets.find(this._name, "sprite" /* sprite */).id;
        return this._assetId;
    }
}
const SPRITES = [
    new SpriteDsc("defBtnResOK", ["results/btnOK_" /* resBtnOK */ + "0", "results/btnOK_" /* resBtnOK */ + "1"]),
    new SpriteDsc("arc8BtnResOK", ["results/btnClose_" /* resBtnOK */ + "0", "results/btnClose_" /* resBtnOK */ + "0"])
];


/***/ }),

/***/ "./src/Utils/AssetLoader.ts":
/*!**********************************!*\
  !*** ./src/Utils/AssetLoader.ts ***!
  \**********************************/
/*! namespace exports */
/*! export AssetLoader [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AssetLoader": () => /* binding */ AssetLoader
/* harmony export */ });
class AssetLoader {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(assetRegistry, urlPrefix = "", maxParallelDownloads = 32) {
        this._assetRegistry = assetRegistry;
        this._urlPrefix = urlPrefix;
        this._maxPrlDownloads = maxParallelDownloads;
        this._queue = [];
        this._queueSize = 0;
        this._isLoading = false;
    }
    /**
     * (RO) True, pokud probiha nacitani
     */
    get isLoading() { return this._isLoading; }
    /**
     * (RO) Aktualni progress (0 az 1)
     */
    get progress() { return this._isLoading ? this._loadedCnt / this._queueSize : 0; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addAsset(name, type, url) {
        let asset = new pc.Asset(name, type, { url: this._urlPrefix + url });
        this._queue[this._queueSize++] = asset;
        return asset;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    load() {
        if (this._isLoading || this._queueSize == 0)
            return;
        this._isLoading = true;
        this._queuePos = 0;
        this._loadedCnt = 0;
        this._prlDownloads = 0;
        while (this._prlDownloads < this._maxPrlDownloads && this._queuePos < this._queueSize) {
            this.loadNextAsset();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    loadNextAsset() {
        // Ziskat asset z fronty
        let asset = this._queue[this._queuePos++];
        // Pridat asset do registru
        this._assetRegistry.add(asset);
        // Nacist asset
        this._prlDownloads++;
        this._assetRegistry.loadFromUrl(asset.file.url, asset.type, (err, asset) => {
            this._prlDownloads--;
            this._loadedCnt++;
            if (this._queuePos < this._queueSize) {
                // Zahajit nacteni dalsiho assetu
                this.loadNextAsset();
            }
            else if (this._loadedCnt == this._queueSize) {
                this._queue.length = 0;
                this._queueSize = 0;
                this._isLoading = false;
                // Vsechny assety byly nacteny
                this._assetRegistry.fire(AssetLoader.EVENT_LOADED, this, this._loadedCnt);
            }
        });
    }
}
/**
 * Udalost vyvolana po dokonceni nacteni vsech assetu
 * Emitter: assetRegistry
 * Parametery: loader: AssetLoader, loadedCnt: number
 */
AssetLoader.EVENT_LOADED = "loader:loaded";


/***/ }),

/***/ "./src/Utils/Collections/Node.ts":
/*!***************************************!*\
  !*** ./src/Utils/Collections/Node.ts ***!
  \***************************************/
/*! namespace exports */
/*! export Node [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Node": () => /* binding */ Node
/* harmony export */ });
/**
 * @author Tomas Frinta
 * @version
 * 0.01 (25.4.2019)
 * 0.02 (16.12.2019)
 * - null nahrazeno undefined
 */
class Node {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(data) {
        this.data = data;
    }
    /**
     * (RO) Reference na predchozi uzel v retezci
     */
    get prev() { return this._prev; }
    /**
     * (RO) Reference na nasledujici uzel v retezci
     */
    get next() { return this._next; }
    //-------------------------------------------------------------------------
    /**
     * Pridani uzlu do retezce uzlu
     * @param neighbor sousedni uzel
     * @param asNext True, pokud se ma uzel pridat za sousedni uzel. False, pokud se ma uzel pridat pred soudni uzel.
     */
    //-------------------------------------------------------------------------
    addToChain(neighbor, asNext = true) {
        this._prev = undefined;
        this._next = undefined;
        if (neighbor != undefined) {
            if (asNext) {
                if ((this._next = neighbor._next) != undefined)
                    this._next._prev = this;
                neighbor._next = this;
                this._prev = neighbor;
            }
            else {
                if ((this._prev = neighbor._prev) != undefined)
                    this._prev._next = this;
                neighbor._prev = this;
                this._next = neighbor;
            }
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Odsrtaneni uzlu z retezce uzlu
     */
    //-------------------------------------------------------------------------
    removeFromChain() {
        if (this._prev != undefined)
            this._prev._next = this._next;
        if (this._next != undefined)
            this._next._prev = this._prev;
        this._prev = undefined;
        this._next = undefined;
    }
}


/***/ }),

/***/ "./src/Utils/Collections/NodeList.ts":
/*!*******************************************!*\
  !*** ./src/Utils/Collections/NodeList.ts ***!
  \*******************************************/
/*! namespace exports */
/*! export NodeList [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NodeList": () => /* binding */ NodeList
/* harmony export */ });
/* harmony import */ var _Node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Node */ "./src/Utils/Collections/Node.ts");
/* harmony import */ var _Pool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pool */ "./src/Utils/Collections/Pool.ts");
/**
 * @author Tomas Frinta
 * @version
 * 1.00
 * 1.01 (16.12.2019) null nahrazeno undefined
 * 1.02 (05.02.2020) add vraci uzel s pridanou polozkou
 */


class NodeList {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._nodePool = new _Pool__WEBPACK_IMPORTED_MODULE_1__.Pool(undefined, 0, true, () => {
            return new _Node__WEBPACK_IMPORTED_MODULE_0__.Node();
        }, this);
        this._firstNode = undefined;
        this._lastNode = undefined;
        this._itemCnt = 0;
    }
    get first() { return (this._firstNode != undefined ? this._firstNode.data : undefined); }
    get last() { return (this._lastNode != undefined ? this._lastNode.data : undefined); }
    get firstNode() { return this._firstNode; }
    get lastNode() { return this._lastNode; }
    /**
     * (RO) Pocet polozek v seznamu
     */
    get size() { return this._itemCnt; }
    /**
     * (RO) True, pokud je seznam prazdny
     */
    get empty() { return this._itemCnt == 0; }
    //-------------------------------------------------------------------------
    /**
     * Vyprazdneni seznamu
     */
    //-------------------------------------------------------------------------
    clear() {
        let node = this._firstNode;
        while (node != undefined) {
            this._nodePool.returnItem(node);
            node = node.next;
        }
        this._firstNode = undefined;
        this._lastNode = undefined;
        this._itemCnt = 0;
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Pridani polozky do seznamu
     * @param item
     * @param id
     */
    //-------------------------------------------------------------------------
    add(item, id) {
        let node = this._nodePool.getItem();
        if (id == undefined || id >= this._itemCnt) {
            // Pridat jako posledni polozku
            node.addToChain(this._lastNode);
        }
        else {
            if (id == 0) {
                // Pridat jako prvni polozku
                node.addToChain(this._firstNode, false);
            }
            else {
                // Najit polozku, za kterou se ma nova polozka pridat
                node.addToChain(this.getItemById(id - 1));
            }
        }
        if (node.prev == undefined)
            this._firstNode = node;
        if (node.next == undefined)
            this._lastNode = node;
        node.data = item;
        this._itemCnt++;
        return node;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    addAfterNode(item, prevNode) {
        let node = this._nodePool.getItem();
        node.addToChain(prevNode, true);
        if (node.prev == undefined)
            this._firstNode = node;
        if (node.next == undefined)
            this._lastNode = node;
        node.data = item;
        this._itemCnt++;
        return node;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    removeById(id) {
        let node = this.getItemById(id);
        if (node == undefined)
            return undefined;
        return this.removeByNode(node);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    removeByNode(node) {
        if (this._firstNode == node)
            this._firstNode = node.next;
        if (this._lastNode == node)
            this._lastNode = node.prev;
        node.removeFromChain();
        this._nodePool.returnItem(node);
        this._itemCnt--;
        return node.data;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getItemById(id) {
        if (id < 0 || id >= this._itemCnt)
            return undefined;
        let node;
        if (id < (this._itemCnt >> 1)) {
            // Hledani od prvniho uzlu
            node = this._firstNode;
            while (id-- != 0)
                node = node.next;
        }
        else {
            // Hledani od posledniho uzlu
            let _id = this._itemCnt;
            node = this._lastNode;
            while (--_id != id)
                node = node.prev;
        }
        return node;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    forEach(clb, clbCtx) {
        let node = this._firstNode;
        let i = 0;
        while (node != undefined) {
            let nextNode = node.next;
            clb.call(clbCtx, node.data, node, i++);
            node = nextNode;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    every(clb, clbCtx) {
        let node = this._firstNode;
        while (node != undefined) {
            let nextNode = node.next;
            if (!clb.call(clbCtx, node.data, node))
                break;
            node = nextNode;
        }
        return this;
    }
}


/***/ }),

/***/ "./src/Utils/Collections/Pool.ts":
/*!***************************************!*\
  !*** ./src/Utils/Collections/Pool.ts ***!
  \***************************************/
/*! namespace exports */
/*! export Pool [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pool": () => /* binding */ Pool
/* harmony export */ });
/**
 * @author Tomas Frinta
 * @version
 * 1.00 (9.4.2019)
 * 1.01 (18.12.2019)
 * - pridana metoda createItems()
 */
class Pool {
    //-------------------------------------------------------------------------
    /**
     * Konstruktor
     * @param itemType Typ polozky, pokud jeji konstruktor nepotrebuje parametry. Jinak null nebo undefined a polozka se bude vytvaret pres callback.
     * @param defSize Vychozi velikost poolu. Default = 0.
     * @param canGrow True, pokud se buffer poolu muze zvetsovat. Default = true.
     * @param itemCreateClb Callback pro vytvoreni nove polozky poolu. Default = null.
     * @param itemCreateClbCtx Context pro callback. Default = undefined
     */
    //-------------------------------------------------------------------------
    constructor(itemType, defSize = 0, canGrow = true, itemCreateClb, itemCreateClbCtx) {
        this._itemType = itemType;
        this._itemCreateClb = itemCreateClb;
        this._itemCreateClbCtx = itemCreateClbCtx;
        this._canGrow = canGrow;
        this._pool = [];
        while (defSize-- != 0)
            this._pool.push(this.newItem());
        this._size = this._pool.length;
        this._allocItemCnt = this._size;
    }
    /**
    * (RO) Aktualni pocet polozek v poolu
    */
    get size() { return this._size; }
    /**
    * (RO) True, pokud se pool muze zvetsovat pocet polozek nad ramec vychoziho poctu zadaneho v konstruktoru
    */
    get canGrow() { return this._canGrow; }
    /**
    * (RO) Celkovy pocet alokovanych polozek
    */
    get allocatedItemCnt() { return this._allocItemCnt; }
    //-------------------------------------------------------------------------
    /**
     * Vytvori pozadovany pocet polozek v poolu. Ignoruje "canGrouw".
     * @param cnt Pocet polozek, ktere chceme pridat do poolu
     */
    //-------------------------------------------------------------------------
    createItems(cnt) {
        while (cnt-- != 0) {
            this._pool.push(this.newItem());
            this._size++;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Ziskani polozky z poolu
     */
    //-------------------------------------------------------------------------
    getItem() {
        if (this._size == 0) {
            return (this._canGrow ? this.newItem() : undefined);
        }
        else {
            let item = this._pool[--this._size];
            this._pool[this._size] = undefined;
            return item;
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Vraceni polozky do poolu
     * @param item
     * @returns Polozka vracena do poolu
     */
    //-------------------------------------------------------------------------
    returnItem(item) {
        this._pool[this._size++] = item;
        return item;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    newItem() {
        this._allocItemCnt++;
        if (this._itemCreateClb) {
            return this._itemCreateClb.call(this._itemCreateClbCtx, this._size);
        }
        else {
            return new this._itemType();
        }
    }
}


/***/ }),

/***/ "./src/Utils/Collections/WrapperArray.ts":
/*!***********************************************!*\
  !*** ./src/Utils/Collections/WrapperArray.ts ***!
  \***********************************************/
/*! namespace exports */
/*! export WrappedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WrappedArray": () => /* binding */ WrappedArray
/* harmony export */ });
/**
 * @author Tomas Frinta
 * @version 1.00 (10.4.2019)
 *
 * verze 1.01 (13.6.2019)
 * - Metoda reset() zmenena na metodu clear() s moznosti odstraneni polozek pole.
 *
 * verze: 1.02 (9.7.2019)
 * - foreach() predava callbacku index polozky
 *
 * verze: 1.03 (5.2.2020)
 * - null nahrazeno undefined
 */
class WrappedArray {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this._array = [];
        this._firstItemId = 0;
        this._size = 0;
    }
    /**
    * (RO) Celkovy pocet polozek v poli
    */
    get size() { return this._size; }
    /**
     * (RO) True, pokud je pole prazdne
     */
    get empty() { return this._size == 0; }
    /**
     * (RO) Prvni polozka v poli nebo undefined, pokud je pole prazdne
     */
    get first() { return this.getItemAtIndex(0); }
    /**
     * (RO) Posledni polozka v poli nebo undefined, pokud je pole prazdne
     */
    get last() { return this.getItemAtIndex(this._size - 1); }
    //-------------------------------------------------------------------------
    /**
     * Pridani nove polozky do pole
     * @param item Polozka, kterou chceme pridat
     * @param atTheEnd True, pokud chceme polozku pridat jako polsedni polozku. False pokud jako prvni polozku. (vychozi hodnota je true)
     */
    //-------------------------------------------------------------------------
    add(item, atTheEnd = true) {
        // Zajistit misto pro novou polozku
        this.ensureSpaceForNewItem(atTheEnd);
        let itemId;
        if (atTheEnd) {
            // Pridat polozku za posledni existujici
            itemId = this.itemId2ItemArrayPos(this._size);
        }
        else {
            // Pridat polozku pred prvni existujici
            if (this._size != 0) {
                itemId = this._firstItemId - 1;
                if (itemId < 0)
                    itemId = this._array.length - 1;
            }
            else {
                itemId = 0;
            }
            this._firstItemId = itemId;
        }
        this._array[itemId] = item;
        this._size++;
        return item;
    }
    //-------------------------------------------------------------------------
    /**
     * Odstraneni polozky z pole
     * @param atTheEnd True, pokud se ma odstranit posledni polozka. False, pokud se ma odstranit prvni polozka. (vychozi hodnota je true)
     */
    //-------------------------------------------------------------------------
    remove(atTheEnd = true) {
        let item;
        if (this._size != 0) {
            if (atTheEnd) {
                // Odstranit posledni poozku
                let itemId = this.itemId2ItemArrayPos(this._size - 1);
                item = this._array[itemId];
                this._array[itemId] = undefined;
            }
            else {
                // Odstranit prvni polozku
                item = this._array[this._firstItemId];
                this._array[this._firstItemId] = undefined;
                if (++this._firstItemId == this._array.length)
                    this._firstItemId = 0;
            }
            this._size--;
        }
        return item;
    }
    //-------------------------------------------------------------------------
    /**
     * Vyprazdneni pole
     * @param removeItems Pokud true, tak vsechny polozky pole nastavi na undefied. Pokud false, tak pouze resetuje velikost pole na 0. (default = true)
     */
    //-------------------------------------------------------------------------
    clear(removeItems = true) {
        if (removeItems) {
            let itemCnt = this._size;
            let itemId = this._firstItemId;
            while (itemCnt-- != 0) {
                this._array[itemId] = undefined;
                if (++itemId == this._array.length)
                    itemId = 0;
            }
        }
        this._firstItemId = 0;
        this._size = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    getItemAtIndex(itemId) {
        if (itemId >= this._size)
            return undefined;
        return this._array[this.itemId2ItemArrayPos(itemId)];
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setItemAtIndex(itemId, value) {
        if (itemId >= this._size)
            throw new Error("Index out of bounds");
        this._array[this.itemId2ItemArrayPos(itemId)] = value;
    }
    //-------------------------------------------------------------------------
    /**
     * Vola zadanou callback funkci pro kazdou polozku pole.
     * @param callback
     * @param context
     */
    //-------------------------------------------------------------------------
    forEach(callback, context) {
        let remItemCnt = this._size;
        if (remItemCnt == 0)
            return;
        let itemId = this._firstItemId;
        while (remItemCnt-- != 0) {
            callback.call(context, this._array[itemId], itemId);
            if (++itemId == this._array.length)
                itemId = 0;
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Vola zadanou callback funkci pro kazdou polozku pole. Volani se prerusi, pokud callback funkce vrati false.
     * @param callback
     * @param context
     */
    //-------------------------------------------------------------------------
    every(callback, context) {
        let remItemCnt = this._size;
        if (remItemCnt == 0)
            return;
        let itemId = this._firstItemId;
        while (remItemCnt-- != 0) {
            if (!callback.call(context, this._array[itemId]))
                break;
            if (++itemId == this._array.length)
                itemId = 0;
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Zajistit misto pro novou polozku na konci nebo na zacatku pole
     * @param atTheEnd True, pokud se ma misto pro polozku zajistit za posledni polozkou pole
     */
    //-------------------------------------------------------------------------
    ensureSpaceForNewItem(atTheEnd) {
        if (this._size < this._array.length)
            // V poli jeste je misto
            return;
        if (this._size != 0) {
            // V poli jiz neni misto a obsahuje polozky
            if (this._firstItemId != 0) {
                // Zajistit, aby polozky zacinali na pozici 0
                this._array = this.toArray();
                this._firstItemId = 0;
            }
            if (!atTheEnd) {
                // Pripravit misto pro polozku na zacatku pole
                this._array.unshift(undefined);
                this._firstItemId = 1;
                return;
            }
        }
        // Pripravit misto pro polozku na konci pole
        this._array.push(undefined);
    }
    //-------------------------------------------------------------------------
    /**
     * Prekopiruje polozky ze stareho pole do noveho. Index prvni polozku bude 0. Velikosti noveho pole bude rovna poctu polozek v poli, takze nove pole muze byt mensi nez puvodni.
     */
    //-------------------------------------------------------------------------
    toArray() {
        let newArray = [];
        let oldArray = this._array;
        let itemCnt = this._size;
        let itemId = this._firstItemId;
        while (itemCnt-- != 0) {
            newArray.push(oldArray[itemId]);
            if (++itemId == this._array.length)
                itemId = 0;
        }
        return newArray;
    }
    //-------------------------------------------------------------------------
    /**
     * Prevod indexu polozky na pozici polozky v poli
     * @param itemId
     */
    //-------------------------------------------------------------------------
    itemId2ItemArrayPos(itemId) {
        itemId += this._firstItemId;
        if (itemId >= this._array.length)
            itemId -= this._array.length;
        return itemId;
    }
}


/***/ }),

/***/ "./src/Utils/Models/CubeMesh.ts":
/*!**************************************!*\
  !*** ./src/Utils/Models/CubeMesh.ts ***!
  \**************************************/
/*! namespace exports */
/*! export CubeMesh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CubeMesh": () => /* binding */ CubeMesh
/* harmony export */ });
class CubeMesh {
    //-------------------------------------------------------------------------
    /**
     *
     * @param gd
     * @param size Velikost cube
     * @param origin Pozice originu. Z do hloubky jde do minusu. Pokud nezadano, tak origin bude umisten ve stredu cube.
     * @param color Barva pro vrcholy nebo seznam barev pro jednotlive faces
     * @param faceMask Maska jednotlivych face, ktere ma mesh obsahovat. Pokud nezadano, tak jsou vytvoreny vsechny face
     */
    //-------------------------------------------------------------------------
    static createMesh(gd, size, origin, color, faceMask = 0x3F) {
        if (!origin)
            origin = new pc.Vec3(size.x / 2, size.y / 2, -size.z / 2);
        let positions = [];
        let indices = [];
        let vertexCnt = 0;
        // Front face
        if ((faceMask & (1 << CubeMesh.FACE_FRONT)) != 0) {
            positions.push(-origin.x, -origin.y, -origin.z, -origin.x, size.y - origin.y, -origin.z, size.x - origin.x, size.y - origin.y, -origin.z, size.x - origin.x, -origin.y, -origin.z);
            indices.push(3, 1, 0, 3, 2, 1);
            vertexCnt += 4;
        }
        // Back face
        if ((faceMask & (1 << CubeMesh.FACE_BACK)) != 0) {
            positions.push(size.x - origin.x, -origin.y, -size.z - origin.z, -origin.x, -origin.y, -size.z - origin.z, -origin.x, size.y - origin.y, -size.z - origin.z, size.x - origin.x, size.y - origin.y, -size.z - origin.z);
            indices.push(1 + vertexCnt, 3 + vertexCnt, vertexCnt, 1 + vertexCnt, 2 + vertexCnt, 3 + vertexCnt);
            vertexCnt += 4;
        }
        // Top face
        if ((faceMask & (1 << CubeMesh.FACE_TOP)) != 0) {
            positions.push(-origin.x, size.y - origin.y, -origin.z, size.x - origin.x, size.y - origin.y, -origin.z, size.x - origin.x, size.y - origin.y, -size.z - origin.z, -origin.x, size.y - origin.y, -size.z - origin.z);
            indices.push(1 + vertexCnt, 3 + vertexCnt, vertexCnt, 1 + vertexCnt, 2 + vertexCnt, 3 + vertexCnt);
            vertexCnt += 4;
        }
        // Bottom face
        if ((faceMask & (1 << CubeMesh.FACE_BOTTOM)) != 0) {
            positions.push(-origin.x, -origin.y, -origin.z, size.x - origin.x, -origin.y, -origin.z, size.x - origin.x, -origin.y, -size.z - origin.z, -origin.x, -origin.y, -size.z - origin.z);
            indices.push(2 + vertexCnt, vertexCnt, 3 + vertexCnt, 2 + vertexCnt, 1 + vertexCnt, vertexCnt);
            vertexCnt += 4;
        }
        // Left face
        if ((faceMask & (1 << CubeMesh.FACE_LEFT)) != 0) {
            positions.push(-origin.x, -origin.y, -size.z - origin.z, -origin.x, size.y - origin.y, -size.z - origin.z, -origin.x, size.y - origin.y, -origin.z, -origin.x, -origin.y, -origin.z);
            indices.push(3 + vertexCnt, 1 + vertexCnt, vertexCnt, 3 + vertexCnt, 2 + vertexCnt, 1 + vertexCnt);
            vertexCnt += 4;
        }
        // Right face
        if ((faceMask & (1 << CubeMesh.FACE_RIGHT)) != 0) {
            positions.push(size.x - origin.x, -origin.y, -origin.z, size.x - origin.x, size.y - origin.y, -origin.z, size.x - origin.x, size.y - origin.y, -size.z - origin.z, size.x - origin.x, -origin.y, -size.z - origin.z);
            indices.push(3 + vertexCnt, 1 + vertexCnt, vertexCnt, 3 + vertexCnt, 2 + vertexCnt, 1 + vertexCnt);
            vertexCnt += 4;
        }
        let mesh = new pc.Mesh(gd);
        mesh.setPositions(positions);
        mesh.setIndices(indices);
        mesh.setNormals(new Float32Array(pc.calculateNormals(positions, indices)));
        if (color) {
            let colors = new Uint8Array(4 * vertexCnt);
            let i = 0;
            if (!Array.isArray(color)) {
                let r = color.r * 255;
                let g = color.g * 255;
                let b = color.b * 255;
                let a = color.a * 255;
                for (let vertexId = 0; vertexId < vertexCnt; vertexId++) {
                    colors[i++] = r;
                    colors[i++] = g;
                    colors[i++] = b;
                    colors[i++] = a;
                }
            }
            else {
                for (let faceId = 0; faceId < 6; faceId++) {
                    if ((faceMask & (1 << faceId)) != 0) {
                        let r = color[faceId].r * 255;
                        let g = color[faceId].g * 255;
                        let b = color[faceId].b * 255;
                        let a = color[faceId].a * 255;
                        for (let vertexId = 0; vertexId < 4; vertexId++) {
                            colors[i++] = r;
                            colors[i++] = g;
                            colors[i++] = b;
                            colors[i++] = a;
                        }
                    }
                }
            }
            mesh.setColors32(colors);
        }
        mesh.update();
        return mesh;
    }
}
CubeMesh.FACE_FRONT = 0;
CubeMesh.FACE_BACK = 1;
CubeMesh.FACE_TOP = 2;
CubeMesh.FACE_BOTTOM = 3;
CubeMesh.FACE_LEFT = 4;
CubeMesh.FACE_RIGHT = 5;


/***/ }),

/***/ "./src/Utils/Models/ModelUtils.ts":
/*!****************************************!*\
  !*** ./src/Utils/Models/ModelUtils.ts ***!
  \****************************************/
/*! namespace exports */
/*! export ModelUtils [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModelUtils": () => /* binding */ ModelUtils
/* harmony export */ });
class ModelUtils {
    //-------------------------------------------------------------------------
    /**
     * Nastaveni opacity pro jednotlive meshe modelu (0 az 1). Material se nemeni, opacity se nastavuje primo jednotlivym meshInstaces v modelu jako parametr "material_opacity".
     * Aby to fungovalo, tak materialy meshy musi mit spravne nastaveny blendMode, ktery podporuje alfa kanal.
     * @param model Model
     * @param opacity 0 az 1
     */
    //-------------------------------------------------------------------------
    static setModelMeshesOpacity(model, opacity) {
        model.meshInstances.forEach((meshIns) => {
            meshIns.setParameter("material_opacity", opacity);
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static showModel(model) {
        let meshInstances = model.meshInstances;
        let i = meshInstances.length;
        while (i-- != 0)
            meshInstances[i].visible = true;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static hideMode(model) {
        let meshInstances = model.meshInstances;
        let i = meshInstances.length;
        while (i-- != 0)
            meshInstances[i].visible = false;
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci index meshInstance v modelu podle jmena node nebo -1, pokud zadne meshInstance nema node s danym jmenem
     */
    //-------------------------------------------------------------------------
    static getMeshInstanceId(model, nodeName) {
        let instances = model.meshInstances;
        for (let i = instances.length - 1; i >= 0; i--) {
            if (instances[i].node.name == nodeName)
                return i;
        }
        return -1;
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci pc.MeshInstance v modelu podle jmena node nebo undefined.
     * @param model
     * @param nodeName
     */
    //-------------------------------------------------------------------------
    static getMeshInstance(model, nodeName) {
        let instances = model.meshInstances;
        for (let i = instances.length - 1; i >= 0; i--) {
            if (instances[i].node.name = nodeName)
                return instances[i];
        }
        return undefined;
    }
    //-------------------------------------------------------------------------    
    //-------------------------------------------------------------------------
    static cloneModelMaterials(model, data, originalMats, clonedMats, assets, assetPrefix, replace = false) {
        model.meshInstances.forEach((mesh, meshId) => {
            let mat = mesh.material;
            let matId = originalMats.findIndex((m) => { return m == mat; });
            originalMats.push(mat);
            if (matId >= 0) {
                clonedMats.push(clonedMats[matId]);
            }
            else {
                clonedMats.push(ModelUtils.cloneMaterial(mat, data, assets, assetPrefix, replace));
            }
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static cloneMaterial(material, data, assets, assetPrefix, replace = false) {
        // Podivat se zda material z danym prefixem jiz je v asset registru
        if (assets) {
            let asset = assets.find(assetPrefix + material.name, "material" /* material */);
            if (asset) {
                if (!replace)
                    return asset.resource;
                asset.resource.destroy();
                assets.remove(asset);
            }
        }
        let mat = material.clone();
        Object.keys(data).forEach((key) => {
            mat[key] = data[key];
        });
        mat.update();
        if (assets) {
            let asset = new pc.Asset(assetPrefix + mat.name, "material" /* material */);
            asset.resource = mat;
            assets.add(asset);
        }
        return mat;
    }
    //-------------------------------------------------------------------------
    /**
     * Vypocita celkovy AABB pro zadanou entitu. Pri vypoctu pouzije i dcerinne entity.
     * @param entity
     * @param res Do teto promenne bude ulozen vysledek
     */
    //-------------------------------------------------------------------------
    static getEntityTotalAABB(entity, res) {
        res.halfExtents.set(0, 0, 0);
        // Total AABB modelu entity
        this.getModelTotalAABB(entity.model, res);
        // Pridat AABB dcerinnych entit
        entity.children.forEach((child) => {
            if (child instanceof pc.Entity)
                this.getModelTotalAABB(child.model, res);
        });
    }
    //-------------------------------------------------------------------------
    /**
     * Vypocita celkovy AABB pro zadany model.
     * @param model
     * @param res
     */
    //-------------------------------------------------------------------------
    static getModelTotalAABB(model, res) {
        if (model) {
            let meshCnt = model.meshInstances.length;
            if (meshCnt != 0) {
                let meshId = 0;
                // Inicializace vysledneho bounding boxu
                if (res.halfExtents.x == 0) {
                    let aabb = model.meshInstances[0].aabb;
                    res.center.copy(aabb.center);
                    res.halfExtents.copy(aabb.halfExtents);
                    meshId = 1;
                }
                while (meshId < meshCnt) {
                    res.add(model.meshInstances[meshId++].aabb);
                }
            }
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Vytvori pozadovany pocet klonu zakladniho modelu a ulozi je do app.assets. Kazdy klon ma pousunute UV o zadanou hodnotu.
     * @param baseModel
     * @param cloneCnt
     * @param cloneUVShiftX
     * @param cloneUVShiftY
     * @param repository
     * @param meshPosBufSize
     */
    //-------------------------------------------------------------------------
    static createShiftUVsClones(app, baseModel, cloneCnt, cloneUVShiftX, cloneUVShiftY, cloneAssetKetBase, cloneRepo, meshPosBufSize) {
        let models = [];
        baseModel.meshInstances.forEach((baseMeshIns, baseMeshInsId) => {
            let baseMesh = baseMeshIns.mesh;
            // Pozice vrcholu
            let verPositions = new Float32Array(meshPosBufSize);
            let verCnt = baseMesh.getPositions(verPositions);
            // UVs
            let uvs = new Float32Array(verCnt * 2);
            baseMesh.getUvs(0, uvs);
            // Indicies
            let indicies = new Uint32Array(verCnt * 2);
            let indiciesCnt = baseMesh.getIndices(indicies);
            // Normals
            let normals = new Float32Array(verCnt * 3);
            baseMesh.getNormals(normals);
            for (let cloneId = 0; cloneId < cloneCnt; cloneId++) {
                // Vytvorit model
                let model;
                if (baseMeshInsId == 0) {
                    let node = new pc.GraphNode();
                    model = new pc.Model();
                    model.graph = node;
                    models.push(model);
                }
                else {
                    model = models[cloneId];
                }
                // Posun UVs pro klon
                if (cloneId != 0) {
                    for (let i = 0; i < verCnt; i++) {
                        uvs[i << 1] += cloneUVShiftX;
                        uvs[(i << 1) + 1] += cloneUVShiftY;
                    }
                }
                // Vytvorit mesh
                let mesh = new pc.Mesh(app.graphicsDevice);
                mesh.setPositions(verPositions, 3, verCnt);
                mesh.setUvs(0, uvs, 2, verCnt);
                mesh.setIndices(indicies, indiciesCnt);
                mesh.setNormals(normals, 3, verCnt);
                mesh.update();
                // Vytvorit mesh instancy a pridat ji do modelu
                model.meshInstances.push(new pc.MeshInstance(mesh, baseMeshIns.material, model.graph));
            }
        });
        // Z modelu vytvorit assety a ulozit je do assets
        models.forEach((model, i) => {
            let asset = new pc.Asset(cloneAssetKetBase + "_" + i, pc.ASSET_MODEL);
            asset.resource = model;
            app.assets.add(asset);
            cloneRepo.push(asset);
        });
    }
    //-------------------------------------------------------------------------
    /**
     * Vytvoreni modelu se zadanymi meshy
     * @param meshes Pole mesh
     * @param meshMaterials Materialy pro jednotlive mesh
     */
    //-------------------------------------------------------------------------
    static createModel(meshes, meshMaterials) {
        let node = new pc.GraphNode();
        let model = new pc.Model();
        model.graph = node;
        if (!meshMaterials)
            meshMaterials = new pc.Material();
        meshes.forEach((mesh, i) => {
            model.meshInstances.push(new pc.MeshInstance(mesh, Array.isArray(meshMaterials) ? meshMaterials[i] : meshMaterials, node));
        });
        return model;
    }
}


/***/ }),

/***/ "./src/Utils/PopupMessage.ts":
/*!***********************************!*\
  !*** ./src/Utils/PopupMessage.ts ***!
  \***********************************/
/*! namespace exports */
/*! export PopupMessageBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PopupMessageType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PopupMessageType": () => /* binding */ PopupMessageType,
/* harmony export */   "PopupMessageBase": () => /* binding */ PopupMessageBase
/* harmony export */ });
class PopupMessageType {
    //---------------------------------------------------------------------
    /**
     * Konstruktor
     * @param moveDistance Vzdalenost, kterou ma zprava urazit na jednotlivych osach
     * @param moveTime Doba, za kterou ma zprava vzdalenost urazit (ms)
     * @param moveEase Ease funce, ktera se ma pouzit pro presun
     * @param alphaDelay Prodleva, nez se zacne menit alfa (ms). Pokud  nezadano, tak se alfa nepocita.
     * @param alphaTime Cas, po ktery se ma menit alfa (ms)
     * @param alphaEase Ease funkce pro zmenu alfy
     */
    //---------------------------------------------------------------------
    constructor(moveDistance, moveTime, moveEase, alphaDelay = -1, alphaTime, alphaEase) {
        this._moveDistance = moveDistance;
        this._moveTime = moveTime;
        this._moveEase = moveEase;
        this._alphaDelay = alphaDelay;
        this._alphaTime = alphaTime;
        this._alphaEase = alphaEase;
    }
    /**
    * (RO) Vzdalenost, kterou ma zprava urazit
    */
    get moveDistance() { return this._moveDistance; }
    /**
    * (RO) Doba, za kterou ma zprava vzdalenost urazit
    */
    get moveTime() { return this._moveTime; }
    /**
    * (RO) Ease funce, ktera se ma pouzit pro presun
    */
    get moveEase() { return this._moveEase; }
    /**
    * (RO) Prodleva, nez se zacne menit alfa
    */
    get alphaDelay() { return this._alphaDelay; }
    /**
    * (RO) Cas, po ktery se ma menit alfa
    */
    get alphaTime() { return this._alphaTime; }
    /**
    * (RO) Ease funkce pro zmenu alfy
    */
    get alphaEase() { return this._alphaEase; }
}
class PopupMessageBase {
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    constructor() {
        this._startPos = new pc.Vec3();
        this._progress = -1;
    }
    //---------------------------------------------------------------------
    /**
     * Aktualizace
     * @return True, pokud je zprava stale aktivni
     */
    //---------------------------------------------------------------------
    update() {
        if (this._progress < 0)
            return false;
        let time = this._timer.time - this._startTime;
        let completeMask = 0;
        // Pohyb
        let progress = time / this._type.moveTime;
        if (progress >= 1) {
            progress = 1;
            completeMask |= 1;
        }
        this._progress = progress;
        let progressEased = this._type.moveEase(progress);
        let moveDis = this._type.moveDistance;
        let pos = PopupMessageBase._tmpVec3;
        pos.x = this._startPos.x + moveDis.x * progressEased;
        pos.y = this._startPos.y + moveDis.y * progressEased;
        pos.z = this._startPos.z + moveDis.z * progressEased;
        // Alfa
        let alpha = 1;
        if (this._type.alphaDelay >= 0) {
            if (time > this._type.alphaDelay) {
                progress = (time - this._type.alphaDelay) / this._type.alphaTime;
                if (progress >= 1) {
                    progress = 1;
                    completeMask |= 2;
                }
                alpha = 1 - this._type.alphaEase(progress);
            }
        }
        else {
            completeMask |= 2;
        }
        // Aktualizovat kontejner
        this.updateContainer(pos, alpha);
        if (completeMask == 3) {
            this.release();
            return false;
        }
        return true;
    }
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    showMessage(x, y, z, type, timer) {
        this._timer = timer;
        this._type = type;
        this._progress = 0;
        this._startPos.set(x, y, z);
        this._startTime = timer.time;
        this.updateContainer(this._startPos, 1);
    }
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    release() {
        this._progress = -1;
    }
}
PopupMessageBase._tmpVec3 = new pc.Vec3();


/***/ }),

/***/ "./src/Utils/ProtectedValue.ts":
/*!*************************************!*\
  !*** ./src/Utils/ProtectedValue.ts ***!
  \*************************************/
/*! namespace exports */
/*! export ProtectedValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProtectedValue": () => /* binding */ ProtectedValue
/* harmony export */ });
/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Game */ "./src/Game.ts");

class ProtectedValue {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(value = 0) {
        this.setOffset();
        this._value = value - this._offset;
    }
    get value() { return this._offset + this._value; }
    set value(value) {
        this.setOffset();
        this._value = value - this._offset;
    }
    get isZero() { return this.value == 0; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    add(value) {
        value = this.value + value;
        this.value = value;
        return value;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setToZero() {
        this.value = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setOffset() {
        this._offset = _Game__WEBPACK_IMPORTED_MODULE_0__.rnd2.randomIntIn(0, Number.MAX_SAFE_INTEGER);
    }
}


/***/ }),

/***/ "./src/Utils/RND.ts":
/*!**************************!*\
  !*** ./src/Utils/RND.ts ***!
  \**************************/
/*! namespace exports */
/*! export RND [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RND": () => /* binding */ RND
/* harmony export */ });
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ "./node_modules/seedrandom/index.js");
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);

class RND {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(seed) {
        this.rnd = seedrandom__WEBPACK_IMPORTED_MODULE_0__(seed);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    random() {
        return this.rnd();
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci float v rozsahu min az max
     * @param min
     * @param max
     * @returns
     */
    //-------------------------------------------------------------------------
    randomIn(min, max) {
        return min + this.rnd() * (max - min);
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci integer v rozsahu min az max (vcetne)
     * @param min
     * @param max
     * @returns
     */
    //-------------------------------------------------------------------------
    randomIntIn(min, max) {
        return min + Math.floor(this.rnd() * (max - min + 1));
    }
    //-------------------------------------------------------------------------
    /**
     *
     * @returns Vraci true nebo false
     */
    //-------------------------------------------------------------------------
    randomBool() {
        return this.randomIn(0, 1) >= 0.5;
    }
    //-------------------------------------------------------------------------
    /**
     * Vyber prvku pole s pouzitim priority vyberu pro jednotlive prvky
     * @param priorities Pole s prioritami vyberu pro jednotlive prvky. Prvek musi mit prioritu > 0, aby byl zarazen do vyberu
     * @param resetSelTo Hodnota priority, na kterou ma byt resetovat vybrany prvek
     * @param incUnsel True, pokud ma byt navysena priorita nevybranych prvku
     * @returns Vraci index vybraneho prvku
     */
    //-------------------------------------------------------------------------
    choiceWithPriority(priorities, resetSelTo = 0, incUnsel = true) {
        // Soucet vsech priorit
        let sum = 0;
        let i = priorities.length;
        while (i-- != 0) {
            let p = priorities[i];
            if (p > 0)
                sum += p;
        }
        // Vybrat
        let res;
        if (sum != 0) {
            let sel = this.randomIntIn(0, sum - 1);
            i = priorities.length;
            while (i-- != 0) {
                let p = priorities[i];
                if (p > 0) {
                    if (p > sel) {
                        res = i;
                        // Resetovat prioritu vybrane polozky
                        priorities[i] = resetSelTo;
                        break;
                    }
                    sel -= p;
                }
            }
        }
        else {
            res = this.randomIntIn(0, priorities.length - 1);
        }
        // Navysit prioritu nevybranych polozek
        if (incUnsel) {
            i = priorities.length;
            while (i-- != 0)
                if (i != res)
                    priorities[i]++;
        }
        return res;
    }
}


/***/ }),

/***/ "./src/Utils/ScaleManager.ts":
/*!***********************************!*\
  !*** ./src/Utils/ScaleManager.ts ***!
  \***********************************/
/*! namespace exports */
/*! export ScaleManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScaleManager": () => /* binding */ ScaleManager
/* harmony export */ });
/*
 * @version
 * 0.01 (10.12.2019)
 * 0.02 (22.12.2019)
 */
class ScaleManager {
    //-------------------------------------------------------------------------
    /**
     * Konstruktor
     * @param scaleManager
     * @param minDims Minimalni interni rozliseni hry
     * @param maxDims Maximalni interni rozliseni hry. Pokud x <= 0, tak maximalni sirkce neni limitovana. Pokud y <= 0, tak maximalni vyska neni limitovana.
     */
    //-------------------------------------------------------------------------
    constructor(app, canvas, minDims, maxDims) {
        this._app = app;
        this._canvas = canvas;
        this._curDims = new pc.Vec2(0, 0);
        this._curOutputDims = new pc.Vec2(0, 0);
        this._minDims = minDims;
        this._maxDims = maxDims;
        this._unlimitedWidth = this._maxDims.x <= 0;
        this._unlimitedHeight = this._maxDims.y <= 0;
        if (!this._unlimitedWidth && !this._unlimitedHeight) {
            this._minRatio = Math.min(this._minDims.x, this._maxDims.x) / Math.max(this._minDims.y, this._maxDims.y);
            this._maxRatio = Math.max(this._minDims.x, this._maxDims.x) / Math.min(this._minDims.y, this._maxDims.y);
            if (this._minRatio > this._maxRatio) {
                let i = this._minRatio;
                this._minRatio = this._maxRatio;
                this._maxRatio = i;
            }
        }
        // Zachytavat zmenu rozliseni
        window.addEventListener("resize", () => {
            this.resize();
        }, false);
    }
    get app() { return this._app; }
    /**
     * (RO) Aktualni sirka interniho rozliseni
     */
    get width() { return this._curDims.x; }
    /**
     * (RO) Aktualni vyska interniho rozliseni
     */
    get height() { return this._curDims.y; }
    /**
     * (RO) Aktualni sirka vystupniho rozliseni
     */
    get outputWidth() { return this._curOutputDims.x; }
    /**
     * (RO) Aktualni vyska vystupniho rozliseni
     */
    get outputHeight() { return this._curOutputDims.y; }
    /**
     * (RO) Minimalni sirka interniho rozliseni
     */
    get minWidth() { return Math.min(this._minDims.x, this._maxDims.x); }
    /**
     * (RO) Maximalni sirka interniho rozliseni
     */
    get maxWidth() { return this._unlimitedWidth ? window.innerWidth : Math.max(this._minDims.x, this._maxDims.x); }
    /**
     * (RO) Minimalni vyska interniho rozliseni
     */
    get minHeight() { return Math.min(this._minDims.y, this._maxDims.y); }
    /**
     * (RO) Maximalni vyska interniho rozliseni
     */
    get maxHeight() { return this._unlimitedHeight ? window.innerHeight : Math.max(this._minDims.y, this._maxDims.y); }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    resize() {
        // Vypocitat vystupni rozliseni
        let extResW = window.innerWidth;
        let extResH = window.innerHeight;
        let intResW;
        let intResH;
        if (!this._unlimitedWidth && !this._unlimitedHeight) {
            let ratio = extResW / extResH;
            if (ratio < this._minRatio) {
                extResH = Math.floor(extResW / this._minRatio);
            }
            else if (ratio > this._maxRatio) {
                extResW = Math.floor(extResH * this._maxRatio);
            }
            // Vypocitat interni rozliseni
            intResW = extResW;
            intResH = extResH;
            if (intResW < this._minDims.x) {
                intResH = Math.round(intResH * (this._minDims.x / intResW));
                intResW = this._minDims.x;
            }
            else if (intResW > this._maxDims.x) {
                intResH = Math.round(intResH * (this._maxDims.x / intResW));
                intResW = this._maxDims.x;
            }
            if (intResH < this._minDims.y) {
                intResW = Math.round(intResW * (this._minDims.y / intResH));
                intResH = this._minDims.y;
            }
            else if (intResH > this._maxDims.y) {
                intResW = Math.round(intResW * (this._maxDims.y / intResH));
                intResH = this._maxDims.y;
            }
            intResW = Math.min(Math.max(this._minDims.x, intResW), this._maxDims.x);
            intResH = Math.min(Math.max(this._minDims.y, intResH), this._maxDims.y);
        }
        else if (this._unlimitedWidth) {
            let minH = this._minDims.y;
            let maxH = this._maxDims.y;
            if (minH > maxH) {
                minH = maxH;
                maxH = this._minDims.y;
            }
            intResH = Math.max(minH, Math.min(extResH, maxH));
            intResW = Math.round(extResW * (intResH / extResH));
            if (intResW < this._minDims.x) {
                let scale = intResW / this._minDims.x;
                intResW = this._minDims.x;
                //intResH = Math.round(intResH * scale);
                extResH = Math.round(extResH * scale);
            }
        }
        // Nastavit vystupni rozliseni
        this._curOutputDims.set(extResW, extResH);
        this._canvas.style.width = extResW + "px";
        this._canvas.style.height = extResH + "px";
        this._canvas.style.left = ((window.innerWidth - extResW) / 2) + "px";
        this._canvas.style.top = ((window.innerHeight - extResH) / 2) + "px";
        // Nastavit interni rozliseni
        if (this._curDims.x != intResW || this._curDims.y != intResH) {
            this._curDims.set(intResW, intResH);
            this._app.setCanvasResolution(pc.RESOLUTION_FIXED, intResW, intResH);
            this._app.fire(ScaleManager.EVENT_RESIZE, intResW, intResH);
        }
    }
}
/**
 * Udalost vyvolana pri zmene interniho rozliseni hry.
 * Parametry: w: number, h: number
 * Emitter: app
 */
ScaleManager.EVENT_RESIZE = "scale:resize";


/***/ }),

/***/ "./src/Utils/Score.ts":
/*!****************************!*\
  !*** ./src/Utils/Score.ts ***!
  \****************************/
/*! namespace exports */
/*! export Score [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Score": () => /* binding */ Score
/* harmony export */ });
/* harmony import */ var _ProtectedValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProtectedValue */ "./src/Utils/ProtectedValue.ts");

class Score {
    //-------------------------------------------------------------------------
    /**
     * @param maxMultiplier Max hodnota nasobice (def = 1)
     * @param events Spravce udalosti, pres ktery se budou vyvolavat udalosti skore. Pokud nezadano, tak se udalosti nebudou vyvolavat)
     * @param flags
     */
    //-------------------------------------------------------------------------
    constructor(maxMultiplier = 1, events, flags = Score.FLAG_EMIT_MULTI_CHANGE | Score.FLAG_EMIT_SCORE_CHANGE) {
        this._maxMultiplier = maxMultiplier;
        this._events = events;
        this._flags = flags;
        this._value = new _ProtectedValue__WEBPACK_IMPORTED_MODULE_0__.ProtectedValue();
        this._multiplier = new _ProtectedValue__WEBPACK_IMPORTED_MODULE_0__.ProtectedValue();
    }
    /**
     * Spravce udalosti
     */
    get event() { return this._events; }
    /**
     * Aktualni hodnota skore
     */
    get value() { return this._value.value; }
    set value(val) { this.setValue(val); }
    /**
     * Nasobic skore
     */
    get multiplier() { return this._multiplier.value; }
    set multiplier(value) {
        if (value > this._maxMultiplier)
            value = this._maxMultiplier;
        if (value != this._multiplier.value) {
            this._multiplier.value = value;
            if (this._events && (this._flags & Score.FLAG_EMIT_MULTI_CHANGE) != 0)
                this._events.fire(Score.EVENT_MUTLI_CHANGE, this, value);
        }
    }
    /**
     * (RO) Maximalni hodnota nasobice
     */
    get maxMultiplier() { return this._maxMultiplier; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this.setValue(0);
        this.multiplier = 1;
    }
    //-------------------------------------------------------------------------
    /**
     * Navyseni hodnoty skore
     * @param value Hodnota, o kterou se ma skore navysit (bude vynasobena aktualni hodnotou nasobice)
     * @returns Vraci hodnotu, o kterou se skore skutecne zvedlo (v zavislosti na multiplieru)
     */
    //-------------------------------------------------------------------------
    incScore(value) {
        if (value != 0)
            this.setValue(this.value + (value *= this.multiplier));
        return value;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    setValue(value) {
        if (value < 0)
            value = 0;
        if (value != this._value.value) {
            this._value.value = value;
            if (this._events && (this._flags & Score.FLAG_EMIT_SCORE_CHANGE) != 0)
                this._events.fire(Score.EVENT_SCORE_CHANGE, this, value);
        }
    }
}
/**
 * Udalost vyvolana po zmene skore
 * Parametry:
 * - this: Score
 * - value: number
 */
Score.EVENT_SCORE_CHANGE = "score:change";
/**
 * Udalost vyvolana pri zmene nasobice skore
 * Parametry:
 * - this: Score
 * - value: number
 * - prevValue: number
 */
Score.EVENT_MUTLI_CHANGE = "score:multiChange";
/**
 * Bude se vyvolavat udalost EVENT_SCORE_CHANGE
 */
Score.FLAG_EMIT_SCORE_CHANGE = 0x0001;
/**
 * Bude se vyvolavat udalost EVENT_MUTLI_CHANGE
 */
Score.FLAG_EMIT_MULTI_CHANGE = 0x0002;


/***/ }),

/***/ "./src/Utils/SlideMessage.ts":
/*!***********************************!*\
  !*** ./src/Utils/SlideMessage.ts ***!
  \***********************************/
/*! namespace exports */
/*! export SlideMessageBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SlideMessageType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eSlideMessageState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eSlideMessageState": () => /* binding */ eSlideMessageState,
/* harmony export */   "SlideMessageType": () => /* binding */ SlideMessageType,
/* harmony export */   "SlideMessageBase": () => /* binding */ SlideMessageBase
/* harmony export */ });
var eSlideMessageState;
(function (eSlideMessageState) {
    eSlideMessageState[eSlideMessageState["slideIn"] = 0] = "slideIn";
    eSlideMessageState[eSlideMessageState["slideOutDelay"] = 1] = "slideOutDelay";
    eSlideMessageState[eSlideMessageState["slideOut"] = 2] = "slideOut";
})(eSlideMessageState || (eSlideMessageState = {}));
class SlideMessageType {
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    constructor(slideInTime, slideOutDelay, slideOutTime) {
        this._stateTimes = [
            slideInTime,
            slideOutDelay,
            slideOutTime
        ];
    }
    get stateTimes() { return this._stateTimes; }
    get slideInTime() { return this._stateTimes[eSlideMessageState.slideIn]; }
    get slideOutDelay() { return this._stateTimes[eSlideMessageState.slideOutDelay]; }
    get slideOutTime() { return this._stateTimes[eSlideMessageState.slideOut]; }
}
class SlideMessageBase {
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    constructor(type, timer) {
        this._timer = timer;
        this._type = type;
        this._active = false;
    }
    get active() { return this._active; }
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    reset() {
        this._active = false;
    }
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    update() {
        if (!this._active)
            return false;
        let progress = (this._timer.time - this._stateTime) / this._type.stateTimes[this._state];
        if (progress >= 1)
            progress = 1;
        this.updateContainer(this._state, progress);
        if (progress == 1) {
            if (this._state++ == eSlideMessageState.slideOut) {
                this.reset();
                return false;
            }
            this._stateTime = this._timer.time;
        }
        return true;
    }
    //---------------------------------------------------------------------
    //---------------------------------------------------------------------
    showMessage(type, timer) {
        if (type)
            this._type = type;
        if (timer)
            this._timer = timer;
        this._active = true;
        this._state = eSlideMessageState.slideIn;
        this._stateTime = this._timer.time;
        this.updateContainer(eSlideMessageState.slideIn, 0);
    }
}


/***/ }),

/***/ "./src/Utils/SoundManager.ts":
/*!***********************************!*\
  !*** ./src/Utils/SoundManager.ts ***!
  \***********************************/
/*! namespace exports */
/*! export SoundManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SoundManager": () => /* binding */ SoundManager
/* harmony export */ });
/* harmony import */ var _Collections_NodeList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");

class SoundManager {
    /**
     * True, pokud se nemaji prehravat zadne zvuky
     */
    static get mute() { return SoundManager._mute; }
    static set mute(mute) { SoundManager._mute = mute; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static createSoundComponent(entity, data) {
        SoundManager._components.add(entity.addComponent("sound" /* sound */, data));
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static addComponent(component) {
        SoundManager._components.add(component);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static remComponent(component) {
        SoundManager._components.every((c, node) => {
            if (c == component) {
                SoundManager._components.removeByNode(node);
                return false;
            }
            return true;
        });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static pause() {
        SoundManager._components.forEach((c) => { c.pause(); });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static resume() {
        SoundManager._components.forEach((c) => { c.resume(); });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static stop() {
        SoundManager._components.forEach((c) => { c.stop(); });
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    static playSound(entity, slotName) {
        if (!SoundManager._mute)
            (entity instanceof pc.Entity ? entity.sound : entity).play(slotName);
    }
    //-------------------------------------------------------------------------
    /**
     * Vytvori pc.SoundSlot v zadane pc.Entity. Entity musi mit pc.SoundComponent
     * @param component Componenta, do ktere chceme pridat slot
     * @param spriteName Jmeno slotu
     * @param sprite Data audio spritu
     * @param assetId Index assetu
     */
    //-------------------------------------------------------------------------
    static addSoundSlot(entity, slotName, sprite, assetId) {
        return entity.sound.addSlot(slotName, {
            asset: assetId,
            loop: sprite.loop,
            startTime: sprite.start,
            duration: sprite.end - sprite.start
        });
    }
}
/**
 * Seznam vsech pc.SoundComponent, ktere spravce ovlada
 */
SoundManager._components = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_0__.NodeList();
SoundManager._mute = false;


/***/ }),

/***/ "./src/Utils/TextuAtlasUtils.ts":
/*!**************************************!*\
  !*** ./src/Utils/TextuAtlasUtils.ts ***!
  \**************************************/
/*! namespace exports */
/*! export TextureAtlasUtils [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextureAtlasUtils": () => /* binding */ TextureAtlasUtils
/* harmony export */ });
class TextureAtlasUtils {
    //-------------------------------------------------------------------------
    /**
     * Vraci region daneho framu v atlasu (U, V, W, H)
     * @param atlas
     * @param frame
     * @param out
     * @returns Pokud frame v atlasu neexistuje, tak vraci undefined
     */
    //-------------------------------------------------------------------------
    static getAtlasFrameRegion(atlas, frameKey, out) {
        // Ziskat snimek
        let frame = atlas.frames[frameKey];
        if (!frame)
            return undefined;
        // Prepocitat
        return TextureAtlasUtils.getTexFrameRegion(atlas.texture, frame.rect, out);
    }
    //-------------------------------------------------------------------------
    /**
     * Vraci region daneho frame v texture (U, V, W, H)
     * @param texture
     * @param frameRect
     * @param out
     */
    //-------------------------------------------------------------------------
    static getTexFrameRegion(texture, frameX, out, frameY, frameW, frameH) {
        let texW = texture.width;
        let texH = texture.height;
        if (!out)
            out = new pc.Vec4();
        if (frameX instanceof pc.Vec4) {
            frameY = frameX.y;
            frameW = frameX.z;
            frameH = frameX.w;
            frameX = frameX.x;
        }
        out.x = frameX / texW;
        out.y = frameY / texH;
        out.z = frameW / texW;
        out.w = frameH / texH;
        return out;
    }
}


/***/ }),

/***/ "./src/Utils/Time/Loop.ts":
/*!********************************!*\
  !*** ./src/Utils/Time/Loop.ts ***!
  \********************************/
/*! namespace exports */
/*! export TimeLoop [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeLoop": () => /* binding */ TimeLoop
/* harmony export */ });
/**
 * Versions:
 * 0.01 (9.12.2019)
 */
/**
 * Umoznuje opakovane volat callback po urcitem case
 */
class TimeLoop {
    //-------------------------------------------------------------------------
    /**
     * Konstruktor
     * @param freeTimers
     * @param actTimers
     */
    //-------------------------------------------------------------------------
    constructor(freeLoops, actLoops, inactLoops) {
        this._freeLoops = freeLoops;
        this._actLoops = actLoops;
        this._inactLoops = inactLoops;
    }
    /**
     * (RO) Delka jednoho cyklu smycky v ms
     */
    get cycleLength() { return this._cycleLen; }
    /**
     * (RO) Zbyvajici pocet opakovani smycky. -1 = smycka se opakuje do nekonecna.
     */
    get remRepeats() { return this._remRepeats; }
    /**
     * (RO) True, if the timer has been started
     */
    get started() { return (this._flags & 1 /* started */) != 0; }
    /**
     * (RO) True, if the started timer has been stopped
     */
    get paused() { return (this._flags & 2 /* paused */) != 0; }
    //-------------------------------------------------------------------------
    /**
     * Vola TimeManager.
     * @param deltaMs
     */
    //-------------------------------------------------------------------------
    _update(deltaMs) {
        if ((this._remTime -= deltaMs) <= 0) {
            // Snizit pocet opakovani smycky
            if (this._remRepeats > 0)
                this._remRepeats--;
            // Nastavit cas dalsiho cyklu smycky
            if (this._remRepeats > 0) {
                if ((this._flags & 8 /* preciseTiming */) != 0) {
                    this._remTime += this._cycleLen;
                }
                else {
                    this._remTime = this._cycleLen;
                }
            }
            // Callback
            this._callback(this._userData);
            if (this._remRepeats == 0)
                this.release();
        }
    }
    //-------------------------------------------------------------------------
    /**
     * Spusteni smycky
     * @param duration Dobra trvani cyklu smycky v ms
     * @param repeats Pocet opakovani smycky. Pokud < 0, tak se opakuje do nekonecna.
     * @param callback Callback, ktery se vola po kazdem dokonceny cyklu smycky
     * @param userData Uzivatelska data, ktera se predavaji do callbacku
     * @param preciseTiming True, pokud se smycka ma casovat presne.
     * Presne casovani znamena, ze celkova doba smycky bude duration * repeats, ale prodleva mezi volanim kazdeho dalsiho callbacku bude pravdepodobne kratsi a kratsi.
     * Default: false
     */
    //-------------------------------------------------------------------------
    start(duration, repeats, callback, userData, preciseTiming = false) {
        if ((this._flags & 1 /* started */) != 0)
            throw new Error("TimeLoop has been already started.");
        this._cycleLen = duration;
        this._remTime = duration;
        if ((this._remRepeats = repeats) == 0)
            this._remRepeats = 1;
        this._callback = callback;
        this._userData = userData;
        if (preciseTiming)
            this._flags |= 8 /* preciseTiming */;
        this._flags |= 1 /* started */;
        this._actLoops.add(this);
        this._listNode = this._actLoops.lastNode;
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Pozastaveni behu smycky
     */
    //-------------------------------------------------------------------------
    pause() {
        this.checkValidity();
        if ((this._flags & (1 /* started */ | 2 /* paused */)) == 1 /* started */) {
            this._flags |= 2 /* paused */;
            this._actLoops.removeByNode(this._listNode);
            this._inactLoops.add(this);
            this._listNode = this._inactLoops.lastNode;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    resume() {
        this.checkValidity();
        if ((this._flags & 2 /* paused */) != 0) {
            this._flags &= ~2 /* paused */;
            this._inactLoops.removeByNode(this._listNode);
            this._actLoops.add(this);
            this._listNode = this._actLoops.lastNode;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Zastaveni smycky a uvolneni jejiho objektu pro nove pouziti.
     * Zastavenou smycku neni mozne dale pouzivat (dojde k jeji vraceni do poolu volnych smycek).
     */
    //-------------------------------------------------------------------------
    release() {
        this.checkValidity();
        // Odebrat smycku ze seznamu
        if ((this._flags & 2 /* paused */) == 0) {
            this._actLoops.removeByNode(this._listNode);
        }
        else {
            this._inactLoops.removeByNode(this._listNode);
        }
        this._listNode = undefined;
        // Nastavit smycku jako neinicializovanou
        this._flags = 0;
        // Vratit smycku do poolu volnych smycek
        this._freeLoops.returnItem(this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    checkValidity() {
        if ((this._flags & 1 /* started */) == 0)
            throw new Error("TimeLoop has not been started yet");
    }
}
var eFlag;
(function (eFlag) {
    eFlag[eFlag["started"] = 1] = "started";
    eFlag[eFlag["paused"] = 2] = "paused";
    eFlag[eFlag["uninitialized"] = 4] = "uninitialized";
    eFlag[eFlag["preciseTiming"] = 8] = "preciseTiming";
})(eFlag || (eFlag = {}));


/***/ }),

/***/ "./src/Utils/Time/TimeManager.ts":
/*!***************************************!*\
  !*** ./src/Utils/Time/TimeManager.ts ***!
  \***************************************/
/*! namespace exports */
/*! export TimeManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TimeManager": () => /* binding */ TimeManager
/* harmony export */ });
/* harmony import */ var _Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");
/* harmony import */ var _Timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Timer */ "./src/Utils/Time/Timer.ts");
/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Loop */ "./src/Utils/Time/Loop.ts");




class TimeManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor() {
        this.deltaRatio = 0;
        this.deltaS = 0;
        this.deltaMs = 0;
        // Casovace
        this._actTimers = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
        this._inactTimers = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
        this._freeTimers = new _Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 0, true, () => {
            return new _Timer__WEBPACK_IMPORTED_MODULE_2__.Timer(this, this._freeTimers, this._actTimers, this._inactTimers);
        }, this);
        // Casove smycky
        this._actLoops = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
        this._inactLoops = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
        this._freeLoops = new _Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, 0, true, () => {
            return new _Loop__WEBPACK_IMPORTED_MODULE_3__.TimeLoop(this._freeLoops, this._actLoops, this._inactLoops);
        }, this);
    }
    //-------------------------------------------------------------------------
    /**
     * Odstrani vsechny casovace, prodlevy, ...
     */
    //-------------------------------------------------------------------------
    reset() {
        this._actTimers.forEach((timer) => { timer.release(); });
        this._inactTimers.forEach((timer) => { timer.release(); });
        this._actLoops.forEach((loop) => { loop.release(); });
        this._inactLoops.forEach((loop) => { loop.release(); });
    }
    //-------------------------------------------------------------------------
    /**
     * Vytvoreni casovace
     */
    //-------------------------------------------------------------------------
    createTimer() {
        return this._freeTimers.getItem()
            ._initialize();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    createLoop() {
        return this._freeLoops.getItem();
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update(deltaS) {
        this.deltaS = deltaS;
        this.deltaMs = deltaS * 1000;
        this.deltaRatio = this.deltaMs / (1000 / 60);
        this._actTimers.forEach((timer) => { timer._update(this.deltaMs); });
        this._actLoops.forEach((loop) => { loop._update(this.deltaMs); });
    }
}


/***/ }),

/***/ "./src/Utils/Time/Timer.ts":
/*!*********************************!*\
  !*** ./src/Utils/Time/Timer.ts ***!
  \*********************************/
/*! namespace exports */
/*! export Timer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Timer": () => /* binding */ Timer
/* harmony export */ });
/**
 * Versions:
 * 0.01 (9.12.2019)
 *
 * 0.02 (20.1.2020)
 * - pridano deltaS
 */
class Timer {
    //-------------------------------------------------------------------------
    /**
     * Constructor. New Timer object is created by TimeManager.createTimer()
     * @param manager
     * @param freeTimers
     * @param actTimers
     */
    //-------------------------------------------------------------------------
    constructor(manager, freeTimers, actTimers, inactTimers) {
        this._manager = manager;
        this._freeTimers = freeTimers;
        this._actTimers = actTimers;
        this._inactTimers = inactTimers;
        this._time = 0;
        this._flags = 4 /* uninitialized */;
    }
    /**
     * (RO) Spravce casu, kteremu casovac patri
     */
    get manager() { return this._manager; }
    /**
     * (RO) Elapsed time in ms
     */
    get time() { return this._time; }
    /**
     * (RO) Pomer vuci pozadovane rychlosti hry. 1 = 100% rychlost, 2 = 50% rychlost, ...
     * Pokud casovac nebezi tak 0.
     */
    get deltaRatio() {
        if ((this._flags & 1 /* started */) != 0)
            return this._manager.deltaRatio;
        return 0;
    }
    /**
     * (RO) Cas v ms od posledniho snimku. Pokud casovac nebezi, tak 0.
     */
    get deltaMs() {
        if ((this._flags & 1 /* started */) != 0)
            return this._manager.deltaMs;
        return 0;
    }
    /**
     * (RO) Cas ve vterinach od posledniho snimku. Pokud casovac nebezi, tak 0.
     */
    get deltaS() {
        if ((this._flags & 1 /* started */) != 0)
            return this._manager.deltaS;
        return 0;
    }
    /**
     * (RO) True, if the timer has been started
     */
    get started() { return (this._flags & 1 /* started */) != 0; }
    /**
     * (RO) True, if the started timer has been stopped
     */
    get paused() { return (this._flags & 2 /* paused */) != 0; }
    //-------------------------------------------------------------------------
    /**
     * Vola TimeManager.
     */
    //-------------------------------------------------------------------------
    _initialize() {
        this._flags = 0;
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Vola TimeManager.
     * @param deltaMs
     */
    //-------------------------------------------------------------------------
    _update(deltaMs) {
        this._time += deltaMs;
    }
    //-------------------------------------------------------------------------
    /**
     * Spusteni casovace.
     * Pokud casovac uz bezi, tak ho vynuluje.
     * Pokud je casovac pozastaven, tak ho vynuluje a spusti
     */
    //-------------------------------------------------------------------------
    start() {
        this.checkValidity(false);
        this._time = 0;
        if ((this._flags & 1 /* started */) == 0 || (this._flags & 2 /* paused */) != 0) {
            if ((this._flags & 2 /* paused */) != 0)
                this._inactTimers.removeByNode(this._listNode);
            this._actTimers.add(this);
            this._listNode = this._actTimers.lastNode;
            this._flags |= 1 /* started */;
            this._flags &= ~2 /* paused */;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Pozastaveni casovace. Pokud je jiz spusten, tak se nic nestane.
     */
    //-------------------------------------------------------------------------
    pause() {
        this.checkValidity(true);
        if ((this._flags & (1 /* started */ | 2 /* paused */)) == 1 /* started */) {
            this._flags |= 2 /* paused */;
            this._actTimers.removeByNode(this._listNode);
            this._inactTimers.add(this);
            this._listNode = this._inactTimers.lastNode;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Obnoveni behu pozastaveneho casovace. Pokud neni pozastaven, tak se nic nestane.
     */
    //-------------------------------------------------------------------------
    resume() {
        this.checkValidity(true);
        if ((this._flags & 2 /* paused */) != 0) {
            this._flags &= ~2 /* paused */;
            this._inactTimers.removeByNode(this._listNode);
            this._actTimers.add(this);
            this._listNode = this._actTimers.lastNode;
        }
        return this;
    }
    //-------------------------------------------------------------------------
    /**
     * Uvolneni objektu casovace pro jiny casovas.
     * Uvolneny casovac neni mozne dale pouzivat (dojde k jeho vraceni do poolu volnych casovacu).
     */
    //-------------------------------------------------------------------------
    release() {
        this.checkValidity(false);
        // Odebrat casovac ze seznamu bezicich casovacu
        if (this._listNode) {
            if ((this._flags & 2 /* paused */) == 0) {
                this._actTimers.removeByNode(this._listNode);
            }
            else {
                this._inactTimers.removeByNode(this._listNode);
            }
            this._listNode = undefined;
        }
        // Nastavit casovac jako neinicializovany
        this._time = 0;
        this._flags = 4 /* uninitialized */;
        // Vratit casovac do poolu volnych casovacu
        this._freeTimers.returnItem(this);
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    checkValidity(reqStarted) {
        if ((this._flags & 4 /* uninitialized */) != 0)
            throw new Error("Timer has not been initialized!");
        if (reqStarted && (this._flags & 1 /* started */) == 0)
            throw new Error("Timer has not been started yet!");
    }
}
var eFlag;
(function (eFlag) {
    eFlag[eFlag["started"] = 1] = "started";
    eFlag[eFlag["paused"] = 2] = "paused";
    eFlag[eFlag["uninitialized"] = 4] = "uninitialized";
})(eFlag || (eFlag = {}));


/***/ }),

/***/ "./src/Utils/UI Elements/ProgressBar.ts":
/*!**********************************************!*\
  !*** ./src/Utils/UI Elements/ProgressBar.ts ***!
  \**********************************************/
/*! namespace exports */
/*! export ProgressBar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eProgressBarDir [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eProgressBarDir": () => /* binding */ eProgressBarDir,
/* harmony export */   "ProgressBar": () => /* binding */ ProgressBar
/* harmony export */ });
/* harmony import */ var _TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TextuAtlasUtils */ "./src/Utils/TextuAtlasUtils.ts");

var eProgressBarDir;
(function (eProgressBarDir) {
    eProgressBarDir[eProgressBarDir["horizontalR"] = 0] = "horizontalR";
    eProgressBarDir[eProgressBarDir["horizontalL"] = 1] = "horizontalL";
    eProgressBarDir[eProgressBarDir["verticalU"] = 2] = "verticalU";
    eProgressBarDir[eProgressBarDir["verticalD"] = 3] = "verticalD";
})(eProgressBarDir || (eProgressBarDir = {}));
class ProgressBar {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(atlas, barFrameKey, fillingFrameKey, fillingX = 0, fillingY = 0, dir = 0 /* horizontalR */) {
        this._tmpRc = new pc.Vec4();
        this._texture = atlas.texture;
        this._dir = dir;
        // Pozadi
        let bar = new pc.Entity("progressBar");
        let barFrameRc = atlas.frames[barFrameKey].rect;
        this._entity = bar;
        bar.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: atlas.texture,
            width: barFrameRc.z,
            height: barFrameRc.w,
            anchor: [0.5, 1, 0.5, 1],
            pivot: [0.5, 1]
        });
        _TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_0__.TextureAtlasUtils.getTexFrameRegion(this._texture, barFrameRc, this._tmpRc);
        bar.element.rect = this._tmpRc;
        // Vypln
        let filling = new pc.Entity();
        let fillingFrameRc = atlas.frames[fillingFrameKey].rect;
        this._fillingFrameRc = fillingFrameRc;
        this._fillingEl = filling.addComponent("element" /* element */, {
            type: pc.ELEMENTTYPE_IMAGE,
            texture: atlas.texture,
            width: this._fillingFrameRc.z,
            height: this._fillingFrameRc.w,
        });
        _TextuAtlasUtils__WEBPACK_IMPORTED_MODULE_0__.TextureAtlasUtils.getTexFrameRegion(this._texture, fillingFrameRc, this._tmpRc);
        this._fillingEl.rect = this._tmpRc;
        this._fillingEl.anchor.set(0, 0, 0, 0);
        filling.setLocalPosition(fillingX, fillingY, 0);
        if (dir == 1 /* horizontalL */) {
            this._fillingEl.pivot.set(1, 0);
        }
        else if (dir == 3 /* verticalD */) {
            this._fillingEl.pivot.set(0, 1);
        }
        bar.addChild(filling);
        // Stav
        this._state = 0;
        this.updateFilling();
    }
    /**
     * (RO) Entita s progress barem
     */
    get entity() { return this._entity; }
    /**
     * Stav progress baru v rozsahu 0 az 1
     */
    get state() { return this._state; }
    set state(state) {
        if (this._state != state) {
            this._state = state;
            this.updateFilling();
        }
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    updateFilling() {
        if (this._dir == 1 /* horizontalL */ || this._dir == 0 /* horizontalR */) {
            let w = Math.round(this._state * this._fillingFrameRc.z);
            if (this._dir == 1 /* horizontalL */)
                this._fillingEl.rect.x = (this._fillingFrameRc.x + this._fillingFrameRc.z - w) / this._texture.width;
            this._fillingEl.rect.z = w / this._texture.width;
            this._fillingEl.width = w;
        }
        else {
            let h = Math.round(this._state * this._fillingFrameRc.w);
            if (this._dir == 3 /* verticalD */)
                this._fillingEl.rect.y = (this._fillingFrameRc.y + this._fillingFrameRc.w - h) / this._texture.height;
            this._fillingEl.rect.w = h / this._texture.height;
            this._fillingEl.height = h;
        }
        this._fillingEl.rect = this._fillingEl.rect;
    }
}


/***/ }),

/***/ "./src/Utils/UpdatableItems.ts":
/*!*************************************!*\
  !*** ./src/Utils/UpdatableItems.ts ***!
  \*************************************/
/*! namespace exports */
/*! export UpdatableItemManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UpdatableItemManager": () => /* binding */ UpdatableItemManager
/* harmony export */ });
/* harmony import */ var _Collections_Pool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Collections/Pool */ "./src/Utils/Collections/Pool.ts");
/* harmony import */ var _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Collections/NodeList */ "./src/Utils/Collections/NodeList.ts");


/**
 * Spravce aktualizovatelnych polozek.
 */
class UpdatableItemManager {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(defSize, canGrow, createItemClb, createItemClbCtx) {
        this._freeItems = new _Collections_Pool__WEBPACK_IMPORTED_MODULE_0__.Pool(undefined, defSize, canGrow, createItemClb, createItemClbCtx);
        this._actItems = new _Collections_NodeList__WEBPACK_IMPORTED_MODULE_1__.NodeList();
    }
    /**
     * (RO) Seznam s aktivnimi polozkami
     */
    get items() { return this._actItems; }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._actItems.forEach((item) => { this._freeItems.returnItem(item.reset()); }, this);
        this._actItems.clear();
    }
    //-------------------------------------------------------------------------
    /**
     * Aktivace polozky.
     * @returns Vraci aktivovanou polozku
     */
    //-------------------------------------------------------------------------
    activateItem() {
        let item = this._freeItems.getItem();
        if (item)
            this._actItems.add(item);
        return item;
    }
    //-------------------------------------------------------------------------
    /**
     * Vola metodu update() u aktivnich polozek. Pokud metoda vrati false, tak polozku odstrani ze seznamu aktivnich.
     */
    //-------------------------------------------------------------------------
    update() {
        this._actItems.forEach((item, node) => {
            if (!item.update()) {
                this._freeItems.returnItem(item.reset());
                this._actItems.removeByNode(node);
            }
        }, this);
    }
}


/***/ }),

/***/ "./src/Utils/ValueShaker.ts":
/*!**********************************!*\
  !*** ./src/Utils/ValueShaker.ts ***!
  \**********************************/
/*! namespace exports */
/*! export ValueShaker [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eValueShakerMode [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eValueShakerMode": () => /* binding */ eValueShakerMode,
/* harmony export */   "ValueShaker": () => /* binding */ ValueShaker
/* harmony export */ });
var eValueShakerMode;
(function (eValueShakerMode) {
    /**
    * Hodnota se meni do iniValue +- valueMaxChange
    */
    eValueShakerMode[eValueShakerMode["around"] = 0] = "around";
    /**
    * Hodnota se meni do iniValue + valueMaxChange
    */
    eValueShakerMode[eValueShakerMode["fromTo"] = 1] = "fromTo";
})(eValueShakerMode || (eValueShakerMode = {}));
class ValueShaker {
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    constructor(cycleTime, cycleCnt, iniValue, valueMaxChange, mode) {
        this._cycleIniLen = cycleTime;
        this._cycleIniCnt = cycleCnt;
        this._cycleIniDis = valueMaxChange;
        this._iniValue = iniValue;
        this._mode = mode;
        this._outEase = this.linearEase;
        this._inEase = this.linearEase;
        this._active = false;
    }
    /**
    * (RO) True, pokud je shaker aktivni
    */
    get active() {
        return this._active;
    }
    /**
    * (RO) Aktualni hodnota shakeru
    */
    get value() {
        return (this._active ? this._curValue : this._iniValue);
    }
    linearEase(value) {
        return value;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    start(time) {
        this._active = true;
        this._cycleStartTime = time;
        this._cycleLen = this._cycleIniLen;
        this._cycleDis = this._cycleIniDis;
        this._cycleCnt = 0;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    reset() {
        this._active = false;
    }
    //-------------------------------------------------------------------------
    //-------------------------------------------------------------------------
    update(time) {
        if (!this._active)
            return this._iniValue;
        let cycleTotalTime = (time - this._cycleStartTime);
        do {
            let cycleTime = Math.min(cycleTotalTime, this._cycleLen);
            let cycleProgress = cycleTime / (this._cycleLen / 2);
            cycleTotalTime -= cycleTime;
            if (cycleProgress <= 1) {
                this._curValue = this._outEase.call(this, cycleProgress) * this._cycleDis;
            }
            else {
                if (cycleProgress > 2)
                    cycleProgress = 2;
                this._curValue = this._inEase.call(this, 1 - (cycleProgress - 1)) * this._cycleDis;
            }
            if (cycleProgress == 2) {
                if (++this._cycleCnt != this._cycleIniCnt) {
                    // Zacit novy cyklus
                    this._cycleStartTime += this._cycleLen;
                    this._cycleLen = (this._cycleIniLen / this._cycleIniCnt) * (this._cycleIniCnt - this._cycleCnt);
                    let cycleDir = (this._cycleDis > 0 ? -1 : 1);
                    this._cycleDis = (this._cycleIniDis / this._cycleIniCnt) * (this._cycleIniCnt - this._cycleCnt);
                    if (this._mode == 0 /* around */) {
                        this._cycleDis *= cycleDir;
                    }
                    cycleTotalTime = time - this._cycleStartTime;
                }
                else {
                    // Vsechny cykly dokonceny
                    this._active = false;
                    return this._iniValue;
                }
            }
        } while (cycleTotalTime != 0);
        return this._iniValue + this._curValue;
    }
}


/***/ }),

/***/ "./src/AsmCrypto/aes/aes.asm.js":
/*!**************************************!*\
  !*** ./src/AsmCrypto/aes/aes.asm.js ***!
  \**************************************/
/*! namespace exports */
/*! export AES_asm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AES_asm": () => /* binding */ AES_asm
/* harmony export */ });
/**
 * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.
 * @author Artem S Vybornov <vybornov@gmail.com>
 * @license MIT
 */
var AES_asm = function () {
  "use strict";

  /**
   * Galois Field stuff init flag
   */
  var ginit_done = false;

  /**
   * Galois Field exponentiation and logarithm tables for 3 (the generator)
   */
  var gexp3, glog3;

  /**
   * Init Galois Field tables
   */
  function ginit() {
    gexp3 = [],
      glog3 = [];

    var a = 1, c, d;
    for (c = 0; c < 255; c++) {
      gexp3[c] = a;

      // Multiply by three
      d = a & 0x80, a <<= 1, a &= 255;
      if (d === 0x80) a ^= 0x1b;
      a ^= gexp3[c];

      // Set the log table value
      glog3[gexp3[c]] = c;
    }
    gexp3[255] = gexp3[0];
    glog3[0] = 0;

    ginit_done = true;
  }

  /**
   * Galois Field multiplication
   * @param {number} a
   * @param {number} b
   * @return {number}
   */
  function gmul(a, b) {
    var c = gexp3[(glog3[a] + glog3[b]) % 255];
    if (a === 0 || b === 0) c = 0;
    return c;
  }

  /**
   * Galois Field reciprocal
   * @param {number} a
   * @return {number}
   */
  function ginv(a) {
    var i = gexp3[255 - glog3[a]];
    if (a === 0) i = 0;
    return i;
  }

  /**
   * AES stuff init flag
   */
  var aes_init_done = false;

  /**
   * Encryption, Decryption, S-Box and KeyTransform tables
   *
   * @type {number[]}
   */
  var aes_sbox;

  /**
   * @type {number[]}
   */
  var aes_sinv;

  /**
   * @type {number[][]}
   */
  var aes_enc;

  /**
   * @type {number[][]}
   */
  var aes_dec;

  /**
   * Init AES tables
   */
  function aes_init() {
    if (!ginit_done) ginit();

    // Calculates AES S-Box value
    function _s(a) {
      var c, s, x;
      s = x = ginv(a);
      for (c = 0; c < 4; c++) {
        s = ((s << 1) | (s >>> 7)) & 255;
        x ^= s;
      }
      x ^= 99;
      return x;
    }

    // Tables
    aes_sbox = [],
      aes_sinv = [],
      aes_enc = [[], [], [], []],
      aes_dec = [[], [], [], []];

    for (var i = 0; i < 256; i++) {
      var s = _s(i);

      // S-Box and its inverse
      aes_sbox[i] = s;
      aes_sinv[s] = i;

      // Ecryption and Decryption tables
      aes_enc[0][i] = (gmul(2, s) << 24) | (s << 16) | (s << 8) | gmul(3, s);
      aes_dec[0][s] = (gmul(14, i) << 24) | (gmul(9, i) << 16) | (gmul(13, i) << 8) | gmul(11, i);
      // Rotate tables
      for (var t = 1; t < 4; t++) {
        aes_enc[t][i] = (aes_enc[t - 1][i] >>> 8) | (aes_enc[t - 1][i] << 24);
        aes_dec[t][s] = (aes_dec[t - 1][s] >>> 8) | (aes_dec[t - 1][s] << 24);
      }
    }

    aes_init_done = true;
  }

  /**
   * Asm.js module constructor.
   *
   * <p>
   * Heap buffer layout by offset:
   * <pre>
   * 0x0000   encryption key schedule
   * 0x0400   decryption key schedule
   * 0x0800   sbox
   * 0x0c00   inv sbox
   * 0x1000   encryption tables
   * 0x2000   decryption tables
   * 0x3000   reserved (future GCM multiplication lookup table)
   * 0x4000   data
   * </pre>
   * Don't touch anything before <code>0x400</code>.
   * </p>
   *
   * @alias AES_asm
   * @class
   * @param foreign - <i>ignored</i>
   * @param buffer - heap buffer to link with
   */
  var wrapper = function (foreign, buffer) {
    // Init AES stuff for the first time
    if (!aes_init_done) aes_init();

    // Fill up AES tables
    var heap = new Uint32Array(buffer);
    heap.set(aes_sbox, 0x0800 >> 2);
    heap.set(aes_sinv, 0x0c00 >> 2);
    for (var i = 0; i < 4; i++) {
      heap.set(aes_enc[i], (0x1000 + 0x400 * i) >> 2);
      heap.set(aes_dec[i], (0x2000 + 0x400 * i) >> 2);
    }

    /**
     * Calculate AES key schedules.
     * @instance
     * @memberof AES_asm
     * @param {number} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)
     * @param {number} k0 - key vector components
     * @param {number} k1 - key vector components
     * @param {number} k2 - key vector components
     * @param {number} k3 - key vector components
     * @param {number} k4 - key vector components
     * @param {number} k5 - key vector components
     * @param {number} k6 - key vector components
     * @param {number} k7 - key vector components
     */
    function set_key(ks, k0, k1, k2, k3, k4, k5, k6, k7) {
      var ekeys = heap.subarray(0x000, 60),
        dkeys = heap.subarray(0x100, 0x100 + 60);

      // Encryption key schedule
      ekeys.set([k0, k1, k2, k3, k4, k5, k6, k7]);
      for (var i = ks, rcon = 1; i < 4 * ks + 28; i++) {
        var k = ekeys[i - 1];
        if ((i % ks === 0) || (ks === 8 && i % ks === 4)) {
          k = aes_sbox[k >>> 24] << 24 ^ aes_sbox[k >>> 16 & 255] << 16 ^ aes_sbox[k >>> 8 & 255] << 8 ^ aes_sbox[k & 255];
        }
        if (i % ks === 0) {
          k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);
          rcon = (rcon << 1) ^ ((rcon & 0x80) ? 0x1b : 0);
        }
        ekeys[i] = ekeys[i - ks] ^ k;
      }

      // Decryption key schedule
      for (var j = 0; j < i; j += 4) {
        for (var jj = 0; jj < 4; jj++) {
          var k = ekeys[i - (4 + j) + (4 - jj) % 4];
          if (j < 4 || j >= i - 4) {
            dkeys[j + jj] = k;
          } else {
            dkeys[j + jj] = aes_dec[0][aes_sbox[k >>> 24]]
              ^ aes_dec[1][aes_sbox[k >>> 16 & 255]]
              ^ aes_dec[2][aes_sbox[k >>> 8 & 255]]
              ^ aes_dec[3][aes_sbox[k & 255]];
          }
        }
      }

      // Set rounds number
      asm.set_rounds(ks + 5);
    }

    // create library object with necessary properties
    var stdlib = {Uint8Array: Uint8Array, Uint32Array: Uint32Array};

    var asm = function (stdlib, foreign, buffer) {
      "use asm";

      var S0 = 0, S1 = 0, S2 = 0, S3 = 0,
        I0 = 0, I1 = 0, I2 = 0, I3 = 0,
        N0 = 0, N1 = 0, N2 = 0, N3 = 0,
        M0 = 0, M1 = 0, M2 = 0, M3 = 0,
        H0 = 0, H1 = 0, H2 = 0, H3 = 0,
        R = 0;

      var HEAP = new stdlib.Uint32Array(buffer),
        DATA = new stdlib.Uint8Array(buffer);

      /**
       * AES core
       * @param {number} k - precomputed key schedule offset
       * @param {number} s - precomputed sbox table offset
       * @param {number} t - precomputed round table offset
       * @param {number} r - number of inner rounds to perform
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _core(k, s, t, r, x0, x1, x2, x3) {
        k = k | 0;
        s = s | 0;
        t = t | 0;
        r = r | 0;
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        var t1 = 0, t2 = 0, t3 = 0,
          y0 = 0, y1 = 0, y2 = 0, y3 = 0,
          i = 0;

        t1 = t | 0x400, t2 = t | 0x800, t3 = t | 0xc00;

        // round 0
        x0 = x0 ^ HEAP[(k | 0) >> 2],
          x1 = x1 ^ HEAP[(k | 4) >> 2],
          x2 = x2 ^ HEAP[(k | 8) >> 2],
          x3 = x3 ^ HEAP[(k | 12) >> 2];

        // round 1..r
        for (i = 16; (i | 0) <= (r << 4); i = (i + 16) | 0) {
          y0 = HEAP[(t | x0 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x1 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x2 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],
            y1 = HEAP[(t | x1 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x2 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x3 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],
            y2 = HEAP[(t | x2 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x3 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x0 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],
            y3 = HEAP[(t | x3 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x0 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x1 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];
          x0 = y0, x1 = y1, x2 = y2, x3 = y3;
        }

        // final round
        S0 = HEAP[(s | x0 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x1 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x2 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],
          S1 = HEAP[(s | x1 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x2 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x3 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],
          S2 = HEAP[(s | x2 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x3 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x0 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],
          S3 = HEAP[(s | x3 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x0 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x1 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];
      }

      /**
       * ECB mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _ecb_enc(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          x0,
          x1,
          x2,
          x3
        );
      }

      /**
       * ECB mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _ecb_dec(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        var t = 0;

        _core(
          0x0400, 0x0c00, 0x2000,
          R,
          x0,
          x3,
          x2,
          x1
        );

        t = S1, S1 = S3, S3 = t;
      }


      /**
       * CBC mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _cbc_enc(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          I0 ^ x0,
          I1 ^ x1,
          I2 ^ x2,
          I3 ^ x3
        );

        I0 = S0,
          I1 = S1,
          I2 = S2,
          I3 = S3;
      }

      /**
       * CBC mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _cbc_dec(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        var t = 0;

        _core(
          0x0400, 0x0c00, 0x2000,
          R,
          x0,
          x3,
          x2,
          x1
        );

        t = S1, S1 = S3, S3 = t;

        S0 = S0 ^ I0,
          S1 = S1 ^ I1,
          S2 = S2 ^ I2,
          S3 = S3 ^ I3;

        I0 = x0,
          I1 = x1,
          I2 = x2,
          I3 = x3;
      }

      /**
       * CFB mode encryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _cfb_enc(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          I0,
          I1,
          I2,
          I3
        );

        I0 = S0 = S0 ^ x0,
          I1 = S1 = S1 ^ x1,
          I2 = S2 = S2 ^ x2,
          I3 = S3 = S3 ^ x3;
      }


      /**
       * CFB mode decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _cfb_dec(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          I0,
          I1,
          I2,
          I3
        );

        S0 = S0 ^ x0,
          S1 = S1 ^ x1,
          S2 = S2 ^ x2,
          S3 = S3 ^ x3;

        I0 = x0,
          I1 = x1,
          I2 = x2,
          I3 = x3;
      }

      /**
       * OFB mode encryption / decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _ofb(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          I0,
          I1,
          I2,
          I3
        );

        I0 = S0,
          I1 = S1,
          I2 = S2,
          I3 = S3;

        S0 = S0 ^ x0,
          S1 = S1 ^ x1,
          S2 = S2 ^ x2,
          S3 = S3 ^ x3;
      }

      /**
       * CTR mode encryption / decryption
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _ctr(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        _core(
          0x0000, 0x0800, 0x1000,
          R,
          N0,
          N1,
          N2,
          N3
        );

        N3 = (~M3 & N3) | M3 & (N3 + 1);
          N2 = (~M2 & N2) | M2 & (N2 + ((N3 | 0) == 0));
          N1 = (~M1 & N1) | M1 & (N1 + ((N2 | 0) == 0));
          N0 = (~M0 & N0) | M0 & (N0 + ((N1 | 0) == 0));

        S0 = S0 ^ x0;
          S1 = S1 ^ x1;
          S2 = S2 ^ x2;
          S3 = S3 ^ x3;
      }

      /**
       * GCM mode MAC calculation
       * @param {number} x0 - 128-bit input block vector
       * @param {number} x1 - 128-bit input block vector
       * @param {number} x2 - 128-bit input block vector
       * @param {number} x3 - 128-bit input block vector
       */
      function _gcm_mac(x0, x1, x2, x3) {
        x0 = x0 | 0;
        x1 = x1 | 0;
        x2 = x2 | 0;
        x3 = x3 | 0;

        var y0 = 0, y1 = 0, y2 = 0, y3 = 0,
          z0 = 0, z1 = 0, z2 = 0, z3 = 0,
          i = 0, c = 0;

        x0 = x0 ^ I0,
          x1 = x1 ^ I1,
          x2 = x2 ^ I2,
          x3 = x3 ^ I3;

        y0 = H0 | 0,
          y1 = H1 | 0,
          y2 = H2 | 0,
          y3 = H3 | 0;

        for (; (i | 0) < 128; i = (i + 1) | 0) {
          if (y0 >>> 31) {
            z0 = z0 ^ x0,
              z1 = z1 ^ x1,
              z2 = z2 ^ x2,
              z3 = z3 ^ x3;
          }

          y0 = (y0 << 1) | (y1 >>> 31),
            y1 = (y1 << 1) | (y2 >>> 31),
            y2 = (y2 << 1) | (y3 >>> 31),
            y3 = (y3 << 1);

          c = x3 & 1;

          x3 = (x3 >>> 1) | (x2 << 31),
            x2 = (x2 >>> 1) | (x1 << 31),
            x1 = (x1 >>> 1) | (x0 << 31),
            x0 = (x0 >>> 1);

          if (c) x0 = x0 ^ 0xe1000000;
        }

        I0 = z0,
          I1 = z1,
          I2 = z2,
          I3 = z3;
      }

      /**
       * Set the internal rounds number.
       * @instance
       * @memberof AES_asm
       * @param {number} r - number if inner AES rounds
       */
      function set_rounds(r) {
        r = r | 0;
        R = r;
      }

      /**
       * Populate the internal state of the module.
       * @instance
       * @memberof AES_asm
       * @param {number} s0 - state vector
       * @param {number} s1 - state vector
       * @param {number} s2 - state vector
       * @param {number} s3 - state vector
       */
      function set_state(s0, s1, s2, s3) {
        s0 = s0 | 0;
        s1 = s1 | 0;
        s2 = s2 | 0;
        s3 = s3 | 0;

        S0 = s0,
          S1 = s1,
          S2 = s2,
          S3 = s3;
      }

      /**
       * Populate the internal iv of the module.
       * @instance
       * @memberof AES_asm
       * @param {number} i0 - iv vector
       * @param {number} i1 - iv vector
       * @param {number} i2 - iv vector
       * @param {number} i3 - iv vector
       */
      function set_iv(i0, i1, i2, i3) {
        i0 = i0 | 0;
        i1 = i1 | 0;
        i2 = i2 | 0;
        i3 = i3 | 0;

        I0 = i0,
          I1 = i1,
          I2 = i2,
          I3 = i3;
      }

      /**
       * Set nonce for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} n0 - nonce vector
       * @param {number} n1 - nonce vector
       * @param {number} n2 - nonce vector
       * @param {number} n3 - nonce vector
       */
      function set_nonce(n0, n1, n2, n3) {
        n0 = n0 | 0;
        n1 = n1 | 0;
        n2 = n2 | 0;
        n3 = n3 | 0;

        N0 = n0,
          N1 = n1,
          N2 = n2,
          N3 = n3;
      }

      /**
       * Set counter mask for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} m0 - counter mask vector
       * @param {number} m1 - counter mask vector
       * @param {number} m2 - counter mask vector
       * @param {number} m3 - counter mask vector
       */
      function set_mask(m0, m1, m2, m3) {
        m0 = m0 | 0;
        m1 = m1 | 0;
        m2 = m2 | 0;
        m3 = m3 | 0;

        M0 = m0,
          M1 = m1,
          M2 = m2,
          M3 = m3;
      }

      /**
       * Set counter for CTR-family modes.
       * @instance
       * @memberof AES_asm
       * @param {number} c0 - counter vector
       * @param {number} c1 - counter vector
       * @param {number} c2 - counter vector
       * @param {number} c3 - counter vector
       */
      function set_counter(c0, c1, c2, c3) {
        c0 = c0 | 0;
        c1 = c1 | 0;
        c2 = c2 | 0;
        c3 = c3 | 0;

        N3 = (~M3 & N3) | M3 & c3,
          N2 = (~M2 & N2) | M2 & c2,
          N1 = (~M1 & N1) | M1 & c1,
          N0 = (~M0 & N0) | M0 & c0;
      }

      /**
       * Store the internal state vector into the heap.
       * @instance
       * @memberof AES_asm
       * @param {number} pos - offset where to put the data
       * @return {number} The number of bytes have been written into the heap, always 16.
       */
      function get_state(pos) {
        pos = pos | 0;

        if (pos & 15) return -1;

        DATA[pos | 0] = S0 >>> 24,
          DATA[pos | 1] = S0 >>> 16 & 255,
          DATA[pos | 2] = S0 >>> 8 & 255,
          DATA[pos | 3] = S0 & 255,
          DATA[pos | 4] = S1 >>> 24,
          DATA[pos | 5] = S1 >>> 16 & 255,
          DATA[pos | 6] = S1 >>> 8 & 255,
          DATA[pos | 7] = S1 & 255,
          DATA[pos | 8] = S2 >>> 24,
          DATA[pos | 9] = S2 >>> 16 & 255,
          DATA[pos | 10] = S2 >>> 8 & 255,
          DATA[pos | 11] = S2 & 255,
          DATA[pos | 12] = S3 >>> 24,
          DATA[pos | 13] = S3 >>> 16 & 255,
          DATA[pos | 14] = S3 >>> 8 & 255,
          DATA[pos | 15] = S3 & 255;

        return 16;
      }

      /**
       * Store the internal iv vector into the heap.
       * @instance
       * @memberof AES_asm
       * @param {number} pos - offset where to put the data
       * @return {number} The number of bytes have been written into the heap, always 16.
       */
      function get_iv(pos) {
        pos = pos | 0;

        if (pos & 15) return -1;

        DATA[pos | 0] = I0 >>> 24,
          DATA[pos | 1] = I0 >>> 16 & 255,
          DATA[pos | 2] = I0 >>> 8 & 255,
          DATA[pos | 3] = I0 & 255,
          DATA[pos | 4] = I1 >>> 24,
          DATA[pos | 5] = I1 >>> 16 & 255,
          DATA[pos | 6] = I1 >>> 8 & 255,
          DATA[pos | 7] = I1 & 255,
          DATA[pos | 8] = I2 >>> 24,
          DATA[pos | 9] = I2 >>> 16 & 255,
          DATA[pos | 10] = I2 >>> 8 & 255,
          DATA[pos | 11] = I2 & 255,
          DATA[pos | 12] = I3 >>> 24,
          DATA[pos | 13] = I3 >>> 16 & 255,
          DATA[pos | 14] = I3 >>> 8 & 255,
          DATA[pos | 15] = I3 & 255;

        return 16;
      }

      /**
       * GCM initialization.
       * @instance
       * @memberof AES_asm
       */
      function gcm_init() {
        _ecb_enc(0, 0, 0, 0);
        H0 = S0,
          H1 = S1,
          H2 = S2,
          H3 = S3;
      }

      /**
       * Perform ciphering operation on the supplied data.
       * @instance
       * @memberof AES_asm
       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
       * @param {number} pos - offset of the data being processed
       * @param {number} len - length of the data being processed
       * @return {number} Actual amount of data have been processed.
       */
      function cipher(mode, pos, len) {
        mode = mode | 0;
        pos = pos | 0;
        len = len | 0;

        var ret = 0;

        if (pos & 15) return -1;

        while ((len | 0) >= 16) {
          _cipher_modes[mode & 7](
            DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],
            DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],
            DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],
            DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]
          );

          DATA[pos | 0] = S0 >>> 24,
            DATA[pos | 1] = S0 >>> 16 & 255,
            DATA[pos | 2] = S0 >>> 8 & 255,
            DATA[pos | 3] = S0 & 255,
            DATA[pos | 4] = S1 >>> 24,
            DATA[pos | 5] = S1 >>> 16 & 255,
            DATA[pos | 6] = S1 >>> 8 & 255,
            DATA[pos | 7] = S1 & 255,
            DATA[pos | 8] = S2 >>> 24,
            DATA[pos | 9] = S2 >>> 16 & 255,
            DATA[pos | 10] = S2 >>> 8 & 255,
            DATA[pos | 11] = S2 & 255,
            DATA[pos | 12] = S3 >>> 24,
            DATA[pos | 13] = S3 >>> 16 & 255,
            DATA[pos | 14] = S3 >>> 8 & 255,
            DATA[pos | 15] = S3 & 255;

          ret = (ret + 16) | 0,
            pos = (pos + 16) | 0,
            len = (len - 16) | 0;
        }

        return ret | 0;
      }

      /**
       * Calculates MAC of the supplied data.
       * @instance
       * @memberof AES_asm
       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
       * @param {number} pos - offset of the data being processed
       * @param {number} len - length of the data being processed
       * @return {number} Actual amount of data have been processed.
       */
      function mac(mode, pos, len) {
        mode = mode | 0;
        pos = pos | 0;
        len = len | 0;

        var ret = 0;

        if (pos & 15) return -1;

        while ((len | 0) >= 16) {
          _mac_modes[mode & 1](
            DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],
            DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],
            DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],
            DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]
          );

          ret = (ret + 16) | 0,
            pos = (pos + 16) | 0,
            len = (len - 16) | 0;
        }

        return ret | 0;
      }

      /**
       * AES cipher modes table (virual methods)
       */
      var _cipher_modes = [_ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr];

      /**
       * AES MAC modes table (virual methods)
       */
      var _mac_modes = [_cbc_enc, _gcm_mac];

      /**
       * Asm.js module exports
       */
      return {
        set_rounds: set_rounds,
        set_state: set_state,
        set_iv: set_iv,
        set_nonce: set_nonce,
        set_mask: set_mask,
        set_counter: set_counter,
        get_state: get_state,
        get_iv: get_iv,
        gcm_init: gcm_init,
        cipher: cipher,
        mac: mac,
      };
    }(stdlib, foreign, buffer);

    asm.set_key = set_key;

    return asm;
  };

  /**
   * AES enciphering mode constants
   * @enum {number}
   * @const
   */
  wrapper.ENC = {
    ECB: 0,
    CBC: 2,
    CFB: 4,
    OFB: 6,
    CTR: 7,
  },

    /**
     * AES deciphering mode constants
     * @enum {number}
     * @const
     */
    wrapper.DEC = {
      ECB: 1,
      CBC: 3,
      CFB: 5,
      OFB: 6,
      CTR: 7,
    },

    /**
     * AES MAC mode constants
     * @enum {number}
     * @const
     */
    wrapper.MAC = {
      CBC: 0,
      GCM: 1,
    };

  /**
   * Heap data offset
   * @type {number}
   * @const
   */
  wrapper.HEAP_DATA = 0x4000;

  return wrapper;
}();


/***/ }),

/***/ "./src/AsmCrypto/bignum/bigint.asm.js":
/*!********************************************!*\
  !*** ./src/AsmCrypto/bignum/bigint.asm.js ***!
  \********************************************/
/*! namespace exports */
/*! export bigint_asm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bigint_asm": () => /* binding */ bigint_asm
/* harmony export */ });
/**
 * Integers are represented as little endian array of 32-bit limbs.
 * Limbs number is a power of 2 and a multiple of 8 (256 bits).
 * Negative values use two's complement representation.
 */
var bigint_asm = function ( stdlib, foreign, buffer ) {
    "use asm";

    var SP = 0;

    var HEAP32 = new stdlib.Uint32Array(buffer);

    var imul = stdlib.Math.imul;

    /**
     * Simple stack memory allocator
     *
     * Methods:
     *  sreset
     *  salloc
     *  sfree
     */

    function sreset ( p ) {
        p = p|0;
        SP = p = (p + 31) & -32;
        return p|0;
    }

    function salloc ( l ) {
        l = l|0;
        var p = 0; p = SP;
        SP = p + ((l + 31) & -32)|0;
        return p|0;
    }

    function sfree ( l ) {
        l = l|0;
        SP = SP - ((l + 31) & -32)|0;
    }

    /**
     * Utility functions:
     *  cp
     *  z
     */

    function cp ( l, A, B ) {
        l = l|0;
        A = A|0;
        B = B|0;

        var i = 0;

        if ( (A|0) > (B|0) ) {
            for ( ; (i|0) < (l|0); i = (i+4)|0 ) {
                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];
            }
        }
        else {
            for ( i = (l-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];
            }
        }
    }

    function z ( l, z, A ) {
        l = l|0;
        z = z|0;
        A = A|0;

        var i = 0;

        for ( ; (i|0) < (l|0); i = (i+4)|0 ) {
            HEAP32[(A+i)>>2] = z;
        }
    }

    /**
     * Negate the argument
     *
     * Perform two's complement transformation:
     *
     *  -A = ~A + 1
     *
     * @param A offset of the argment being negated, 32-byte aligned
     * @param lA length of the argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */
    function neg ( A, lA, R, lR ) {
        A  =  A|0;
        lA = lA|0;
        R  =  R|0;
        lR = lR|0;

        var a = 0, c = 0, t = 0, r = 0, i = 0;

        if ( (lR|0) <= 0 )
            lR = lA;

        if ( (lR|0) < (lA|0) )
            lA = lR;

        c = 1;
        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
            a = ~HEAP32[(A+i)>>2];
            t = (a & 0xffff) + c|0;
            r = (a >>> 16) + (t >>> 16)|0;
            HEAP32[(R+i)>>2] = (r << 16) | (t & 0xffff);
            c = r >>> 16;
        }

        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
            HEAP32[(R+i)>>2] = (c-1)|0;
        }

        return c|0;
    }

    function cmp ( A, lA, B, lB ) {
        A  =  A|0;
        lA = lA|0;
        B  =  B|0;
        lB = lB|0;

        var a = 0, b = 0, i = 0;

        if ( (lA|0) > (lB|0) ) {
            for ( i = (lA-4)|0; (i|0) >= (lB|0); i = (i-4)|0 ) {
                if ( HEAP32[(A+i)>>2]|0 ) return 1;
            }
        }
        else {
            for ( i = (lB-4)|0; (i|0) >= (lA|0); i = (i-4)|0 ) {
                if ( HEAP32[(B+i)>>2]|0 ) return -1;
            }
        }

        for ( ; (i|0) >= 0; i = (i-4)|0 ) {
            a = HEAP32[(A+i)>>2]|0, b = HEAP32[(B+i)>>2]|0;
            if ( (a>>>0) < (b>>>0) ) return -1;
            if ( (a>>>0) > (b>>>0) ) return 1;
        }

        return 0;
    }

    /**
     * Test the argument
     *
     * Same as `cmp` with zero.
     */
    function tst ( A, lA ) {
        A  =  A|0;
        lA = lA|0;

        var i = 0;

        for ( i = (lA-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
            if ( HEAP32[(A+i)>>2]|0 ) return (i+4)|0;
        }

        return 0;
    }

    /**
     * Conventional addition
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-bit aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */
    function add ( A, lA, B, lB, R, lR ) {
        A  =  A|0;
        lA = lA|0;
        B  =  B|0;
        lB = lB|0;
        R  =  R|0;
        lR = lR|0;

        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;

        if ( (lA|0) < (lB|0) ) {
            t = A, A = B, B = t;
            t = lA, lA = lB, lB = t;
        }

        if ( (lR|0) <= 0 )
            lR = lA+4|0;

        if ( (lR|0) < (lB|0) )
            lA = lB = lR;

        for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
            a = HEAP32[(A+i)>>2]|0;
            b = HEAP32[(B+i)>>2]|0;
            t = ( (a & 0xffff) + (b & 0xffff)|0 ) + c|0;
            r = ( (a >>> 16) + (b >>> 16)|0 ) + (t >>> 16)|0;
            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
            c = r >>> 16;
        }

        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
            a = HEAP32[(A+i)>>2]|0;
            t = (a & 0xffff) + c|0;
            r = (a >>> 16) + (t >>> 16)|0;
            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
            c = r >>> 16;
        }

        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
            HEAP32[(R+i)>>2] = c|0;
            c = 0;
        }

        return c|0;
    }

   /**
     * Conventional subtraction
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-bit aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */
    function sub ( A, lA, B, lB, R, lR ) {
        A  =  A|0;
        lA = lA|0;
        B  =  B|0;
        lB = lB|0;
        R  =  R|0;
        lR = lR|0;

        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;

        if ( (lR|0) <= 0 )
            lR = (lA|0) > (lB|0) ? lA+4|0 : lB+4|0;

        if ( (lR|0) < (lA|0) )
            lA = lR;

        if ( (lR|0) < (lB|0) )
            lB = lR;

        if ( (lA|0) < (lB|0) ) {
            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
                a = HEAP32[(A+i)>>2]|0;
                b = HEAP32[(B+i)>>2]|0;
                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;
                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;
                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                c = r >> 16;
            }

            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
                b = HEAP32[(B+i)>>2]|0;
                t = c - (b & 0xffff)|0;
                r = (t >> 16) - (b >>> 16)|0;
                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                c = r >> 16;
            }
        }
        else {
            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
                a = HEAP32[(A+i)>>2]|0;
                b = HEAP32[(B+i)>>2]|0;
                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;
                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;
                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                c = r >> 16;
            }

            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
                a = HEAP32[(A+i)>>2]|0;
                t = (a & 0xffff) + c|0;
                r = (a >>> 16) + (t >> 16)|0;
                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                c = r >> 16;
            }
        }

        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
            HEAP32[(R+i)>>2] = c|0;
        }

        return c|0;
    }

    /**
     * Conventional multiplication
     *
     * TODO implement Karatsuba algorithm for large multiplicands
     *
     * @param A offset of the first argument, 32-byte aligned
     * @param lA length of the first argument, multiple of 32
     *
     * @param B offset of the second argument, 32-byte aligned
     * @param lB length of the second argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     * @param lR length to truncate the result to, multiple of 32
     */
    function mul ( A, lA, B, lB, R, lR ) {
        A  =  A|0;
        lA = lA|0;
        B  =  B|0;
        lB = lB|0;
        R  =  R|0;
        lR = lR|0;

        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,
            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,
            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,
            u = 0, v = 0, w = 0, m = 0,
            i = 0, Ai = 0, j = 0, Bj = 0, Rk = 0;

        if ( (lA|0) > (lB|0) ) {
            u = A, v = lA;
            A = B, lA = lB;
            B = u, lB = v;
        }

        m = (lA+lB)|0;
        if ( ( (lR|0) > (m|0) ) | ( (lR|0) <= 0 ) )
            lR = m;

        if ( (lR|0) < (lA|0) )
            lA = lR;

        if ( (lR|0) < (lB|0) )
            lB = lR;

        for ( ; (i|0) < (lA|0); i = (i+32)|0 ) {
            Ai = (A+i)|0;

            ah0 = HEAP32[(Ai|0)>>2]|0,
            ah1 = HEAP32[(Ai|4)>>2]|0,
            ah2 = HEAP32[(Ai|8)>>2]|0,
            ah3 = HEAP32[(Ai|12)>>2]|0,
            ah4 = HEAP32[(Ai|16)>>2]|0,
            ah5 = HEAP32[(Ai|20)>>2]|0,
            ah6 = HEAP32[(Ai|24)>>2]|0,
            ah7 = HEAP32[(Ai|28)>>2]|0,
            al0 = ah0 & 0xffff,
            al1 = ah1 & 0xffff,
            al2 = ah2 & 0xffff,
            al3 = ah3 & 0xffff,
            al4 = ah4 & 0xffff,
            al5 = ah5 & 0xffff,
            al6 = ah6 & 0xffff,
            al7 = ah7 & 0xffff,
            ah0 = ah0 >>> 16,
            ah1 = ah1 >>> 16,
            ah2 = ah2 >>> 16,
            ah3 = ah3 >>> 16,
            ah4 = ah4 >>> 16,
            ah5 = ah5 >>> 16,
            ah6 = ah6 >>> 16,
            ah7 = ah7 >>> 16;

            r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = 0;

            for ( j = 0; (j|0) < (lB|0); j = (j+32)|0 ) {
                Bj = (B+j)|0;
                Rk = (R+(i+j|0))|0;

                bh0 = HEAP32[(Bj|0)>>2]|0,
                bh1 = HEAP32[(Bj|4)>>2]|0,
                bh2 = HEAP32[(Bj|8)>>2]|0,
                bh3 = HEAP32[(Bj|12)>>2]|0,
                bh4 = HEAP32[(Bj|16)>>2]|0,
                bh5 = HEAP32[(Bj|20)>>2]|0,
                bh6 = HEAP32[(Bj|24)>>2]|0,
                bh7 = HEAP32[(Bj|28)>>2]|0,
                bl0 = bh0 & 0xffff,
                bl1 = bh1 & 0xffff,
                bl2 = bh2 & 0xffff,
                bl3 = bh3 & 0xffff,
                bl4 = bh4 & 0xffff,
                bl5 = bh5 & 0xffff,
                bl6 = bh6 & 0xffff,
                bl7 = bh7 & 0xffff,
                bh0 = bh0 >>> 16,
                bh1 = bh1 >>> 16,
                bh2 = bh2 >>> 16,
                bh3 = bh3 >>> 16,
                bh4 = bh4 >>> 16,
                bh5 = bh5 >>> 16,
                bh6 = bh6 >>> 16,
                bh7 = bh7 >>> 16;

                r0 = HEAP32[(Rk|0)>>2]|0,
                r1 = HEAP32[(Rk|4)>>2]|0,
                r2 = HEAP32[(Rk|8)>>2]|0,
                r3 = HEAP32[(Rk|12)>>2]|0,
                r4 = HEAP32[(Rk|16)>>2]|0,
                r5 = HEAP32[(Rk|20)>>2]|0,
                r6 = HEAP32[(Rk|24)>>2]|0,
                r7 = HEAP32[(Rk|28)>>2]|0;

                u = ((imul(al0, bl0)|0) + (r8 & 0xffff)|0) + (r0 & 0xffff)|0;
                v = ((imul(ah0, bl0)|0) + (r8 >>> 16)|0) + (r0 >>> 16)|0;
                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r0 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl1)|0) + (m & 0xffff)|0) + (r1 & 0xffff)|0;
                v = ((imul(ah0, bl1)|0) + (m >>> 16)|0) + (r1 >>> 16)|0;
                w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r1 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl2)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;
                v = ((imul(ah0, bl2)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;
                w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r2 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl3)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                v = ((imul(ah0, bl3)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r3 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl4)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                v = ((imul(ah0, bl4)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r4 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl5)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah0, bl5)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl6)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah0, bl6)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al0, bl7)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah0, bl7)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                r8 = m;

                u = ((imul(al1, bl0)|0) + (r9 & 0xffff)|0) + (r1 & 0xffff)|0;
                v = ((imul(ah1, bl0)|0) + (r9 >>> 16)|0) + (r1 >>> 16)|0;
                w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r1 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl1)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;
                v = ((imul(ah1, bl1)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;
                w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r2 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl2)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                v = ((imul(ah1, bl2)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r3 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl3)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                v = ((imul(ah1, bl3)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r4 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl4)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah1, bl4)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl5)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah1, bl5)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl6)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah1, bl6)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al1, bl7)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah1, bl7)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                r9 = m;

                u = ((imul(al2, bl0)|0) + (r10 & 0xffff)|0) + (r2 & 0xffff)|0;
                v = ((imul(ah2, bl0)|0) + (r10 >>> 16)|0) + (r2 >>> 16)|0;
                w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r2 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl1)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                v = ((imul(ah2, bl1)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r3 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl2)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                v = ((imul(ah2, bl2)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r4 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl3)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah2, bl3)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl4)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah2, bl4)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl5)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah2, bl5)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl6)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah2, bl6)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al2, bl7)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah2, bl7)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                r10 = m;

                u = ((imul(al3, bl0)|0) + (r11 & 0xffff)|0) + (r3 & 0xffff)|0;
                v = ((imul(ah3, bl0)|0) + (r11 >>> 16)|0) + (r3 >>> 16)|0;
                w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r3 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl1)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                v = ((imul(ah3, bl1)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r4 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl2)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah3, bl2)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl3)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah3, bl3)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl4)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah3, bl4)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl5)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah3, bl5)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl6)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah3, bl6)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                u = ((imul(al3, bl7)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                v = ((imul(ah3, bl7)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r10 = (w << 16) | (u & 0xffff);

                r11 = m;

                u = ((imul(al4, bl0)|0) + (r12 & 0xffff)|0) + (r4 & 0xffff)|0;
                v = ((imul(ah4, bl0)|0) + (r12 >>> 16)|0) + (r4 >>> 16)|0;
                w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r4 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl1)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah4, bl1)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl2)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah4, bl2)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl3)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah4, bl3)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl4)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah4, bl4)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl5)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah4, bl5)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl6)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                v = ((imul(ah4, bl6)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r10 = (w << 16) | (u & 0xffff);

                u = ((imul(al4, bl7)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                v = ((imul(ah4, bl7)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r11 = (w << 16) | (u & 0xffff);

                r12 = m;

                u = ((imul(al5, bl0)|0) + (r13 & 0xffff)|0) + (r5 & 0xffff)|0;
                v = ((imul(ah5, bl0)|0) + (r13 >>> 16)|0) + (r5 >>> 16)|0;
                w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r5 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl1)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah5, bl1)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl2)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah5, bl2)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl3)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah5, bl3)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl4)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah5, bl4)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl5)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                v = ((imul(ah5, bl5)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r10 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl6)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                v = ((imul(ah5, bl6)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r11 = (w << 16) | (u & 0xffff);

                u = ((imul(al5, bl7)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                v = ((imul(ah5, bl7)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r12 = (w << 16) | (u & 0xffff);

                r13 = m;

                u = ((imul(al6, bl0)|0) + (r14 & 0xffff)|0) + (r6 & 0xffff)|0;
                v = ((imul(ah6, bl0)|0) + (r14 >>> 16)|0) + (r6 >>> 16)|0;
                w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r6 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl1)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah6, bl1)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl2)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah6, bl2)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl3)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah6, bl3)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl4)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                v = ((imul(ah6, bl4)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r10 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl5)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                v = ((imul(ah6, bl5)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r11 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl6)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                v = ((imul(ah6, bl6)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r12 = (w << 16) | (u & 0xffff);

                u = ((imul(al6, bl7)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;
                v = ((imul(ah6, bl7)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;
                w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r13 = (w << 16) | (u & 0xffff);

                r14 = m;

                u = ((imul(al7, bl0)|0) + (r15 & 0xffff)|0) + (r7 & 0xffff)|0;
                v = ((imul(ah7, bl0)|0) + (r15 >>> 16)|0) + (r7 >>> 16)|0;
                w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r7 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl1)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                v = ((imul(ah7, bl1)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r8 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl2)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                v = ((imul(ah7, bl2)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r9 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl3)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                v = ((imul(ah7, bl3)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r10 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl4)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                v = ((imul(ah7, bl4)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r11 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl5)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                v = ((imul(ah7, bl5)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r12 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl6)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;
                v = ((imul(ah7, bl6)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;
                w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r13 = (w << 16) | (u & 0xffff);

                u = ((imul(al7, bl7)|0) + (m & 0xffff)|0) + (r14 & 0xffff)|0;
                v = ((imul(ah7, bl7)|0) + (m >>> 16)|0) + (r14 >>> 16)|0;
                w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r14 = (w << 16) | (u & 0xffff);

                r15 = m;

                HEAP32[(Rk|0)>>2] = r0,
                HEAP32[(Rk|4)>>2] = r1,
                HEAP32[(Rk|8)>>2] = r2,
                HEAP32[(Rk|12)>>2] = r3,
                HEAP32[(Rk|16)>>2] = r4,
                HEAP32[(Rk|20)>>2] = r5,
                HEAP32[(Rk|24)>>2] = r6,
                HEAP32[(Rk|28)>>2] = r7;
            }

            Rk = (R+(i+j|0))|0;
            HEAP32[(Rk|0)>>2] = r8,
            HEAP32[(Rk|4)>>2] = r9,
            HEAP32[(Rk|8)>>2] = r10,
            HEAP32[(Rk|12)>>2] = r11,
            HEAP32[(Rk|16)>>2] = r12,
            HEAP32[(Rk|20)>>2] = r13,
            HEAP32[(Rk|24)>>2] = r14,
            HEAP32[(Rk|28)>>2] = r15;
        }
/*
        for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {
            Ai = (A+i)|0;

            ah0 = HEAP32[Ai>>2]|0,
            al0 = ah0 & 0xffff,
            ah0 = ah0 >>> 16;

            r1 = 0;

            for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {
                Bj = (B+j)|0;
                Rk = (R+(i+j|0))|0;

                bh0 = HEAP32[Bj>>2]|0,
                bl0 = bh0 & 0xffff,
                bh0 = bh0 >>> 16;

                r0 = HEAP32[Rk>>2]|0;

                u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;
                v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;
                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                r0 = (w << 16) | (u & 0xffff);

                r1 = m;

                HEAP32[Rk>>2] = r0;
            }

            Rk = (R+(i+j|0))|0;
            HEAP32[Rk>>2] = r1;
        }
*/
    }

    /**
     * Fast squaring
     *
     * Exploits the fact:
     *
     *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,
     *
     * where B is a power of 2, so:
     *
     *  2*X0*X1*B = (X0*X1 << 1)*B
     *
     * @param A offset of the argument being squared, 32-byte aligned
     * @param lA length of the argument, multiple of 32
     *
     * @param R offset where to place the result to, 32-byte aligned
     */
    function sqr ( A, lA, R ) {
        A  =  A|0;
        lA = lA|0;
        R  =  R|0;

        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,
            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,
            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,
            u = 0, v = 0, w = 0, c = 0, h = 0, m = 0, r = 0,
            d = 0, dd = 0, p = 0, i = 0, j = 0, k = 0, Ai = 0, Aj = 0, Rk = 0;

        // prepare for iterations
        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
            Rk = R+(i<<1)|0;
            ah0 = HEAP32[(A+i)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;
            u = imul(al0,al0)|0;
            v = (imul(al0,ah0)|0) + (u >>> 17)|0;
            w = (imul(ah0,ah0)|0) + (v >>> 15)|0;
            HEAP32[(Rk)>>2] = (v << 17) | (u & 0x1ffff);
            HEAP32[(Rk|4)>>2] = w;
        }

        // unrolled 1st iteration
        for ( p = 0; (p|0) < (lA|0); p = (p+8)|0 ) {
            Ai = A+p|0, Rk = R+(p<<1)|0;

            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;

            bh0 = HEAP32[(Ai|4)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16;

            u = imul(al0,bl0)|0;
            v = (imul(al0,bh0)|0) + (u >>> 16)|0;
            w = (imul(ah0,bl0)|0) + (v & 0xffff)|0;
            m = ((imul(ah0,bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;

            r = HEAP32[(Rk|4)>>2]|0;
            u = (r & 0xffff) + ((u & 0xffff) << 1)|0;
            w = ((r >>> 16) + ((w & 0xffff) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|4)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|8)>>2]|0;
            u = ((r & 0xffff) + ((m & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((m >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            if ( c ) {
                r = HEAP32[(Rk|12)>>2]|0;
                u = (r & 0xffff) + c|0;
                w = (r >>> 16) + (u >>> 16)|0;
                HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);
            }
        }

        // unrolled 2nd iteration
        for ( p = 0; (p|0) < (lA|0); p = (p+16)|0 ) {
            Ai = A+p|0, Rk = R+(p<<1)|0;

            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16;

            bh0 = HEAP32[(Ai|8)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
            bh1 = HEAP32[(Ai|12)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16;

            u = imul(al0, bl0)|0;
            v = imul(ah0, bl0)|0;
            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r0 = (w << 16) | (u & 0xffff);

            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;
            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;
            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r1 = (w << 16) | (u & 0xffff);

            r2 = m;

            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;
            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;
            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r1 = (w << 16) | (u & 0xffff);

            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r2 = (w << 16) | (u & 0xffff);

            r3 = m;

            r = HEAP32[(Rk|8)>>2]|0;
            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;
            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|12)>>2]|0;
            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;
            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|16)>>2]|0;
            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|20)>>2]|0;
            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            for ( k = 24; !!c & ( (k|0) < 32 ); k = (k+4)|0 ) {
                r = HEAP32[(Rk|k)>>2]|0;
                u = (r & 0xffff) + c|0;
                w = (r >>> 16) + (u >>> 16)|0;
                HEAP32[(Rk|k)>>2] = (w << 16) | (u & 0xffff);
                c = w >>> 16;
            }
        }

        // unrolled 3rd iteration
        for ( p = 0; (p|0) < (lA|0); p = (p+32)|0 ) {
            Ai = A+p|0, Rk = R+(p<<1)|0;

            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,
            ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,
            ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16;

            bh0 = HEAP32[(Ai|16)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
            bh1 = HEAP32[(Ai|20)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,
            bh2 = HEAP32[(Ai|24)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,
            bh3 = HEAP32[(Ai|28)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16;

            u = imul(al0, bl0)|0;
            v = imul(ah0, bl0)|0;
            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r0 = (w << 16) | (u & 0xffff);

            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;
            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;
            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r1 = (w << 16) | (u & 0xffff);

            u = (imul(al0, bl2)|0) + (m & 0xffff)|0;
            v = (imul(ah0, bl2)|0) + (m >>> 16)|0;
            w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r2 = (w << 16) | (u & 0xffff);

            u = (imul(al0, bl3)|0) + (m & 0xffff)|0;
            v = (imul(ah0, bl3)|0) + (m >>> 16)|0;
            w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r3 = (w << 16) | (u & 0xffff);

            r4 = m;

            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;
            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;
            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r1 = (w << 16) | (u & 0xffff);

            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r2 = (w << 16) | (u & 0xffff);

            u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r3 = (w << 16) | (u & 0xffff);

            u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r4 = (w << 16) | (u & 0xffff);

            r5 = m;

            u = (imul(al2, bl0)|0) + (r2 & 0xffff)|0;
            v = (imul(ah2, bl0)|0) + (r2 >>> 16)|0;
            w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r2 = (w << 16) | (u & 0xffff);

            u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r3 = (w << 16) | (u & 0xffff);

            u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r4 = (w << 16) | (u & 0xffff);

            u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r5 = (w << 16) | (u & 0xffff);

            r6 = m;

            u = (imul(al3, bl0)|0) + (r3 & 0xffff)|0;
            v = (imul(ah3, bl0)|0) + (r3 >>> 16)|0;
            w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r3 = (w << 16) | (u & 0xffff);

            u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r4 = (w << 16) | (u & 0xffff);

            u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r5 = (w << 16) | (u & 0xffff);

            u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
            v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
            w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
            m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
            r6 = (w << 16) | (u & 0xffff);

            r7 = m;

            r = HEAP32[(Rk|16)>>2]|0;
            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;
            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|20)>>2]|0;
            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;
            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|24)>>2]|0;
            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|24)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk|28)>>2]|0;
            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk|28)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk+32)>>2]|0;
            u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk+32)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk+36)>>2]|0;
            u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk+36)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk+40)>>2]|0;
            u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk+40)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            r = HEAP32[(Rk+44)>>2]|0;
            u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;
            w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;
            HEAP32[(Rk+44)>>2] = (w << 16) | (u & 0xffff);
            c = w >>> 16;

            for ( k = 48; !!c & ( (k|0) < 64 ); k = (k+4)|0 ) {
                r = HEAP32[(Rk+k)>>2]|0;
                u = (r & 0xffff) + c|0;
                w = (r >>> 16) + (u >>> 16)|0;
                HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                c = w >>> 16;
            }
        }

        // perform iterations
        for ( d = 32; (d|0) < (lA|0); d = d << 1 ) { // depth loop
            dd = d << 1;

            for ( p = 0; (p|0) < (lA|0); p = (p+dd)|0 ) { // part loop
                Rk = R+(p<<1)|0;

                h = 0;
                for ( i = 0; (i|0) < (d|0); i = (i+32)|0 ) { // multiply-and-add loop
                    Ai = (A+p|0)+i|0;

                    ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
                    ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,
                    ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,
                    ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16,
                    ah4 = HEAP32[(Ai|16)>>2]|0, al4 = ah4 & 0xffff, ah4 = ah4 >>> 16,
                    ah5 = HEAP32[(Ai|20)>>2]|0, al5 = ah5 & 0xffff, ah5 = ah5 >>> 16,
                    ah6 = HEAP32[(Ai|24)>>2]|0, al6 = ah6 & 0xffff, ah6 = ah6 >>> 16,
                    ah7 = HEAP32[(Ai|28)>>2]|0, al7 = ah7 & 0xffff, ah7 = ah7 >>> 16;

                    r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = c = 0;

                    for ( j = 0; (j|0) < (d|0); j = (j+32)|0 ) {
                        Aj = ((A+p|0)+d|0)+j|0;

                        bh0 = HEAP32[(Aj)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
                        bh1 = HEAP32[(Aj|4)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,
                        bh2 = HEAP32[(Aj|8)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,
                        bh3 = HEAP32[(Aj|12)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16,
                        bh4 = HEAP32[(Aj|16)>>2]|0, bl4 = bh4 & 0xffff, bh4 = bh4 >>> 16,
                        bh5 = HEAP32[(Aj|20)>>2]|0, bl5 = bh5 & 0xffff, bh5 = bh5 >>> 16,
                        bh6 = HEAP32[(Aj|24)>>2]|0, bl6 = bh6 & 0xffff, bh6 = bh6 >>> 16,
                        bh7 = HEAP32[(Aj|28)>>2]|0, bl7 = bh7 & 0xffff, bh7 = bh7 >>> 16;

                        r0 = r1 = r2 = r3 = r4 = r5 = r6 = r7 = 0;

                        u = ((imul(al0, bl0)|0) + (r0 & 0xffff)|0) + (r8 & 0xffff)|0;
                        v = ((imul(ah0, bl0)|0) + (r0 >>> 16)|0) + (r8 >>> 16)|0;
                        w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r0 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl1)|0) + (r1 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl1)|0) + (r1 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r1 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl2)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl2)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r2 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl3)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl3)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r3 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl4)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl4)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r4 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl5)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl5)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl6)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl6)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al0, bl7)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah0, bl7)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        r8 = m;

                        u = ((imul(al1, bl0)|0) + (r1 & 0xffff)|0) + (r9 & 0xffff)|0;
                        v = ((imul(ah1, bl0)|0) + (r1 >>> 16)|0) + (r9 >>> 16)|0;
                        w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r1 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r2 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r3 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r4 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl4)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl4)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl5)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl5)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl6)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl6)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al1, bl7)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah1, bl7)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        r9 = m;

                        u = ((imul(al2, bl0)|0) + (r2 & 0xffff)|0) + (r10 & 0xffff)|0;
                        v = ((imul(ah2, bl0)|0) + (r2 >>> 16)|0) + (r10 >>> 16)|0;
                        w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r2 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r3 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r4 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl4)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl4)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl5)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl5)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl6)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl6)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al2, bl7)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah2, bl7)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        r10 = m;

                        u = ((imul(al3, bl0)|0) + (r3 & 0xffff)|0) + (r11 & 0xffff)|0;
                        v = ((imul(ah3, bl0)|0) + (r3 >>> 16)|0) + (r11 >>> 16)|0;
                        w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r3 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r4 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl4)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl4)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl5)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl5)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl6)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl6)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        u = ((imul(al3, bl7)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah3, bl7)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r10 = (w << 16) | (u & 0xffff);

                        r11 = m;

                        u = ((imul(al4, bl0)|0) + (r4 & 0xffff)|0) + (r12 & 0xffff)|0;
                        v = ((imul(ah4, bl0)|0) + (r4 >>> 16)|0) + (r12 >>> 16)|0;
                        w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r4 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl1)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl1)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl2)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl2)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl3)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl3)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl4)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl4)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl5)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl5)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl6)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl6)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r10 = (w << 16) | (u & 0xffff);

                        u = ((imul(al4, bl7)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah4, bl7)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r11 = (w << 16) | (u & 0xffff);

                        r12 = m;

                        u = ((imul(al5, bl0)|0) + (r5 & 0xffff)|0) + (r13 & 0xffff)|0;
                        v = ((imul(ah5, bl0)|0) + (r5 >>> 16)|0) + (r13 >>> 16)|0;
                        w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r5 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl1)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl1)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl2)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl2)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl3)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl3)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl4)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl4)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl5)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl5)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r10 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl6)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl6)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r11 = (w << 16) | (u & 0xffff);

                        u = ((imul(al5, bl7)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah5, bl7)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r12 = (w << 16) | (u & 0xffff);

                        r13 = m;

                        u = ((imul(al6, bl0)|0) + (r6 & 0xffff)|0) + (r14 & 0xffff)|0;
                        v = ((imul(ah6, bl0)|0) + (r6 >>> 16)|0) + (r14 >>> 16)|0;
                        w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r6 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl1)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl1)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl2)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl2)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl3)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl3)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl4)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl4)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r10 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl5)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl5)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r11 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl6)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl6)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r12 = (w << 16) | (u & 0xffff);

                        u = ((imul(al6, bl7)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah6, bl7)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r13 = (w << 16) | (u & 0xffff);

                        r14 = m;

                        u = ((imul(al7, bl0)|0) + (r7 & 0xffff)|0) + (r15 & 0xffff)|0;
                        v = ((imul(ah7, bl0)|0) + (r7 >>> 16)|0) + (r15 >>> 16)|0;
                        w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r7 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl1)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl1)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r8 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl2)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl2)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r9 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl3)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl3)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r10 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl4)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl4)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r11 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl5)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl5)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r12 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl6)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl6)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r13 = (w << 16) | (u & 0xffff);

                        u = ((imul(al7, bl7)|0) + (r14 & 0xffff)|0) + (m & 0xffff)|0;
                        v = ((imul(ah7, bl7)|0) + (r14 >>> 16)|0) + (m >>> 16)|0;
                        w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                        m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                        r14 = (w << 16) | (u & 0xffff);

                        r15 = m;

                        k = d+(i+j|0)|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r0 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;

                        k = k+4|0;
                        r = HEAP32[(Rk+k)>>2]|0;
                        u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;
                        w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;
                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                        c = w >>> 16;
                    }

                    k = d+(i+j|0)|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = (((r & 0xffff) + ((r8 & 0xffff) << 1)|0) + c|0) + h|0;
                    w = ((r >>> 16) + ((r8 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r9 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r9 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r10 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r10 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r11 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r11 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r12 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r12 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r13 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r13 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r14 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r14 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    c = w >>> 16;

                    k = k+4|0;
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = ((r & 0xffff) + ((r15 & 0xffff) << 1)|0) + c|0;
                    w = ((r >>> 16) + ((r15 >>> 16) << 1)|0) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    h = w >>> 16;
                }

                for ( k = k+4|0; !!h & ( (k|0) < (dd<<1) ); k = (k+4)|0 ) { // carry propagation loop
                    r = HEAP32[(Rk+k)>>2]|0;
                    u = (r & 0xffff) + h|0;
                    w = (r >>> 16) + (u >>> 16)|0;
                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                    h = w >>> 16;
                }
            }
        }
    }

    /**
     * Conventional division
     *
     * @param A offset of the numerator, 32-byte aligned
     * @param lA length of the numerator, multiple of 32
     *
     * @param B offset of the divisor, 32-byte aligned
     * @param lB length of the divisor, multiple of 32
     *
     * @param R offset where to place the remainder to, 32-byte aligned
     *
     * @param Q offser where to place the quotient to, 32-byte aligned
     */

    function div ( N, lN, D, lD, Q ) {
        N  =  N|0;
        lN = lN|0
        D  =  D|0;
        lD = lD|0
        Q  =  Q|0;

        var n = 0, d = 0, e = 0,
            u1 = 0, u0 = 0,
            v0 = 0, vh = 0, vl = 0,
            qh = 0, ql = 0, rh = 0, rl = 0,
            t1 = 0, t2 = 0, m = 0, c = 0,
            i = 0, j = 0, k = 0;

        // number of significant limbs in `N` (multiplied by 4)
        for ( i = (lN-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {
            n = HEAP32[(N+i)>>2]|0;
            if ( n ) {
                lN = i;
                break;
            }
        }

        // number of significant limbs in `D` (multiplied by 4)
        for ( i = (lD-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {
            d = HEAP32[(D+i)>>2]|0;
            if ( d ) {
                lD = i;
                break;
            }
        }

        // `D` is zero? WTF?!

        // calculate `e` — the power of 2 of the normalization factor
        while ( (d & 0x80000000) == 0 ) {
            d = d << 1;
            e = e + 1|0;
        }

        // normalize `N` in place
        u0 = HEAP32[(N+lN)>>2]|0;
        if ( e ) {
            u1 = u0>>>(32-e|0);
            for ( i = (lN-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                n = HEAP32[(N+i)>>2]|0;
                HEAP32[(N+i+4)>>2] = (u0 << e) | ( e ? n >>> (32-e|0) : 0 );
                u0 = n;
            }
            HEAP32[N>>2] = u0 << e;
        }

        // normalize `D` in place
        if ( e ) {
            v0 = HEAP32[(D+lD)>>2]|0;
            for ( i = (lD-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                d = HEAP32[(D+i)>>2]|0;
                HEAP32[(D+i+4)>>2] = (v0 << e) | ( d >>> (32-e|0) );
                v0 = d;
            }
            HEAP32[D>>2] = v0 << e;
        }

        // divisor parts won't change
        v0 = HEAP32[(D+lD)>>2]|0;
        vh = v0 >>> 16, vl = v0 & 0xffff;

        // perform division
        for ( i = lN; (i|0) >= (lD|0); i = (i-4)|0 ) {
            j = (i-lD)|0;

            // estimate high part of the quotient
            u0 = HEAP32[(N+i)>>2]|0;
            qh = ( (u1>>>0) / (vh>>>0) )|0, rh = ( (u1>>>0) % (vh>>>0) )|0, t1 = imul(qh, vl)|0;
            while ( ( (qh|0) == 0x10000 ) | ( (t1>>>0) > (((rh << 16)|(u0 >>> 16))>>>0) ) ) {
                qh = (qh-1)|0, rh = (rh+vh)|0, t1 = (t1-vl)|0;
                if ( (rh|0) >= 0x10000 ) break;
            }

            // bulk multiply-and-subtract
            // m - multiplication carry, c - subtraction carry
            m = 0, c = 0;
            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                d = HEAP32[(D+k)>>2]|0;
                t1 = (imul(qh, d & 0xffff)|0) + (m >>> 16)|0;
                t2 = (imul(qh, d >>> 16)|0) + (t1 >>> 16)|0;
                d = (m & 0xffff) | (t1 << 16);
                m = t2;
                n = HEAP32[(N+j+k)>>2]|0;
                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;
                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;
                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
                c = t2 >> 16;
            }
            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;
            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;
            u1 = (t2 << 16) | (t1 & 0xffff);
            c = t2 >> 16;

            // add `D` back if got carry-out
            if ( c ) {
                qh = (qh-1)|0;
                c = 0;
                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                    d = HEAP32[(D+k)>>2]|0;
                    n = HEAP32[(N+j+k)>>2]|0;
                    t1 = (n & 0xffff) + c|0;
                    t2 = (n >>> 16) + d + (t1 >>> 16)|0;
                    HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
                    c = t2 >>> 16;
                }
                u1 = (u1+c)|0;
            }

            // estimate low part of the quotient
            u0 = HEAP32[(N+i)>>2]|0;
            n = (u1 << 16) | (u0 >>> 16);
            ql = ( (n>>>0) / (vh>>>0) )|0, rl = ( (n>>>0) % (vh>>>0) )|0, t1 = imul(ql, vl)|0;
            while ( ( (ql|0) == 0x10000 ) | ( (t1>>>0) > (((rl << 16)|(u0 & 0xffff))>>>0) ) ) {
                ql = (ql-1)|0, rl = (rl+vh)|0, t1 = (t1-vl)|0;
                if ( (rl|0) >= 0x10000 ) break;
            }

            // bulk multiply-and-subtract
            // m - multiplication carry, c - subtraction carry
            m = 0, c = 0;
            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                d = HEAP32[(D+k)>>2]|0;
                t1 = (imul(ql, d & 0xffff)|0) + (m & 0xffff)|0;
                t2 = ((imul(ql, d >>> 16)|0) + (t1 >>> 16)|0) + (m >>> 16)|0;
                d = (t1 & 0xffff) | (t2 << 16);
                m = t2 >>> 16;
                n = HEAP32[(N+j+k)>>2]|0;
                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;
                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;
                c = t2 >> 16;
                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
            }
            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;
            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;
            c = t2 >> 16;

            // add `D` back if got carry-out
            if ( c ) {
                ql = (ql-1)|0;
                c = 0;
                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                    d = HEAP32[(D+k)>>2]|0;
                    n = HEAP32[(N+j+k)>>2]|0;
                    t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;
                    t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;
                    c = t2 >>> 16;
                    HEAP32[(N+j+k)>>2] = (t1 & 0xffff) | (t2 << 16);
                }
            }

            // got quotient limb
            HEAP32[(Q+j)>>2] = (qh << 16) | ql;

            u1 = HEAP32[(N+i)>>2]|0;
        }

        if ( e ) {
            // TODO denormalize `D` in place

            // denormalize `N` in place
            u0 = HEAP32[N>>2]|0;
            for ( i = 4; (i|0) <= (lD|0); i = (i+4)|0 ) {
                n = HEAP32[(N+i)>>2]|0;
                HEAP32[(N+i-4)>>2] = ( n << (32-e|0) ) | (u0 >>> e);
                u0 = n;
            }
            HEAP32[(N+lD)>>2] = u0 >>> e;
        }
    }

    /**
     * Montgomery modular reduction
     *
     * Definition:
     *
     *  MREDC(A) = A × X (mod N),
     *  M × X = N × Y + 1,
     *
     * where M = 2^(32*m) such that N < M and A < N×M
     *
     * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.
     */
    function mredc ( A, lA, N, lN, y, R ) {
        A  =  A|0;
        lA = lA|0;
        N  =  N|0;
        lN = lN|0;
        y  =  y|0;
        R  =  R|0;

        var T = 0,
            c = 0, uh = 0, ul = 0, vl = 0, vh = 0, w0 = 0, w1 = 0, w2 = 0, r0 = 0, r1 = 0,
            i = 0, j = 0, k = 0;

        T = salloc(lN<<1)|0;
        z(lN<<1, 0, T);

        cp( lA, A, T );

        // HAC 14.32
        for ( i = 0; (i|0) < (lN|0); i = (i+4)|0 ) {
            uh = HEAP32[(T+i)>>2]|0, ul = uh & 0xffff, uh = uh >>> 16;
            vh = y >>> 16, vl = y & 0xffff;
            w0 = imul(ul,vl)|0, w1 = ( (imul(ul,vh)|0) + (imul(uh,vl)|0) | 0 ) + (w0 >>> 16) | 0;
            ul = w0 & 0xffff, uh = w1 & 0xffff;
            r1 = 0;
            for ( j = 0; (j|0) < (lN|0); j = (j+4)|0 ) {
                k = (i+j)|0;
                vh = HEAP32[(N+j)>>2]|0, vl = vh & 0xffff, vh = vh >>> 16;
                r0 = HEAP32[(T+k)>>2]|0;
                w0 = ((imul(ul, vl)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;
                w1 = ((imul(ul, vh)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;
                w2 = ((imul(uh, vl)|0) + (w1 & 0xffff)|0) + (w0 >>> 16)|0;
                r1 = ((imul(uh, vh)|0) + (w2 >>> 16)|0) + (w1 >>> 16)|0;
                r0 = (w2 << 16) | (w0 & 0xffff);
                HEAP32[(T+k)>>2] = r0;
            }
            k = (i+j)|0;
            r0 = HEAP32[(T+k)>>2]|0;
            w0 = ((r0 & 0xffff) + (r1 & 0xffff)|0) + c|0;
            w1 = ((r0 >>> 16) + (r1 >>> 16)|0) + (w0 >>> 16)|0;
            HEAP32[(T+k)>>2] = (w1 << 16) | (w0 & 0xffff);
            c = w1 >>> 16;
        }

        cp( lN, (T+lN)|0, R );

        sfree(lN<<1);

        if ( c | ( (cmp( N, lN, R, lN )|0) <= 0 ) ) {
            sub( R, lN, N, lN, R, lN )|0;
        }
    }

    return {
        sreset: sreset,
        salloc: salloc,
        sfree:  sfree,
        z: z,
        tst: tst,
        neg: neg,
        cmp: cmp,
        add: add,
        sub: sub,
        mul: mul,
        sqr: sqr,
        div: div,
        mredc: mredc
    };
}


/***/ }),

/***/ "./src/AsmCrypto/hash/sha1/sha1.asm.js":
/*!*********************************************!*\
  !*** ./src/AsmCrypto/hash/sha1/sha1.asm.js ***!
  \*********************************************/
/*! namespace exports */
/*! export sha1_asm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha1_asm": () => /* binding */ sha1_asm
/* harmony export */ });
var sha1_asm = function ( stdlib, foreign, buffer ) {
    "use asm";

    // SHA256 state
    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0,
        TOTAL0 = 0, TOTAL1 = 0;

    // HMAC state
    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,
        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;

    // I/O buffer
    var HEAP = new stdlib.Uint8Array(buffer);

    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {
        w0 = w0|0;
        w1 = w1|0;
        w2 = w2|0;
        w3 = w3|0;
        w4 = w4|0;
        w5 = w5|0;
        w6 = w6|0;
        w7 = w7|0;
        w8 = w8|0;
        w9 = w9|0;
        w10 = w10|0;
        w11 = w11|0;
        w12 = w12|0;
        w13 = w13|0;
        w14 = w14|0;
        w15 = w15|0;

        var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,
            w16 = 0, w17 = 0, w18 = 0, w19 = 0,
            w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,
            w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,
            w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,
            w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,
            w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,
            w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;

        a = H0;
        b = H1;
        c = H2;
        d = H3;
        e = H4;

        // 0
        t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 1
        t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 2
        t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 3
        t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 4
        t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 5
        t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 6
        t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 7
        t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 8
        t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 9
        t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 10
        t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 11
        t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 12
        t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 13
        t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 14
        t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 15
        t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 16
        n = w13 ^ w8 ^ w2 ^ w0;
        w16 = (n << 1) | (n >>> 31);
        t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 17
        n = w14 ^ w9 ^ w3 ^ w1;
        w17 = (n << 1) | (n >>> 31);
        t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 18
        n = w15 ^ w10 ^ w4 ^ w2;
        w18 = (n << 1) | (n >>> 31);
        t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 19
        n = w16 ^ w11 ^ w5 ^ w3;
        w19 = (n << 1) | (n >>> 31);
        t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 20
        n = w17 ^ w12 ^ w6 ^ w4;
        w20 = (n << 1) | (n >>> 31);
        t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 21
        n = w18 ^ w13 ^ w7 ^ w5;
        w21 = (n << 1) | (n >>> 31);
        t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 22
        n = w19 ^ w14 ^ w8 ^ w6;
        w22 = (n << 1) | (n >>> 31);
        t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 23
        n = w20 ^ w15 ^ w9 ^ w7;
        w23 = (n << 1) | (n >>> 31);
        t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 24
        n = w21 ^ w16 ^ w10 ^ w8;
        w24 = (n << 1) | (n >>> 31);
        t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 25
        n = w22 ^ w17 ^ w11 ^ w9;
        w25 = (n << 1) | (n >>> 31);
        t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 26
        n = w23 ^ w18 ^ w12 ^ w10;
        w26 = (n << 1) | (n >>> 31);
        t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 27
        n = w24 ^ w19 ^ w13 ^ w11;
        w27 = (n << 1) | (n >>> 31);
        t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 28
        n = w25 ^ w20 ^ w14 ^ w12;
        w28 = (n << 1) | (n >>> 31);
        t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 29
        n = w26 ^ w21 ^ w15 ^ w13;
        w29 = (n << 1) | (n >>> 31);
        t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 30
        n = w27 ^ w22 ^ w16 ^ w14;
        w30 = (n << 1) | (n >>> 31);
        t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 31
        n = w28 ^ w23 ^ w17 ^ w15;
        w31 = (n << 1) | (n >>> 31);
        t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 32
        n = w29 ^ w24 ^ w18 ^ w16;
        w32 = (n << 1) | (n >>> 31);
        t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 33
        n = w30 ^ w25 ^ w19 ^ w17;
        w33 = (n << 1) | (n >>> 31);
        t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 34
        n = w31 ^ w26 ^ w20 ^ w18;
        w34 = (n << 1) | (n >>> 31);
        t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 35
        n = w32 ^ w27 ^ w21 ^ w19;
        w35 = (n << 1) | (n >>> 31);
        t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 36
        n = w33 ^ w28 ^ w22 ^ w20;
        w36 = (n << 1) | (n >>> 31);
        t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 37
        n = w34 ^ w29 ^ w23 ^ w21;
        w37 = (n << 1) | (n >>> 31);
        t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 38
        n = w35 ^ w30 ^ w24 ^ w22;
        w38 = (n << 1) | (n >>> 31);
        t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 39
        n = w36 ^ w31 ^ w25 ^ w23;
        w39 = (n << 1) | (n >>> 31);
        t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 40
        n = w37 ^ w32 ^ w26 ^ w24;
        w40 = (n << 1) | (n >>> 31);
        t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 41
        n = w38 ^ w33 ^ w27 ^ w25;
        w41 = (n << 1) | (n >>> 31);
        t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 42
        n = w39 ^ w34 ^ w28 ^ w26;
        w42 = (n << 1) | (n >>> 31);
        t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 43
        n = w40 ^ w35 ^ w29 ^ w27;
        w43 = (n << 1) | (n >>> 31);
        t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 44
        n = w41 ^ w36 ^ w30 ^ w28;
        w44 = (n << 1) | (n >>> 31);
        t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 45
        n = w42 ^ w37 ^ w31 ^ w29;
        w45 = (n << 1) | (n >>> 31);
        t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 46
        n = w43 ^ w38 ^ w32 ^ w30;
        w46 = (n << 1) | (n >>> 31);
        t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 47
        n = w44 ^ w39 ^ w33 ^ w31;
        w47 = (n << 1) | (n >>> 31);
        t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 48
        n = w45 ^ w40 ^ w34 ^ w32;
        w48 = (n << 1) | (n >>> 31);
        t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 49
        n = w46 ^ w41 ^ w35 ^ w33;
        w49 = (n << 1) | (n >>> 31);
        t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 50
        n = w47 ^ w42 ^ w36 ^ w34;
        w50 = (n << 1) | (n >>> 31);
        t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 51
        n = w48 ^ w43 ^ w37 ^ w35;
        w51 = (n << 1) | (n >>> 31);
        t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 52
        n = w49 ^ w44 ^ w38 ^ w36;
        w52 = (n << 1) | (n >>> 31);
        t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 53
        n = w50 ^ w45 ^ w39 ^ w37;
        w53 = (n << 1) | (n >>> 31);
        t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 54
        n = w51 ^ w46 ^ w40 ^ w38;
        w54 = (n << 1) | (n >>> 31);
        t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 55
        n = w52 ^ w47 ^ w41 ^ w39;
        w55 = (n << 1) | (n >>> 31);
        t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 56
        n = w53 ^ w48 ^ w42 ^ w40;
        w56 = (n << 1) | (n >>> 31);
        t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 57
        n = w54 ^ w49 ^ w43 ^ w41;
        w57 = (n << 1) | (n >>> 31);
        t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 58
        n = w55 ^ w50 ^ w44 ^ w42;
        w58 = (n << 1) | (n >>> 31);
        t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 59
        n = w56 ^ w51 ^ w45 ^ w43;
        w59 = (n << 1) | (n >>> 31);
        t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 60
        n = w57 ^ w52 ^ w46 ^ w44;
        w60 = (n << 1) | (n >>> 31);
        t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 61
        n = w58 ^ w53 ^ w47 ^ w45;
        w61 = (n << 1) | (n >>> 31);
        t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 62
        n = w59 ^ w54 ^ w48 ^ w46;
        w62 = (n << 1) | (n >>> 31);
        t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 63
        n = w60 ^ w55 ^ w49 ^ w47;
        w63 = (n << 1) | (n >>> 31);
        t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 64
        n = w61 ^ w56 ^ w50 ^ w48;
        w64 = (n << 1) | (n >>> 31);
        t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 65
        n = w62 ^ w57 ^ w51 ^ w49;
        w65 = (n << 1) | (n >>> 31);
        t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 66
        n = w63 ^ w58 ^ w52 ^ w50;
        w66 = (n << 1) | (n >>> 31);
        t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 67
        n = w64 ^ w59 ^ w53 ^ w51;
        w67 = (n << 1) | (n >>> 31);
        t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 68
        n = w65 ^ w60 ^ w54 ^ w52;
        w68 = (n << 1) | (n >>> 31);
        t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 69
        n = w66 ^ w61 ^ w55 ^ w53;
        w69 = (n << 1) | (n >>> 31);
        t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 70
        n = w67 ^ w62 ^ w56 ^ w54;
        w70 = (n << 1) | (n >>> 31);
        t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 71
        n = w68 ^ w63 ^ w57 ^ w55;
        w71 = (n << 1) | (n >>> 31);
        t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 72
        n = w69 ^ w64 ^ w58 ^ w56;
        w72 = (n << 1) | (n >>> 31);
        t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 73
        n = w70 ^ w65 ^ w59 ^ w57;
        w73 = (n << 1) | (n >>> 31);
        t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 74
        n = w71 ^ w66 ^ w60 ^ w58;
        w74 = (n << 1) | (n >>> 31);
        t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 75
        n = w72 ^ w67 ^ w61 ^ w59;
        w75 = (n << 1) | (n >>> 31);
        t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 76
        n = w73 ^ w68 ^ w62 ^ w60;
        w76 = (n << 1) | (n >>> 31);
        t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 77
        n = w74 ^ w69 ^ w63 ^ w61;
        w77 = (n << 1) | (n >>> 31);
        t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 78
        n = w75 ^ w70 ^ w64 ^ w62;
        w78 = (n << 1) | (n >>> 31);
        t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        // 79
        n = w76 ^ w71 ^ w65 ^ w63;
        w79 = (n << 1) | (n >>> 31);
        t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

        H0 = ( H0 + a )|0;
        H1 = ( H1 + b )|0;
        H2 = ( H2 + c )|0;
        H3 = ( H3 + d )|0;
        H4 = ( H4 + e )|0;

    }

    function _core_heap ( offset ) {
        offset = offset|0;

        _core(
            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],
            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],
            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],
            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],
            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],
            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],
            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],
            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],
            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],
            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],
            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],
            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],
            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],
            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],
            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],
            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]
        );
    }

    // offset — multiple of 32
    function _state_to_heap ( output ) {
        output = output|0;

        HEAP[output|0] = H0>>>24;
        HEAP[output|1] = H0>>>16&255;
        HEAP[output|2] = H0>>>8&255;
        HEAP[output|3] = H0&255;
        HEAP[output|4] = H1>>>24;
        HEAP[output|5] = H1>>>16&255;
        HEAP[output|6] = H1>>>8&255;
        HEAP[output|7] = H1&255;
        HEAP[output|8] = H2>>>24;
        HEAP[output|9] = H2>>>16&255;
        HEAP[output|10] = H2>>>8&255;
        HEAP[output|11] = H2&255;
        HEAP[output|12] = H3>>>24;
        HEAP[output|13] = H3>>>16&255;
        HEAP[output|14] = H3>>>8&255;
        HEAP[output|15] = H3&255;
        HEAP[output|16] = H4>>>24;
        HEAP[output|17] = H4>>>16&255;
        HEAP[output|18] = H4>>>8&255;
        HEAP[output|19] = H4&255;
    }

    function reset () {
        H0 = 0x67452301;
        H1 = 0xefcdab89;
        H2 = 0x98badcfe;
        H3 = 0x10325476;
        H4 = 0xc3d2e1f0;
        TOTAL0 = TOTAL1 = 0;
    }

    function init ( h0, h1, h2, h3, h4, total0, total1 ) {
        h0 = h0|0;
        h1 = h1|0;
        h2 = h2|0;
        h3 = h3|0;
        h4 = h4|0;
        total0 = total0|0;
        total1 = total1|0;

        H0 = h0;
        H1 = h1;
        H2 = h2;
        H3 = h3;
        H4 = h4;
        TOTAL0 = total0;
        TOTAL1 = total1;
    }

    // offset — multiple of 64
    function process ( offset, length ) {
        offset = offset|0;
        length = length|0;

        var hashed = 0;

        if ( offset & 63 )
            return -1;

        while ( (length|0) >= 64 ) {
            _core_heap(offset);

            offset = ( offset + 64 )|0;
            length = ( length - 64 )|0;

            hashed = ( hashed + 64 )|0;
        }

        TOTAL0 = ( TOTAL0 + hashed )|0;
        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

        return hashed|0;
    }

    // offset — multiple of 64
    // output — multiple of 32
    function finish ( offset, length, output ) {
        offset = offset|0;
        length = length|0;
        output = output|0;

        var hashed = 0,
            i = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        if ( (length|0) >= 64 ) {
            hashed = process( offset, length )|0;
            if ( (hashed|0) == -1 )
                return -1;

            offset = ( offset + hashed )|0;
            length = ( length - hashed )|0;
        }

        hashed = ( hashed + length )|0;
        TOTAL0 = ( TOTAL0 + length )|0;
        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = (TOTAL1 + 1)|0;

        HEAP[offset|length] = 0x80;

        if ( (length|0) >= 56 ) {
            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )
                HEAP[offset|i] = 0x00;
            _core_heap(offset);

            length = 0;

            HEAP[offset|0] = 0;
        }

        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )
            HEAP[offset|i] = 0;

        HEAP[offset|56] = TOTAL1>>>21&255;
        HEAP[offset|57] = TOTAL1>>>13&255;
        HEAP[offset|58] = TOTAL1>>>5&255;
        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;
        HEAP[offset|60] = TOTAL0>>>21&255;
        HEAP[offset|61] = TOTAL0>>>13&255;
        HEAP[offset|62] = TOTAL0>>>5&255;
        HEAP[offset|63] = TOTAL0<<3&255;
        _core_heap(offset);

        if ( ~output )
            _state_to_heap(output);

        return hashed|0;
    }

    function hmac_reset () {
        H0 = I0;
        H1 = I1;
        H2 = I2;
        H3 = I3;
        H4 = I4;
        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    function _hmac_opad () {
        H0 = O0;
        H1 = O1;
        H2 = O2;
        H3 = O3;
        H4 = O4;
        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {
        p0 = p0|0;
        p1 = p1|0;
        p2 = p2|0;
        p3 = p3|0;
        p4 = p4|0;
        p5 = p5|0;
        p6 = p6|0;
        p7 = p7|0;
        p8 = p8|0;
        p9 = p9|0;
        p10 = p10|0;
        p11 = p11|0;
        p12 = p12|0;
        p13 = p13|0;
        p14 = p14|0;
        p15 = p15|0;

        // opad
        reset();
        _core(
            p0 ^ 0x5c5c5c5c,
            p1 ^ 0x5c5c5c5c,
            p2 ^ 0x5c5c5c5c,
            p3 ^ 0x5c5c5c5c,
            p4 ^ 0x5c5c5c5c,
            p5 ^ 0x5c5c5c5c,
            p6 ^ 0x5c5c5c5c,
            p7 ^ 0x5c5c5c5c,
            p8 ^ 0x5c5c5c5c,
            p9 ^ 0x5c5c5c5c,
            p10 ^ 0x5c5c5c5c,
            p11 ^ 0x5c5c5c5c,
            p12 ^ 0x5c5c5c5c,
            p13 ^ 0x5c5c5c5c,
            p14 ^ 0x5c5c5c5c,
            p15 ^ 0x5c5c5c5c
        );
        O0 = H0;
        O1 = H1;
        O2 = H2;
        O3 = H3;
        O4 = H4;

        // ipad
        reset();
        _core(
            p0 ^ 0x36363636,
            p1 ^ 0x36363636,
            p2 ^ 0x36363636,
            p3 ^ 0x36363636,
            p4 ^ 0x36363636,
            p5 ^ 0x36363636,
            p6 ^ 0x36363636,
            p7 ^ 0x36363636,
            p8 ^ 0x36363636,
            p9 ^ 0x36363636,
            p10 ^ 0x36363636,
            p11 ^ 0x36363636,
            p12 ^ 0x36363636,
            p13 ^ 0x36363636,
            p14 ^ 0x36363636,
            p15 ^ 0x36363636
        );
        I0 = H0;
        I1 = H1;
        I2 = H2;
        I3 = H3;
        I4 = H4;

        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    // offset — multiple of 64
    // output — multiple of 32
    function hmac_finish ( offset, length, output ) {
        offset = offset|0;
        length = length|0;
        output = output|0;

        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        hashed = finish( offset, length, -1 )|0;
        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

        _hmac_opad();
        _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );

        if ( ~output )
            _state_to_heap(output);

        return hashed|0;
    }

    // salt is assumed to be already processed
    // offset — multiple of 64
    // output — multiple of 32
    function pbkdf2_generate_block ( offset, length, block, count, output ) {
        offset = offset|0;
        length = length|0;
        block = block|0;
        count = count|0;
        output = output|0;

        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,
            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        // pad block number into heap
        // FIXME probable OOB write
        HEAP[(offset+length)|0]   = block>>>24;
        HEAP[(offset+length+1)|0] = block>>>16&255;
        HEAP[(offset+length+2)|0] = block>>>8&255;
        HEAP[(offset+length+3)|0] = block&255;

        // finish first iteration
        hmac_finish( offset, (length+4)|0, -1 )|0;
        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;
        count = (count-1)|0;

        // perform the rest iterations
        while ( (count|0) > 0 ) {
            hmac_reset();
            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );
            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

            _hmac_opad();
            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );
            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

            h0 = h0 ^ H0;
            h1 = h1 ^ H1;
            h2 = h2 ^ H2;
            h3 = h3 ^ H3;
            h4 = h4 ^ H4;

            count = (count-1)|0;
        }

        H0 = h0;
        H1 = h1;
        H2 = h2;
        H3 = h3;
        H4 = h4;

        if ( ~output )
            _state_to_heap(output);

        return 0;
    }

    return {
      // SHA1
      reset: reset,
      init: init,
      process: process,
      finish: finish,

      // HMAC-SHA1
      hmac_reset: hmac_reset,
      hmac_init: hmac_init,
      hmac_finish: hmac_finish,

      // PBKDF2-HMAC-SHA1
      pbkdf2_generate_block: pbkdf2_generate_block
    }
}


/***/ }),

/***/ "./src/AsmCrypto/hash/sha256/sha256.asm.js":
/*!*************************************************!*\
  !*** ./src/AsmCrypto/hash/sha256/sha256.asm.js ***!
  \*************************************************/
/*! namespace exports */
/*! export sha256_asm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha256_asm": () => /* binding */ sha256_asm
/* harmony export */ });
var sha256_asm = function ( stdlib, foreign, buffer ) {
    "use asm";

    // SHA256 state
    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,
        TOTAL0 = 0, TOTAL1 = 0;

    // HMAC state
    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,
        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;

    // I/O buffer
    var HEAP = new stdlib.Uint8Array(buffer);

    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {
        w0 = w0|0;
        w1 = w1|0;
        w2 = w2|0;
        w3 = w3|0;
        w4 = w4|0;
        w5 = w5|0;
        w6 = w6|0;
        w7 = w7|0;
        w8 = w8|0;
        w9 = w9|0;
        w10 = w10|0;
        w11 = w11|0;
        w12 = w12|0;
        w13 = w13|0;
        w14 = w14|0;
        w15 = w15|0;

        var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;

        a = H0;
        b = H1;
        c = H2;
        d = H3;
        e = H4;
        f = H5;
        g = H6;
        h = H7;
        
        // 0
        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 1
        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x71374491 )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 2
        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb5c0fbcf )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 3
        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xe9b5dba5 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 4
        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x3956c25b )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 5
        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x59f111f1 )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 6
        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x923f82a4 )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 7
        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xab1c5ed5 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 8
        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 9
        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x12835b01 )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 10
        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x243185be )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 11
        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x550c7dc3 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 12
        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x72be5d74 )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 13
        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x80deb1fe )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 14
        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x9bdc06a7 )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 15
        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc19bf174 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 16
        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 17
        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xefbe4786 )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 18
        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x0fc19dc6 )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 19
        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x240ca1cc )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 20
        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x2de92c6f )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 21
        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4a7484aa )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 22
        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5cb0a9dc )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 23
        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x76f988da )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 24
        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 25
        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa831c66d )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 26
        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb00327c8 )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 27
        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xbf597fc7 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 28
        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xc6e00bf3 )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 29
        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd5a79147 )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 30
        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x06ca6351 )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 31
        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x14292967 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 32
        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 33
        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x2e1b2138 )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 34
        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x4d2c6dfc )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 35
        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x53380d13 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 36
        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x650a7354 )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 37
        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x766a0abb )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 38
        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x81c2c92e )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 39
        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x92722c85 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 40
        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 41
        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa81a664b )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 42
        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xc24b8b70 )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 43
        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xc76c51a3 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 44
        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xd192e819 )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 45
        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd6990624 )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 46
        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xf40e3585 )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 47
        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x106aa070 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 48
        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 49
        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x1e376c08 )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 50
        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x2748774c )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 51
        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x34b0bcb5 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 52
        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x391c0cb3 )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 53
        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4ed8aa4a )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 54
        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5b9cca4f )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 55
        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x682e6ff3 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        // 56
        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;
        d = ( d + h )|0;
        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

        // 57
        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x78a5636f )|0;
        c = ( c + g )|0;
        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

        // 58
        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x84c87814 )|0;
        b = ( b + f )|0;
        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

        // 59
        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x8cc70208 )|0;
        a = ( a + e )|0;
        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

        // 60
        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x90befffa )|0;
        h = ( h + d )|0;
        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

        // 61
        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xa4506ceb )|0;
        g = ( g + c )|0;
        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

        // 62
        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xbef9a3f7 )|0;
        f = ( f + b )|0;
        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

        // 63
        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc67178f2 )|0;
        e = ( e + a )|0;
        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

        H0 = ( H0 + a )|0;
        H1 = ( H1 + b )|0;
        H2 = ( H2 + c )|0;
        H3 = ( H3 + d )|0;
        H4 = ( H4 + e )|0;
        H5 = ( H5 + f )|0;
        H6 = ( H6 + g )|0;
        H7 = ( H7 + h )|0;
    }

    function _core_heap ( offset ) {
        offset = offset|0;

        _core(
            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],
            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],
            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],
            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],
            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],
            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],
            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],
            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],
            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],
            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],
            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],
            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],
            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],
            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],
            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],
            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]
        );
    }

    // offset — multiple of 32
    function _state_to_heap ( output ) {
        output = output|0;

        HEAP[output|0] = H0>>>24;
        HEAP[output|1] = H0>>>16&255;
        HEAP[output|2] = H0>>>8&255;
        HEAP[output|3] = H0&255;
        HEAP[output|4] = H1>>>24;
        HEAP[output|5] = H1>>>16&255;
        HEAP[output|6] = H1>>>8&255;
        HEAP[output|7] = H1&255;
        HEAP[output|8] = H2>>>24;
        HEAP[output|9] = H2>>>16&255;
        HEAP[output|10] = H2>>>8&255;
        HEAP[output|11] = H2&255;
        HEAP[output|12] = H3>>>24;
        HEAP[output|13] = H3>>>16&255;
        HEAP[output|14] = H3>>>8&255;
        HEAP[output|15] = H3&255;
        HEAP[output|16] = H4>>>24;
        HEAP[output|17] = H4>>>16&255;
        HEAP[output|18] = H4>>>8&255;
        HEAP[output|19] = H4&255;
        HEAP[output|20] = H5>>>24;
        HEAP[output|21] = H5>>>16&255;
        HEAP[output|22] = H5>>>8&255;
        HEAP[output|23] = H5&255;
        HEAP[output|24] = H6>>>24;
        HEAP[output|25] = H6>>>16&255;
        HEAP[output|26] = H6>>>8&255;
        HEAP[output|27] = H6&255;
        HEAP[output|28] = H7>>>24;
        HEAP[output|29] = H7>>>16&255;
        HEAP[output|30] = H7>>>8&255;
        HEAP[output|31] = H7&255;
    }

    function reset () {
        H0 = 0x6a09e667;
        H1 = 0xbb67ae85;
        H2 = 0x3c6ef372;
        H3 = 0xa54ff53a;
        H4 = 0x510e527f;
        H5 = 0x9b05688c;
        H6 = 0x1f83d9ab;
        H7 = 0x5be0cd19;
        TOTAL0 = TOTAL1 = 0;
    }

    function init ( h0, h1, h2, h3, h4, h5, h6, h7, total0, total1 ) {
        h0 = h0|0;
        h1 = h1|0;
        h2 = h2|0;
        h3 = h3|0;
        h4 = h4|0;
        h5 = h5|0;
        h6 = h6|0;
        h7 = h7|0;
        total0 = total0|0;
        total1 = total1|0;

        H0 = h0;
        H1 = h1;
        H2 = h2;
        H3 = h3;
        H4 = h4;
        H5 = h5;
        H6 = h6;
        H7 = h7;
        TOTAL0 = total0;
        TOTAL1 = total1;
    }

    // offset — multiple of 64
    function process ( offset, length ) {
        offset = offset|0;
        length = length|0;

        var hashed = 0;

        if ( offset & 63 )
            return -1;

        while ( (length|0) >= 64 ) {
            _core_heap(offset);

            offset = ( offset + 64 )|0;
            length = ( length - 64 )|0;

            hashed = ( hashed + 64 )|0;
        }

        TOTAL0 = ( TOTAL0 + hashed )|0;
        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

        return hashed|0;
    }

    // offset — multiple of 64
    // output — multiple of 32
    function finish ( offset, length, output ) {
        offset = offset|0;
        length = length|0;
        output = output|0;

        var hashed = 0,
            i = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        if ( (length|0) >= 64 ) {
            hashed = process( offset, length )|0;
            if ( (hashed|0) == -1 )
                return -1;

            offset = ( offset + hashed )|0;
            length = ( length - hashed )|0;
        }

        hashed = ( hashed + length )|0;
        TOTAL0 = ( TOTAL0 + length )|0;
        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

        HEAP[offset|length] = 0x80;

        if ( (length|0) >= 56 ) {
            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )
                HEAP[offset|i] = 0x00;

            _core_heap(offset);

            length = 0;

            HEAP[offset|0] = 0;
        }

        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )
            HEAP[offset|i] = 0;

        HEAP[offset|56] = TOTAL1>>>21&255;
        HEAP[offset|57] = TOTAL1>>>13&255;
        HEAP[offset|58] = TOTAL1>>>5&255;
        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;
        HEAP[offset|60] = TOTAL0>>>21&255;
        HEAP[offset|61] = TOTAL0>>>13&255;
        HEAP[offset|62] = TOTAL0>>>5&255;
        HEAP[offset|63] = TOTAL0<<3&255;
        _core_heap(offset);

        if ( ~output )
            _state_to_heap(output);

        return hashed|0;
    }

    function hmac_reset () {
        H0 = I0;
        H1 = I1;
        H2 = I2;
        H3 = I3;
        H4 = I4;
        H5 = I5;
        H6 = I6;
        H7 = I7;
        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    function _hmac_opad () {
        H0 = O0;
        H1 = O1;
        H2 = O2;
        H3 = O3;
        H4 = O4;
        H5 = O5;
        H6 = O6;
        H7 = O7;
        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {
        p0 = p0|0;
        p1 = p1|0;
        p2 = p2|0;
        p3 = p3|0;
        p4 = p4|0;
        p5 = p5|0;
        p6 = p6|0;
        p7 = p7|0;
        p8 = p8|0;
        p9 = p9|0;
        p10 = p10|0;
        p11 = p11|0;
        p12 = p12|0;
        p13 = p13|0;
        p14 = p14|0;
        p15 = p15|0;

        // opad
        reset();
        _core(
            p0 ^ 0x5c5c5c5c,
            p1 ^ 0x5c5c5c5c,
            p2 ^ 0x5c5c5c5c,
            p3 ^ 0x5c5c5c5c,
            p4 ^ 0x5c5c5c5c,
            p5 ^ 0x5c5c5c5c,
            p6 ^ 0x5c5c5c5c,
            p7 ^ 0x5c5c5c5c,
            p8 ^ 0x5c5c5c5c,
            p9 ^ 0x5c5c5c5c,
            p10 ^ 0x5c5c5c5c,
            p11 ^ 0x5c5c5c5c,
            p12 ^ 0x5c5c5c5c,
            p13 ^ 0x5c5c5c5c,
            p14 ^ 0x5c5c5c5c,
            p15 ^ 0x5c5c5c5c
        );
        O0 = H0;
        O1 = H1;
        O2 = H2;
        O3 = H3;
        O4 = H4;
        O5 = H5;
        O6 = H6;
        O7 = H7;

        // ipad
        reset();
        _core(
            p0 ^ 0x36363636,
            p1 ^ 0x36363636,
            p2 ^ 0x36363636,
            p3 ^ 0x36363636,
            p4 ^ 0x36363636,
            p5 ^ 0x36363636,
            p6 ^ 0x36363636,
            p7 ^ 0x36363636,
            p8 ^ 0x36363636,
            p9 ^ 0x36363636,
            p10 ^ 0x36363636,
            p11 ^ 0x36363636,
            p12 ^ 0x36363636,
            p13 ^ 0x36363636,
            p14 ^ 0x36363636,
            p15 ^ 0x36363636
        );
        I0 = H0;
        I1 = H1;
        I2 = H2;
        I3 = H3;
        I4 = H4;
        I5 = H5;
        I6 = H6;
        I7 = H7;

        TOTAL0 = 64;
        TOTAL1 = 0;
    }

    // offset — multiple of 64
    // output — multiple of 32
    function hmac_finish ( offset, length, output ) {
        offset = offset|0;
        length = length|0;
        output = output|0;

        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,
            hashed = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        hashed = finish( offset, length, -1 )|0;
        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

        _hmac_opad();
        _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );

        if ( ~output )
            _state_to_heap(output);

        return hashed|0;
    }

    // salt is assumed to be already processed
    // offset — multiple of 64
    // output — multiple of 32
    function pbkdf2_generate_block ( offset, length, block, count, output ) {
        offset = offset|0;
        length = length|0;
        block = block|0;
        count = count|0;
        output = output|0;

        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,
            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;

        if ( offset & 63 )
            return -1;

        if ( ~output )
            if ( output & 31 )
                return -1;

        // pad block number into heap
        // FIXME probable OOB write
        HEAP[(offset+length)|0]   = block>>>24;
        HEAP[(offset+length+1)|0] = block>>>16&255;
        HEAP[(offset+length+2)|0] = block>>>8&255;
        HEAP[(offset+length+3)|0] = block&255;

        // finish first iteration
        hmac_finish( offset, (length+4)|0, -1 )|0;
        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;
        count = (count-1)|0;

        // perform the rest iterations
        while ( (count|0) > 0 ) {
            hmac_reset();
            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );
            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

            _hmac_opad();
            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );
            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

            h0 = h0 ^ H0;
            h1 = h1 ^ H1;
            h2 = h2 ^ H2;
            h3 = h3 ^ H3;
            h4 = h4 ^ H4;
            h5 = h5 ^ H5;
            h6 = h6 ^ H6;
            h7 = h7 ^ H7;

            count = (count-1)|0;
        }

        H0 = h0;
        H1 = h1;
        H2 = h2;
        H3 = h3;
        H4 = h4;
        H5 = h5;
        H6 = h6;
        H7 = h7;

        if ( ~output )
            _state_to_heap(output);

        return 0;
    }

    return {
      // SHA256
      reset: reset,
      init: init,
      process: process,
      finish: finish,

      // HMAC-SHA256
      hmac_reset: hmac_reset,
      hmac_init: hmac_init,
      hmac_finish: hmac_finish,

      // PBKDF2-HMAC-SHA256
      pbkdf2_generate_block: pbkdf2_generate_block
    }
}


/***/ }),

/***/ "?8465":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./src/Game.ts");
/******/ })()
;
//# sourceMappingURL=game.js.map